;id;text
0;9dd7791b-a5e4-49a2-8836-f1c31b278fc7;"Name: AttributeSplitter
Category: Attributes, Strings
Description: Name: AttributeSplitter Category: Attributes, Strings Description: Configuration
Related Transformers: AttributeManager, StringConcatenator, StringFormatter, StringPairReplacer, StringReplacer, StringSearcher, SubstringExtractor"
1;af75a3ba-eff0-4363-bed8-49affca0018e;"Name: RasterBandMinMaxExtractor
Category: Calculated Values, Rasters
Description: Name: RasterBandMinMaxExtractor Category: Calculated Values, Rasters Description: erBandPropertyExtractor
Extracts the band and palette properties of a raster feature and exposes them as attributes.
RasterBandRemover
Removes any selected bands from a raster feature.
RasterBandSeparator
Separates bands or unique band and palette combinations, and outputs either individual raster features or a single new raster feature containing all combinations.
RasterStatisticsCalculator
Calculates statistics on raster bands and adds the results as attributes.

Working with Cells

RasterAspectCalculator
Calculates the aspect (direction of slope) for each cell of a raster. Aspect is measured in degrees from 0 to 360, clockwise from north.
RasterCellCoercer
Creates individual points or polygons for each cell in a raster, optionally extracting band values as z coordinates or attributes.
RasterCellValueCalculator
Evaluates basic arithmetic , minimum, maximum or average operations on the cell values of a pair of rasters.
RasterCellValueReplacer
Replaces a range of band values in a raster with a new single value.
RasterCellValueRounder
Rounds off raster cell values.
RasterSegmenter
Partitions a raster image into arbitrarily sized groups of cells from the input image based on intensity differences in the input raster image cells.
RasterSingularCellValueCalculator
Performs basic arithmetic operations on the cell values of a raster against a numeric value.
RasterSlopeCalculator
Calculates the slope (maximum rate of change in z) for each cell of a raster.

Working with Palettes

RasterPaletteAdder
Creates a palette from an attribute, and adds this palette to all selected bands on a raster.
RasterPaletteExtractor
Creates a string representation of an existing palette on a raster and saves it to an attribute.
RasterPaletteGenerator
Generates a palette out of the selected band(s) of a raster. The output raster will have the selected band(s) replaced by a new band with a palette.
RasterPaletteInterpretationCoercer
Alters the interpretation type of raster palettes.
RasterPaletteNodataSetter
Identifies the palette key that matches a raster band’s Nodata value, and sets a value on it.
RasterPaletteRemover

Related Transformers: RasterBandInterpretationCoercer, RasterBandPropertyExtractor, RasterCellValueCalculator, RasterExpressionEvaluator, RasterInterpretationCoercer, RasterPropertyExtractor, RasterStatisticsCalculator"
2;290aadca-51ec-49b2-abd8-062c8f3a363b;"Name: SolidBuilder
Category: 3D, Geometries
Description: Name: SolidBuilder Category: 3D, Geometries Description:  when the data is already sorted (or read using aSQL ORDER BYstatement) since less work is required of FME. If the data needs ordering, it can be sorted in theworkspace(though the added processing overhead may negate any gains).
Sorting becomes more difficult according to the number of data streams. Multiple streams of data could be almost impossible to sort into the correct order, since all features matching aGroup Byvalue need to arrive before any features (of any feature type or dataset) belonging to the next group. In this case, usingGroup BywithWhen All Features Receivedmay be the equivalent and simpler approach.
As with many scenarios, testing different approaches in yourworkspacewith your data is the only definitive way to identify performance gains.
Drop Voids
The Drop Voids parameter indicates whether or not solid features used to cut voids in containing features should be dropped or output.
Accumulation Mode
Specify how attributes should be accumulated:
Drop Incoming Attributes
All incoming attributes are removed from the features
Merge Incoming Attributes
Merges all attributes from overlapping features
Use Attributes From One Feature
Takes all attributes from one representative feature
Generate List
When enabled, adds a list attribute to the output features, retaining attribute values for multiple input features. A list with the same name is created fortraits.
List Name
Enter a name for the list attribute.
Add To List
All Attributes: Every attribute from all input features that contributed to the output feature will be added to the list specified inList Name.
Selected Attributes: Only the attributes specified in theSelected Attributesparameter will be added to the list specified inList Name.
Selected Attributes
The attributes to be added to the list whenAdd To ListisSelected Attributes.
Void Flag
Name the attribute to contain ""yes"" if that feature was used to cut a void inside some other feature, and ""no"" if that feature did not cut into any other features.

Editing Transformer Parameters

Using a set of menu options, transformer parameters can be assigned b
Related Transformers: "
3;6ad93799-fc60-46e0-9219-ac68daa4b757;"Name: CircularityCalculator
Category: Calculated Values, Data Quality
Description: Name: CircularityCalculator Category: Calculated Values, Data Quality Description: Parameters

Calculation Geometry
IfConvex Hullis specified, the 
 convex hull of the feature is used for the calculation; otherwise, the 
 geometry of the feature (Feature Boundary) is used.
Note that long, thin polygons may still have a fairly high circularity value if they curve around in a U-shape andConvex Hullis specified.
The value returned is:4 * PI * area / (perimeter 
 * perimeter)
Circularity
Name the attribute to contain the angularity calculation.

Editing Transformer Parameters

Using a set of menu options, transformer parameters can be assigned by referencing other elements in theworkspace. More advanced functions, such as an advanced editor and an arithmetic editor, are also available in some transformers. To access a menu of these options, clickbeside the applicable parameter. For more information, seeTransformer Parameter Menu Options.

Defining Values

There are several ways to define a value for use in a Transformer. The simplest is to simply type in a value or string, which can include functions of various types such as attribute references, math and string functions, andworkspaceparameters. There are a number of tools and shortcuts that can assist in constructing values, generally available from the drop-down context menu adjacent to the value field.

Using the Text Editor

The Text Editor provides a convenient way to construct text strings (including regular expressions) from various data sources, such as attributes, parameters, and constants, where the result is used directly inside a parameter.
Text Editor

Using the Arithmetic Editor

The Arithmetic Editor provides a convenient way to construct math expressions from various data sources, such as attributes, parameters, and feature functions, where the result is used directly inside a parameter.
Arithmetic Editor

Conditional Values

Set values depending on one or more test conditions that either pass or fail.
Parameter Condition Definition Dialog

Content

Expressions and strings can include a number of functions, characters, parameters, and more.
When setting values - whether entered directly in a parameter or construc
Related Transformers: "
4;d58c7e1a-fb69-40f8-821e-a361e55505f6;"Name: BaseConverter
Category: Calculated Values, Strings
Description: Name: BaseConverter Category: Calculated Values, Strings Description: ient way to construct math expressions from various data sources, such as attributes, parameters, and feature functions, where the result is used directly inside a parameter.
Arithmetic Editor

Conditional Values

Set values depending on one or more test conditions that either pass or fail.
Parameter Condition Definition Dialog

Content

Expressions and strings can include a number of functions, characters, parameters, and more.
When setting values - whether entered directly in a parameter or constructed using one of the editors - strings and expressions containing String, Math, Date/Time or FME Feature Functions will have those functions evaluated. Therefore, the names of these functions (in the form @<function_name>) should not be used as literal string values.
String Functions
Special Characters
Math Functions
Math Operators
FME Feature Functions
FME Parameters

Dialog Options - Tables

Transformers with table-style parameters have additional tools for populating and manipulating values.
Row Reordering

Enabled once you have clicked on a row item. Choices include:
Cut, Copy, and Paste

Enabled once you have clicked on a row item. Choices include:
Cut, copy, and paste may be used within a transformer, or between transformers.
Filter

Import

Reset/Refresh

Generally resets the table to its initial state, and may provide additional options to remove invalid entries. Behavior varies between transformers.
Note:Not all tools are available in all transformers.

FME Community

TheFME Communityis the place for demos, how-tos, articles, FAQs, and more. Get answers to your questions, learn from other users, and suggest, vote, and comment on new features.
Search forall results about the BaseConverteron theFME Community.
Related Transformers: "
5;ba6e1754-aa69-4907-bdfe-81b7bd5f66f2;"Name: RasterBandAdder
Category: Rasters
Description: Name: RasterBandAdder Category: Rasters Description: Adds a new band to a raster feature.
Jump to Configuration

Typical Uses
Related Transformers: RasterBandCombiner, RasterBandInterpretationCoercer, RasterBandKeeper, RasterBandNameSetter, RasterBandOrderer, RasterBandRemover, RasterBandSeparator, RasterInterpretationCoercer"
6;94a7ff2a-6b3f-45b7-92f1-c2fc582ceeee;"Name: RasterBandOrderer
Category: Rasters
Description: Name: RasterBandOrderer Category: Rasters Description: ording to its rotation angle property, interpolating new cell values, updating all other affected raster properties, and producing an output raster feature with a rotation angle of zero.
RasterSharpener
Enhances the features of a raster image. The RasterSharpener enhances the borders, lines, and curves while reducing noise in the flat areas of the raster image.
RasterSubsetter
Clips raster features using pixel bounds instead of ground coordinates, and optionally adds cells around the perimeter.
RasterTiler
Splits each input raster into a series of tiles by specifying either a tile size in cells/pixels or the number of tiles.
RasterToPolygonCoercer
Creates polygons from input raster features. One polygon is output for each contiguous area of pixels with the same value in the input raster.
WebMapTiler
Creates a series of image tiles that can be utilized by web mapping applications such as Bing™ Maps, Google Maps™, or Web Map Tile Service. This is done by resampling rasters to various different resolutions and then splitting them into tiles.

Working with Bands

RasterBandAdder
Adds a new band to a raster feature.
RasterBandCombiner
Merges coincidental raster features into a single output raster feature, preserving and appending all bands.
RasterBandInterpretationCoercer
Alters the interpretation type of individual raster bands, converting cell values if necessary.

RasterBandKeeper
Removes all unselected bands from a raster feature.
RasterBandMinMaxExtractor
Extracts the minimum and maximum band values, palette keys, and palette values from a raster feature, and adds them to a list attribute.
RasterBandNameSetter
Sets the band name of selected bands on a raster, making raster contents simpler to understand compared to band numbers.
RasterBandNodataRemover
Removes the existing Nodata identifier from selected bands of a raster feature. Any values previously equal to the Nodata value are considered valid data.
RasterBandNodataSetter
Sets a new Nodata value on selected bands of a raster feature.
RasterBandOrderer
Specifies the required order of bands in a raster. Bands are
Related Transformers: RasterBandAdder, RasterBandCombiner, RasterBandKeeper, RasterBandRemover, RasterBandSeparator"
7;55a0fb77-3a3f-476b-8b1d-72d018509abc;"Name: PointOnPointOverlayer
Category: Filters and Joins, Spatial Analysis
Description: Name: PointOnPointOverlayer Category: Filters and Joins, Spatial Analysis Description: How does it work?

The PointOnPointOverlayer compares all point features that enter through thePointinput port against each other. Each point may receive attributes from all other points located within the specified tolerance distance (a spatial join). Points also receive a count of the number of matched points encountered.
Geometry is unaltered.
Aggregates/multipoint geometries can either be deaggregated before processing or rejected.

Examples

In this example, we start with a single point dataset of reported crimes, over many years. The points are routed into the Point input port of the PointOnPointOverlayer.

There are two tasks we want to accomplish.
First, we want to count how many crimes were reported at any given location within the dataset. TheOverlap Countattribute will tell us how many other points were found within 2 meters of the location (as defined in thePoint Toleranceparameter, with the data in a UTM projection, ground units in meters).
Second, we will build alist attributethat contains the type of each report in the location. We enableGenerate List, and add theSelected AttributeTYPEto a list namedIncidentType.

The points are output with no changes to their geometry, but with new attributes added. The example point selected now has an_overlapsvalue of6, indicating that six points (crime reports) in total are at this location.
TheIncidentTypelist collects the Type attribute from each of the matching points.
Related Transformers: AreaOnAreaOverlayer, Bufferer, Clipper, Intersector, LineOnAreaOverlayer, LineOnLineOverlayer, NeighborFinder, PointOnAreaOverlayer, PointOnLineOverlayer, SpatialFilter, SpatialRelator, TopologyBuilder"
8;fb7f34b9-2f4e-45b6-97cb-e1b5ac3e29c5;"Name: AttributeCreator
Category: Attributes
Description: Name: AttributeCreator Category: Attributes Description: Adjacent Feature Attributes are accessed under Advanced: Attribute Value Handling. When turned on, you can specify a number of features preceding and following the current feature to reference in calculating new values.

Suppose we are given the dataset below:
ID
Latitude
Longitude
0
49.1640
-123.061
1
49.1643
-123.063
2
49.1642
-123.062
3
49.1642
-123.064

If theNumber of Prior FeaturesandNumber of Subsequent Featuresparameters are both set to 2, then when the first feature is read, the AttributeCreator has access to the following features:
Feature Reference
ID
Latitude
Longitude
feature[-2]
<missing>
<missing>
<missing>
feature[-1]
<missing>
<missing>
<missing>
current feature
0
49.1640
-123.061
feature[+1]
1
49.1643
-123.063
feature[+2]
2
49.1642
-123.062

Note that some attributes are missing because no features exist prior to the first feature.
After the second feature is read, the window of prior and subsequent features available to the AttributeCreator shifts to produce the following:
Feature Reference
ID
Latitude
Longitude
feature[-2]
<missing>
<missing>
<missing>
feature[-1]
0
49.1640
-123.061
current feature
1
49.1643
-123.063
feature[+1]
2
49.1642
-123.062
feature[+2]
3
49.1642
-123.064

This statement would calculate the average latitude of the two preceding features:

Calculations referencing adjacent features can be created in the Arithmetic Editor and the Text Editor. These editors will list the attributes of the currently processed feature first, then the prior features, then the subsequent features.
Related Transformers: AttributeCopier, AttributeExploder, AttributeKeeper, AttributeManager, AttributeRemover, AttributeRenamer, AttributeValueMapper, BulkAttributeRenamer, BulkAttributeRemover"
9;09661786-009d-48aa-acb2-63829f8dbbef;"Name: RasterBandRemover
Category: Rasters
Description: Name: RasterBandRemover Category: Rasters Description: Input Ports

This transformer accepts only raster features.

Output Ports

Raster features with any selected bands removed.
Non-raster features will be routed to the <Rejected> port, as well as invalid rasters.
Rejected features will have an fme_rejection_code attribute with one of the following values:
INVALID_GEOMETRY_TYPEINVALID_RASTER_NO_BANDS
Rejected Feature Handling:can be set to either terminate the translation or continue running when it encounters a rejected feature. This setting is available both as a defaultFME optionand as aworkspace parameter.

Parameters

This transformer has no parameters.

Editing Transformer Parameters

Using a set of menu options, transformer parameters can be assigned by referencing other elements in theworkspace. More advanced functions, such as an advanced editor and an arithmetic editor, are also available in some transformers. To access a menu of these options, clickbeside the applicable parameter. For more information, seeTransformer Parameter Menu Options.

Defining Values

There are several ways to define a value for use in a Transformer. The simplest is to simply type in a value or string, which can include functions of various types such as attribute references, math and string functions, andworkspaceparameters. There are a number of tools and shortcuts that can assist in constructing values, generally available from the drop-down context menu adjacent to the value field.

Using the Text Editor

The Text Editor provides a convenient way to construct text strings (including regular expressions) from various data sources, such as attributes, parameters, and constants, where the result is used directly inside a parameter.
Text Editor

Using the Arithmetic Editor

The Arithmetic Editor provides a convenient way to construct math expressions from various data sources, such as attributes, parameters, and feature functions, where the result is used directly inside a parameter.
Arithmetic Editor

Conditional Values

Set values depending on one or more test conditions that either pass or fail.
Parameter Condition Definition Dialog
Related Transformers: RasterBandAdder, RasterBandCombiner, RasterBandKeeper, RasterBandSeparator"
10;38e50622-8e4d-4168-95f5-46e591d1e8cb;"Name: DuplicateFilter
Category: Data Quality, Filters and Joins
Description: Name: DuplicateFilter Category: Data Quality, Filters and Joins Description: re Functions
FME Parameters

Dialog Options - Tables

Transformers with table-style parameters have additional tools for populating and manipulating values.
Row Reordering

Enabled once you have clicked on a row item. Choices include:
Cut, Copy, and Paste

Enabled once you have clicked on a row item. Choices include:
Cut, copy, and paste may be used within a transformer, or between transformers.
Filter

Import

Reset/Refresh

Generally resets the table to its initial state, and may provide additional options to remove invalid entries. Behavior varies between transformers.
Note:Not all tools are available in all transformers.

FME Community

TheFME Communityis the place for demos, how-tos, articles, FAQs, and more. Get answers to your questions, learn from other users, and suggest, vote, and comment on new features.
Search forall results about the DuplicateFilteron theFME Community.
Related Transformers: "
11;14604573-f7be-4868-a2c0-89e2811d272c;"Name: PDFPageFormatter
Category: Cartography and Reports
Description: Name: PDFPageFormatter Category: Cartography and Reports Description:  the current values of the page object bounds and will resize the page object on the canvas if changed.
Upper Left X
The X coordinate of the upper left corner of the page object in page units. Changing these values will change the location of the page object on the canvas.
Upper Left Y
The Y coordinate of the upper left corner of the page object in page units. Changing these values will change the location of the page object on the canvas.
Width
The horizontal breadth of the page object in page units. Changing these values will resize the page object on the canvas.
Height
The vertical breadth of the page object in page units. Changing these values will resize the page object on the canvas.
Maintain Aspect Ratio
The normal behavior of the transformer is to capture both the world bounds of the input features, the page bounds and the page object bounds to define the locations and size of the feature on the page. The default behavior is to scale the features in a uniform way in both X and Y dimensions, also known as maintaining the same aspect ratio or relative scaling for the height and width of each input feature geometry.
By default, theMaintain Aspect Ratiosetting ofYeswill use the minimum scale factor for x and y to fit the input feature geometry bounds into the page object bounds, maintaining the shape of the input feature geometries. Conversely, a value ofNowill scale x and y values independently to obtain a better fit of the input features into the page object bounds  at the cost of potentially distorting their shape and location.
Clip Input Features
Features that extend beyond the bounds of the page object were previously clipped to the bounds of the object. This option allows input features to optionally be clipped or to extend beyond the page object boundary when rendered. The new default isNoindicating that the input features will not be clipped to the page object boundary.
Note that in the default case the world rectangle is calculated using the bounds of the input features for this page object and thus when the input features are scaled to match the page object they shoul
Related Transformers: "
12;bf5a216d-706f-48ef-933f-e98e61fa269c;"Name: Tester
Category: Data Quality, Filters and Joins
Description: Name: Tester Category: Data Quality, Filters and Joins Description: Evaluates one or more tests on a feature, and routes the feature 
 according to the outcome of the test(s).
Jump to Configuration

Typical Uses
Related Transformers: AttributeFilter, AttributeRangeFilter, AttributeValidator, GeometryValidator, JSONValidator, TestFilter, XMLValidator"
13;c72d9392-b6d3-4ed3-85b6-b334a94826d6;"Name: RasterExpressionEvaluator
Category: Calculated Values, Rasters
Description: Name: RasterExpressionEvaluator Category: Calculated Values, Rasters Description: alues at the point location.
PointOnRasterValueExtractor
Extracts the band and palette values from a raster at the location of one or more input points and sets them as attributes on the feature.
RasterDEMGenerator
Produces a raster digital elevation model (DEM) by uniformly sampling a Delaunay triangulation generated from input points and breaklines.
VectorOnRasterOverlayer
Rasterizes vector or point cloud features onto an existing raster. For vector features the fme_color attribute sets pixel color, and point clouds may be rendered using their color or intensity components.

Configuration
Related Transformers: ExpressionEvaluator, PointCloudExpressionEvaluator, RasterCellValueCalculator, RasterCellValueReplacer, RasterCellValueRounder, RasterConvolver, RasterSingularCellValueCalculator, RasterStatisticsCalculator"
14;f48a7147-8c08-47f5-abca-ec668f5cae52;"Name: ImageRasterizer
Category: Cartography and Reports, Rasters
Description: Name: ImageRasterizer Category: Cartography and Reports, Rasters Description: es.
RasterBandPropertyExtractor
Extracts the band and palette properties of a raster feature and exposes them as attributes.
RasterBandRemover
Removes any selected bands from a raster feature.
RasterBandSeparator
Separates bands or unique band and palette combinations, and outputs either individual raster features or a single new raster feature containing all combinations.
RasterStatisticsCalculator
Calculates statistics on raster bands and adds the results as attributes.

Working with Cells

RasterAspectCalculator
Calculates the aspect (direction of slope) for each cell of a raster. Aspect is measured in degrees from 0 to 360, clockwise from north.
RasterCellCoercer
Creates individual points or polygons for each cell in a raster, optionally extracting band values as z coordinates or attributes.
RasterCellValueCalculator
Evaluates basic arithmetic , minimum, maximum or average operations on the cell values of a pair of rasters.
RasterCellValueReplacer
Replaces a range of band values in a raster with a new single value.
RasterCellValueRounder
Rounds off raster cell values.
RasterSegmenter
Partitions a raster image into arbitrarily sized groups of cells from the input image based on intensity differences in the input raster image cells.
RasterSingularCellValueCalculator
Performs basic arithmetic operations on the cell values of a raster against a numeric value.
RasterSlopeCalculator
Calculates the slope (maximum rate of change in z) for each cell of a raster.

Working with Palettes

RasterPaletteAdder
Creates a palette from an attribute, and adds this palette to all selected bands on a raster.
RasterPaletteExtractor
Creates a string representation of an existing palette on a raster and saves it to an attribute.
RasterPaletteGenerator
Generates a palette out of the selected band(s) of a raster. The output raster will have the selected band(s) replaced by a new band with a palette.
RasterPaletteInterpretationCoercer
Alters the interpretation type of raster palettes.
RasterPaletteNodataSetter
Identifies the palette key that matches a raster band’s Nodata value, and sets a value on it.
RasterPal
Related Transformers: FeatureColorSetter, MapnikRasterizer, NumericRasterizer, RasterNumericCreator, RasterRGBCreator, VectorOnRasterOverlayer"
15;5c0a1725-63a6-4b9e-912e-bcba2702ac50;"Name: LocalCoordinateSystemSetter
Category: Coordinates
Description: Name: LocalCoordinateSystemSetter Category: Coordinates Description: How does it work?

The LocalCoordinateSystemSetter receives any feature and assigns a specified local coordinate system to it. No geometry is modified, and data is not reprojected.
The local coordinate system may be eitherEquidistant (AZMED)orEqual Area (AZMEA),and a choice of ground units is provided.
The local coordinate system is mapped to a true coordinate system by selecting that coordinate system and entering the X and Y coordinates that match 0,0 in the local coordinate system
Note that Z coordinates are not considered, and so areas or distances are best preserved for geometry at an ellipsoid height of zero (0) meters.
If a feature already has a coordinate system assigned (local or otherwise), it will be overwritten.

Examples

In this example, we have an OBJ file containing a 3D model of a public library. Note that theCoordinate SystemisUnknown, and that the extents would be appropriate coordinates for a local coordinate system.
We know what the local coordinate system should be, and so need to assign it without modifying the feature geometry.

The feature is routed into a LocalCoordinateSystemSetter.

In the parameters dialog, we select aProjection TypeofEquidistant (AZMED)andProjection UnitsofMeters.
Origincoordinates are entered as Lat/Long NAD83.

The output feature now knows its local coordinate system. Note that the extents are unchanged, as the feature’s coordinates have not been modified. .
Related Transformers: CommonLocalReprojector, CoordinateSystemSetter"
16;3a9dc2f2-81ae-4a57-aa0a-37c9d1d7a8f4;"Name: NetworkTopologyCalculator
Category: Calculated Values, Spatial Analysis
Description: Name: NetworkTopologyCalculator Category: Calculated Values, Spatial Analysis Description: o identify performance gains.
Dimension
Select the type of coordinates to use when identifying topological connections:
2D:Usexandycoordinates only, ignoringz.
3D:Usex,yandzcoordinates.
Network ID
Linear input features that are connected will be assigned the same network ID in the Network ID Attribute.

Editing Transformer Parameters

Using a set of menu options, transformer parameters can be assigned by referencing other elements in theworkspace. More advanced functions, such as an advanced editor and an arithmetic editor, are also available in some transformers. To access a menu of these options, clickbeside the applicable parameter. For more information, seeTransformer Parameter Menu Options.

Defining Values

There are several ways to define a value for use in a Transformer. The simplest is to simply type in a value or string, which can include functions of various types such as attribute references, math and string functions, andworkspaceparameters. There are a number of tools and shortcuts that can assist in constructing values, generally available from the drop-down context menu adjacent to the value field.

Using the Text Editor

The Text Editor provides a convenient way to construct text strings (including regular expressions) from various data sources, such as attributes, parameters, and constants, where the result is used directly inside a parameter.
Text Editor

Using the Arithmetic Editor

The Arithmetic Editor provides a convenient way to construct math expressions from various data sources, such as attributes, parameters, and feature functions, where the result is used directly inside a parameter.
Arithmetic Editor

Conditional Values

Set values depending on one or more test conditions that either pass or fail.
Parameter Condition Definition Dialog

Content

Expressions and strings can include a number of functions, characters, parameters, and more.
When setting values - whether entered directly in a parameter or constructed using one of the editors - strings and expressions containing String, Math, Date/Time or FME Feature Functions will have those functions evaluated. Therefore, the n
Related Transformers: NetworkFlowOrientor, ShortestPathFinder, StreamOrderCalculator, StreamPriorityCalculator"
17;8b5f8a86-c7f6-4b2c-82b9-23395dba1ecc;"Name: EthereumConnector
Category: Web
Description: Name: EthereumConnector Category: Web Description: Configuration
Related Transformers: SalesforceConnector, SlackConnector, TrelloConnector"
18;7dd02c91-4911-4bd3-9af8-7047baec2681;"Name: MeshSimplifier
Category: 3D, Geometries
Description: Name: MeshSimplifier Category: 3D, Geometries Description: ty

TheFME Communityis the place for demos, how-tos, articles, FAQs, and more. Get answers to your questions, learn from other users, and suggest, vote, and comment on new features.
Search forall results about the MeshSimplifieron theFME Community.

Examples may contain information licensed under the Open Government Licence – Vancouver and/or the Open Government Licence – Canada.
Related Transformers: MeshMerger, PointCloudSurfaceBuilder"
19;96bf5496-ee11-4359-9e4b-db107f3fb02e;"Name: StreamPriorityCalculator
Category: Calculated Values
Description: Name: StreamPriorityCalculator Category: Calculated Values Description: 
Related Transformers: NetworkFlowOrientor, NetworkTopologyCalculator, ShortestPathFinder, StreamOrderCalculator"
20;b6d482ea-4894-4c6e-ae10-920c422e390f;"Name: RasterObjectDetectorSampleGenerator
Category: Rasters
Description: Name: RasterObjectDetectorSampleGenerator Category: Rasters Description: Input Ports

The transformer accepts any feature but all contents (except parameters) will be ignored and preserved with the output feature.

Output Ports

The Output port returns the original feature and the following attributes:
This port returns a feature with all its original contents and anfme_rejection_messagecontaining the error message if any occur.
Rejected Feature Handling:can be set to either terminate the translation or continue running when it encounters a rejected feature. This setting is available both as a defaultFME optionand as aworkspace parameter.

Parameters

Training a detection model requires a set of negative or background images that do not contain the object you are trying to detect. Depending on the application, you may get away with using random images. However, if your object(s) have a very specific background, you may want to take the positive samples (if you have any) and crop out the object to get some samples that do not contain your object.
Source Directory
Directory containing negative sample images. For best operation, make sure the names do not contain spaces or special characters.
Operation Mode
Source Image
Single image source that will be morphed to generate samples. The source should only contain your image. Image will be overlayed on top of the provided negative samples, twisted, rotated and have its colors tweaked. Those parameters can be tweaked in the Advanced settings.
Number of Samples
Number of artificial samples to be generated.
Width and Height
Width and Height of the detection window of the resulting detection model. Determines the minimum size of the object that the model will be able to detect.
Background Description File
Path to the output background description file. We recommend outputting this file in the subdirectory that contains your directory with negative samples. This file can be input into theRasterObjectDetectionModelTrainerusing theBackground Description Fileparameter.
Prepared Positives File
Output file containing the prepared positive samples. This file can be input intoRasterObjectDetectionModelTrainerusing thePositi
Related Transformers: RasterObjectDetectionModelTrainer, RasterObjectDetector, RasterObjectDetectorSamplePreparer"
21;1ce8f6ca-1e4a-4b6b-881c-69ab600d4a24;"Name: Aggregator
Category: Attributes, Calculated Values, Filters and Joins
Description: Name: Aggregator Category: Attributes, Calculated Values, Filters and Joins Description: able from the drop-down context menu adjacent to the value field.

Using the Text Editor

The Text Editor provides a convenient way to construct text strings (including regular expressions) from various data sources, such as attributes, parameters, and constants, where the result is used directly inside a parameter.
Text Editor

Using the Arithmetic Editor

The Arithmetic Editor provides a convenient way to construct math expressions from various data sources, such as attributes, parameters, and feature functions, where the result is used directly inside a parameter.
Arithmetic Editor

Conditional Values

Set values depending on one or more test conditions that either pass or fail.
Parameter Condition Definition Dialog

Content

Expressions and strings can include a number of functions, characters, parameters, and more.
When setting values - whether entered directly in a parameter or constructed using one of the editors - strings and expressions containing String, Math, Date/Time or FME Feature Functions will have those functions evaluated. Therefore, the names of these functions (in the form @<function_name>) should not be used as literal string values.
String Functions
Special Characters
Math Functions
Math Operators
FME Feature Functions
FME Parameters

Dialog Options - Tables

Transformers with table-style parameters have additional tools for populating and manipulating values.
Row Reordering

Enabled once you have clicked on a row item. Choices include:
Cut, Copy, and Paste

Enabled once you have clicked on a row item. Choices include:
Cut, copy, and paste may be used within a transformer, or between transformers.
Filter

Import

Reset/Refresh

Generally resets the table to its initial state, and may provide additional options to remove invalid entries. Behavior varies between transformers.
Note:Not all tools are available in all transformers.

FME Community

TheFME Communityis the place for demos, how-tos, articles, FAQs, and more. Get answers to your questions, learn from other users, and suggest, vote, and comment on new features.
Search forall results about the Aggregatoron theFME Community.
Related Transformers: "
22;e1ed4eee-c839-4432-b5ce-b0b81c7eea6c;"Name: VariableSetter
Category: Workflows
Description: Name: VariableSetter Category: Workflows Description: Creates and sets the specified variable to the specified value.
The variable can later be read back into an attribute using theVariableRetrievertransformer.

Configuration
Related Transformers: "
23;7df44217-04d1-4f44-a05e-f27f126727e6;"Name: XMLTemplater
Category: 
Description: Name: XMLTemplater Category:  Description: >{fme:get-attribute(""population"")}</population>
<houses>
{fme:process-features(""HOUSE"")}
</houses>
</village>
The template associated with the HOUSE input port creates a <house> element.
<house>
<address>{fme:get-attribute(""address"")}</address>
<owner>{fme:get-attribute(""owner"")}</owner>
</house>
If a single feature enters theRootinput and two features enter the HOUSE input, the resulting XML document could look like this:
<village>
<name>Anytown, USA</name>
<population>2568</population>
<houses>
<house>
<address>123 Main Street</address>
<owner>John Doe</owner>
</house>
<house>
<address>324 Main Street</address>
<owner>Jane Doe</owner>
</house>
</houses>
</village>
A template may call many sub-templates.  For example, in the above example, we could add another sub-template named BUSINESS, and then used the process-features function to run this sub-template from theRoottemplate.  Additionally, a sub-template may run another sub-template, with the restriction that a sub-template may not directly or indirectly run itself.

Selecting the Sub-Features to Process

Often there is a hierarchical structure to the features that enter the XMLTemplater.  For example, each village will have a number of houses, and each house will have several rooms, etc.  If thefme:process-featuresfunction is used as described above, the resulting document will probably not be correct.  Suppose there are two villages, each with five houses.  Each village and house is represented by a separate FME feature.  The village features are routed into theRootinput port while the house features are routed into the HOUSE input port.
If the transformer is run with the above templates, there will be two output features, as expected.  However, both of the<village>elements will include all ten<house>elements.  The correct behavior is to only evaluate the sub-template on the HOUSE features which correspond to the current village feature.
Thefme:process-featuresfunction provides a way to do this.  Additional function parameters may be used to filter the sub-features which are to be processed.  The se
Related Transformers: "
24;08da0cb5-b52a-4eef-a835-e52b5402c410;"Name: TempPathnameCreator
Category: Calculated Values, Workflows
Description: Name: TempPathnameCreator Category: Calculated Values, Workflows Description: Reserves and returns a temporary file or folder path that will be deleted upon translation completion.   An optional basename and extension can be supplied to further refine the filename portion of the resulting pathname.
This transformer is typically used in conjunction with theFeatureWriterorAttributeFileWriterin workflows that need a temporary file location that will live only for the duration of the translation. The files are then typically consumed downstream in the workflow by transformers like theEmailerorHTMLReportGenerator.

Pathnames

The resulting pathnames will look something like:
<FME temporary directory>/<process #s><TransformerName>_<uuid>/<basename><timestamp>_<sequence #>.<extension>
For example, on Windows, the transformer will create a path that looks like this:
C:\temp\1457417_4341TempPathnameCreator_820b3a46_e4ee_11e5_8cb1_a45e60c7b3170\base_4672334_0.ext
And on Linux/MacOS,  the transformer will create a path that looks like this:
/tmp/1457414874617_4341TempPathnameCreator_820b3a46_e4ee_11e5_8cb1_a45e60c7b3170/base_4672334_0.ext
TheFME_TEMPenvironment variable can override the default location for temporary folders.  Seehttps://knowledge.safe.com/articles/176/fme-temp-environment-variable.htmlfor more details.
Each instance of this transformer will itself create a subfolder within the temporary folder in use, and return unique paths within that subfolder.  This subfolder and its contents will be destroyed at the end of the translation, but before anyEND_PYTHONorEND_TCLscripts are invoked.

Configuration
Related Transformers: "
25;3fb07c5d-07bf-46bb-9818-0c6957dc9e36;"Name: NumericRasterizer
Category: Cartography and Reports, Rasters
Description: Name: NumericRasterizer Category: Cartography and Reports, Rasters Description:  will be clipped to the specified extents.
Minimum X
This specifies the minimum x value of the output raster. It is used when theGround Extentsparameter is set toSpecify ground extents.
Minimum Y
This specifies the minimum y value of the output raster. It is used when theGround Extentsparameter is set toSpecify ground extents.
Maximum X
This specifies the maximum x value of the output raster. It is used when theGround Extentsparameter is set toSpecify ground extents.
Maximum Y
This specifies the maximum y value of the output raster. It is used when theGround Extentsparameter is set toSpecify ground extents.

Editing Transformer Parameters

Using a set of menu options, transformer parameters can be assigned by referencing other elements in theworkspace. More advanced functions, such as an advanced editor and an arithmetic editor, are also available in some transformers. To access a menu of these options, clickbeside the applicable parameter. For more information, seeTransformer Parameter Menu Options.

Defining Values

There are several ways to define a value for use in a Transformer. The simplest is to simply type in a value or string, which can include functions of various types such as attribute references, math and string functions, andworkspaceparameters. There are a number of tools and shortcuts that can assist in constructing values, generally available from the drop-down context menu adjacent to the value field.

Using the Text Editor

The Text Editor provides a convenient way to construct text strings (including regular expressions) from various data sources, such as attributes, parameters, and constants, where the result is used directly inside a parameter.
Text Editor

Using the Arithmetic Editor

The Arithmetic Editor provides a convenient way to construct math expressions from various data sources, such as attributes, parameters, and feature functions, where the result is used directly inside a parameter.
Arithmetic Editor

Conditional Values

Set values depending on one or more test conditions that either pass or fail.
Parameter Condition Definition Dialog

Content

Expressions 
Related Transformers: 3DForcer, DEMGenerator, ImageRasterizer, MapnikRasterizer, RasterCellValueCalculator, RasterDEMGenerator, RasterExpressionEvaluator, VectorOnRasterOverlayer"
26;bea57e9b-9a54-44de-aae5-71ca9820a1d7;"Name: XMLXQueryExploder
Category: 
Description: Name: XMLXQueryExploder Category:  Description: Format Specific
Web
Uses XQuery expression to extract portions of XML text into new FME features.

XQuery Functions

FME provides several functions that can be used within XQuery scripts.  These functions allow XQuery scripts to access and manipulate feature attribute values.  Currently, there are no functions that allow the manipulation of feature geometry.
SeeXQuery Functions.

Examples

XQuery Examples

Configuration
Related Transformers: "
27;2d78e821-61a6-4fcc-8527-2685ed6753a9;"Name: RasterRGBCreator
Category: Rasters
Description: Name: RasterRGBCreator Category: Rasters Description: Choosing a Raster Transformer

FME has an extensive selection of transformers for working with raster data. They can be generally categorized as working with whole rasters, bands, cells or palettes, and those designed for workflow control or combining raster with vector data.
For information on raster geometry and properties, seeRasters (IFMERaster).

Working with Rasters

RasterCellOriginSetter
Sets the cell origin point within cells in a raster.
RasterConvolver
Applies a convolution filter (sometimes called akernelorlens) to raster features and outputs the results.
RasterExpressionEvaluator
Evaluates expressions on each cell in a raster or pair of rasters, including algebraic operations and conditional statements.
RasterExtentsCoercer
Replaces the geometry of input raster features with a polygon covering either the extents of a raster or the extent of data within a raster.
RasterGCPExtractor
ExtractsGround Control Point(GCP) coordinate system and point values from a raster feature and exposes them as attributes.
RasterGCPSetter
SetsGround Control Points(GCPs) on a raster, pairing cell positions with known coordinates.
RasterGeoreferencer
Georeferences a raster by either known corner coordinates or origin, cell size, and rotation.
RasterHillshader
Generates a grayscale shaded relief representation of terrain, based on elevation values.
RasterInterpretationCoercer
Alters the interpretation type of rasters, including all bands, and converts cell values if necessary.
RasterMosaicker
Merges multiple raster features into a single raster feature.
RasterPropertyExtractor
Extracts the geometry properties of a raster feature and exposes them as attributes.
RasterPyramider
Resamples rasters to multiple resolutions, based on either number of levels or dimensions of the smallest output raster.
RasterRegisterer
Transforms an image to minimize its difference with another.
RasterResampler
Resamples rasters, based on specified output dimensions, cell size in ground units, or percentage of original, and interpolates new cell values.
RasterRotationApplier
Rotates a raster feature ac
Related Transformers: 2DGridCreator, Creator, PointCloudCreator, RasterNumericCreator"
28;851bf020-e47a-4549-a577-0a4cb6e93f52;"Name: PointCloudTransformationApplier
Category: Point Clouds
Description: Name: PointCloudTransformationApplier Category: Point Clouds Description: ithmetic Editor

The Arithmetic Editor provides a convenient way to construct math expressions from various data sources, such as attributes, parameters, and feature functions, where the result is used directly inside a parameter.
Arithmetic Editor

Conditional Values

Set values depending on one or more test conditions that either pass or fail.
Parameter Condition Definition Dialog

Content

Expressions and strings can include a number of functions, characters, parameters, and more.
When setting values - whether entered directly in a parameter or constructed using one of the editors - strings and expressions containing String, Math, Date/Time or FME Feature Functions will have those functions evaluated. Therefore, the names of these functions (in the form @<function_name>) should not be used as literal string values.
String Functions
Special Characters
Math Functions
Math Operators
FME Feature Functions
FME Parameters

Dialog Options - Tables

Transformers with table-style parameters have additional tools for populating and manipulating values.
Row Reordering

Enabled once you have clicked on a row item. Choices include:
Cut, Copy, and Paste

Enabled once you have clicked on a row item. Choices include:
Cut, copy, and paste may be used within a transformer, or between transformers.
Filter

Import

Reset/Refresh

Generally resets the table to its initial state, and may provide additional options to remove invalid entries. Behavior varies between transformers.
Note:Not all tools are available in all transformers.

Reference

Processing Behavior
Feature-Based
Feature Holding
No

FME Community

TheFME Communityis the place for demos, how-tos, articles, FAQs, and more. Get answers to your questions, learn from other users, and suggest, vote, and comment on new features.
Search forall results about the PointCloudTransformationApplieron theFME Community.

Examples may contain information licensed under the Open Government Licence – Vancouver and/or the Open Government Licence – Canada.
Keywords: point ""point cloud"" cloud PointCloud LiDAR sonar
Related Transformers: 3DAffiner, 3DRotator, Affiner, Offsetter, RasterRotationApplier, Rotator, Scaler"
29;5eb09fa7-7d87-4cc7-9ca4-8fe060205307;"Name: PointCloudConsumer
Category: Point Clouds
Description: Name: PointCloudConsumer Category: Point Clouds Description: itional Values

Set values depending on one or more test conditions that either pass or fail.
Parameter Condition Definition Dialog

Content

Expressions and strings can include a number of functions, characters, parameters, and more.
When setting values - whether entered directly in a parameter or constructed using one of the editors - strings and expressions containing String, Math, Date/Time or FME Feature Functions will have those functions evaluated. Therefore, the names of these functions (in the form @<function_name>) should not be used as literal string values.
String Functions
Special Characters
Math Functions
Math Operators
FME Feature Functions
FME Parameters

Dialog Options - Tables

Transformers with table-style parameters have additional tools for populating and manipulating values.
Row Reordering

Enabled once you have clicked on a row item. Choices include:
Cut, Copy, and Paste

Enabled once you have clicked on a row item. Choices include:
Cut, copy, and paste may be used within a transformer, or between transformers.
Filter

Import

Reset/Refresh

Generally resets the table to its initial state, and may provide additional options to remove invalid entries. Behavior varies between transformers.
Note:Not all tools are available in all transformers.

Reference

Processing Behavior
Feature-Based
Feature Holding
No

FME Community

TheFME Communityis the place for demos, how-tos, articles, FAQs, and more. Get answers to your questions, learn from other users, and suggest, vote, and comment on new features.
Search forall results about the PointCloudConsumeron theFME Community.

Examples may contain information licensed under the Open Government Licence – Vancouver and/or the Open Government Licence – Canada.
Keywords: point ""point cloud"" cloud PointCloud LiDAR sonar
Related Transformers: RasterConsumer"
30;dc9455d1-4196-44f7-b4f3-ea707d89e852;"Name: RasterPyramider
Category: Rasters, Web
Description: Name: RasterPyramider Category: Rasters, Web Description: 
Dialog Options - Tables

Transformers with table-style parameters have additional tools for populating and manipulating values.
Row Reordering

Enabled once you have clicked on a row item. Choices include:
Cut, Copy, and Paste

Enabled once you have clicked on a row item. Choices include:
Cut, copy, and paste may be used within a transformer, or between transformers.
Filter

Import

Reset/Refresh

Generally resets the table to its initial state, and may provide additional options to remove invalid entries. Behavior varies between transformers.
Note:Not all tools are available in all transformers.

Reference

Processing Behavior
Feature-Based
Feature Holding
No

FME Community

TheFME Communityis the place for demos, how-tos, articles, FAQs, and more. Get answers to your questions, learn from other users, and suggest, vote, and comment on new features.
Search forall results about the RasterPyramideron theFME Community.

Examples may contain information licensed under the Open Government Licence – Vancouver and/or the Open Government Licence – Canada.
Related Transformers: RasterResampler, RasterTiler, WebMapTiler"
31;cd4af8b7-2c5c-47be-8c0d-a66f511934f8;"Name: StreamPriorityCalculator
Category: Calculated Values
Description: Name: StreamPriorityCalculator Category: Calculated Values Description: de the applicable parameter. For more information, seeTransformer Parameter Menu Options.

Defining Values

There are several ways to define a value for use in a Transformer. The simplest is to simply type in a value or string, which can include functions of various types such as attribute references, math and string functions, andworkspaceparameters. There are a number of tools and shortcuts that can assist in constructing values, generally available from the drop-down context menu adjacent to the value field.

Using the Text Editor

The Text Editor provides a convenient way to construct text strings (including regular expressions) from various data sources, such as attributes, parameters, and constants, where the result is used directly inside a parameter.
Text Editor

Using the Arithmetic Editor

The Arithmetic Editor provides a convenient way to construct math expressions from various data sources, such as attributes, parameters, and feature functions, where the result is used directly inside a parameter.
Arithmetic Editor

Conditional Values

Set values depending on one or more test conditions that either pass or fail.
Parameter Condition Definition Dialog

Content

Expressions and strings can include a number of functions, characters, parameters, and more.
When setting values - whether entered directly in a parameter or constructed using one of the editors - strings and expressions containing String, Math, Date/Time or FME Feature Functions will have those functions evaluated. Therefore, the names of these functions (in the form @<function_name>) should not be used as literal string values.
String Functions
Special Characters
Math Functions
Math Operators
FME Feature Functions
FME Parameters

Dialog Options - Tables

Transformers with table-style parameters have additional tools for populating and manipulating values.
Row Reordering

Enabled once you have clicked on a row item. Choices include:
Cut, Copy, and Paste

Enabled once you have clicked on a row item. Choices include:
Cut, copy, and paste may be used within a transformer, or between transformers.
Filter

Import

Reset/
Related Transformers: NetworkFlowOrientor, NetworkTopologyCalculator, ShortestPathFinder, StreamOrderCalculator"
32;fc6c76a2-b340-4956-922d-4fa42e61cd53;"Name: Bufferer
Category: 3D, Spatial Analysis
Description: Name: Bufferer Category: 3D, Spatial Analysis Description: es the level of subdivision to use for this sphere. The sphere is generated using the quadrilateralized spherical cube mapping so the final sphere will consist of 6n^2 faces, for a value of n. The value must be an integer greater than 1.  This buffer solid produces a better approximation of a uniform buffer distance with higher levels of subdivision, at the cost of performance of the buffer operations.

Editing Transformer Parameters

Using a set of menu options, transformer parameters can be assigned by referencing other elements in theworkspace. More advanced functions, such as an advanced editor and an arithmetic editor, are also available in some transformers. To access a menu of these options, clickbeside the applicable parameter. For more information, seeTransformer Parameter Menu Options.

Defining Values

There are several ways to define a value for use in a Transformer. The simplest is to simply type in a value or string, which can include functions of various types such as attribute references, math and string functions, andworkspaceparameters. There are a number of tools and shortcuts that can assist in constructing values, generally available from the drop-down context menu adjacent to the value field.

Using the Text Editor

The Text Editor provides a convenient way to construct text strings (including regular expressions) from various data sources, such as attributes, parameters, and constants, where the result is used directly inside a parameter.
Text Editor

Using the Arithmetic Editor

The Arithmetic Editor provides a convenient way to construct math expressions from various data sources, such as attributes, parameters, and feature functions, where the result is used directly inside a parameter.
Arithmetic Editor

Conditional Values

Set values depending on one or more test conditions that either pass or fail.
Parameter Condition Definition Dialog

Content

Expressions and strings can include a number of functions, characters, parameters, and more.
When setting values - whether entered directly in a parameter or constructed using one of the editors - str
Related Transformers: OffsetCurveGenerator, SpatialFilter, SpatialRelator"
33;2a6b16fd-9afa-4a98-b957-a76334b03020;"Name: ImageRasterizer
Category: Cartography and Reports, Rasters
Description: Name: ImageRasterizer Category: Cartography and Reports, Rasters Description: How does it work?

The ImageRasterizer receives point, line, and area geometries or point clouds, and “draws” them onto a single output raster feature.
For vector input features, thefme_colorattribute determines the pixel color in the raster. Line weights are not supported, and features will be drawn at a width of one (1) pixel.
Polygon features that do not have a fill color defined (fme_fill_color) will be filled with their outline color (fme_color).
For point clouds, pixel coloring may be done using either the color or intensity component.
Background fill color, alpha value, and Nodata options are available, as well as anti-aliasing. A variety of options is available for raster interpretation, including RGB variants, gray scales, and single color and alpha bands.
The size of the output raster may be defined by number of rows and columns, or by specifying the size of a single cell (pixel) in ground units. The geographic extent covered by the raster may be either determined by the input features or manually specified.
Features with no color attribute (or point clouds without an intensity component, if selected) will be discarded and output via the <Rejected> port.

Examples

In this example, we will create a raster representation of a DWG file containing bike path lines. As the CAD file has a color attribute already associated with each line, FME assigns that color to thefme_colorattribute on reading. (Other formats may need to have colors assigned in theworkspace- consider using theFeatureColorSetter).

The bike path features are routed into aBufferer, and then to an ImageRasterizer.
The buffer amount is set to 25 (meters, in ground units), producing polygons that will be more visible in the output raster than single-pixel width lines.

In the parameters dialog, we set the output raster size to be calculated at 1 cell (pixel) per meter (ground units), both vertically and horizontally. TheInterpretation Typeis RGBA32, and the default settings producing a white background, and anti-aliasing turned off.

One raster feature is output.

A closer look shows the shapes of the buffered lines. The
Related Transformers: FeatureColorSetter, MapnikRasterizer, NumericRasterizer, RasterNumericCreator, RasterRGBCreator, VectorOnRasterOverlayer"
34;7bafe942-4d1e-4114-b40a-ce3fbf996c4a;"Name: JSONTemplater
Category: 
Description: Name: JSONTemplater Category:  Description: Format Specific
Web
Populates a JSON document with FME feature attribute values. The document is provided as a template, and the transformer will use XQuery to insert attribute values and geometry information into the template.
The template may be loaded from an attribute, a file, or entered directly into the transformer parameters.
For each feature that enters theRootinput port, theRootJSON template will be evaluated, and the result will be put into the attribute named by the Result Attribute parameter.  The feature will then be output from the transformer.
A JSON template is simply a JSON document that containsXQueryfunctions.  Essentially, these functions are placeholders for data values.  When the template is processed, the functions will be evaluated, and the results will be inserted into the document.  Most often this is used to insert feature attribute values into the document.  The names of the attributes to be inserted are specified using the same XQuery functions used in several other transformers:XMLTemplater,XMLUpdater,XMLXQueryExtractor,XMLXQueryExploder, etc.
In the JSONTemplater, thefme:get-attribute,fme:get-list-attributeandfme:get-json-attributefunctions are particularly useful.  Only functions which do not alter the feature are permitted.  See theXQueryFunctions documentation for more information on the available functions.
The following JSON template populates a JSON element with the value of the ‘id’ feature attribute.
{
""id"" : fme:get-attribute(""id"")
}
If the attribute does not exist on the feature, the JSON key value will have a null value.
To populate a JSON array with the contents of a list attribute, thefme:get-list-attributemay be used, as in this sample:
{
""ids"" : [ fme:get-list-attribute(""ids{}"") ]
}
If the function call is not contained in the square array braces, an array will automatically be created if the function returns more than one value.  An array will not be created if the function returns one or zero values.

Sub-Templates

When a template is evaluated, it can only access the attributes of the feature which is curren
Related Transformers: "
35;fcd5e5a7-0ec7-4f69-8885-faf28733cf7e;"Name: RasterPaletteRemover
Category: Rasters
Description: Name: RasterPaletteRemover Category: Rasters Description: Input Ports

This transformer accepts only raster features.

Output Ports

Raster features with any selected palettes removed. Cell values are unaltered.
Non-raster features will be routed to the <Rejected> port, as well as invalid rasters.
Rejected features will have an fme_rejection_code attribute with one of the following values:
INVALID_GEOMETRY_TYPEINVALID_RASTER_NO_BANDS
Rejected Feature Handling:can be set to either terminate the translation or continue running when it encounters a rejected feature. This setting is available both as a defaultFME optionand as aworkspace parameter.

Parameters

This transformer has no parameters.

Editing Transformer Parameters

Using a set of menu options, transformer parameters can be assigned by referencing other elements in theworkspace. More advanced functions, such as an advanced editor and an arithmetic editor, are also available in some transformers. To access a menu of these options, clickbeside the applicable parameter. For more information, seeTransformer Parameter Menu Options.

Defining Values

There are several ways to define a value for use in a Transformer. The simplest is to simply type in a value or string, which can include functions of various types such as attribute references, math and string functions, andworkspaceparameters. There are a number of tools and shortcuts that can assist in constructing values, generally available from the drop-down context menu adjacent to the value field.

Using the Text Editor

The Text Editor provides a convenient way to construct text strings (including regular expressions) from various data sources, such as attributes, parameters, and constants, where the result is used directly inside a parameter.
Text Editor

Using the Arithmetic Editor

The Arithmetic Editor provides a convenient way to construct math expressions from various data sources, such as attributes, parameters, and feature functions, where the result is used directly inside a parameter.
Arithmetic Editor

Conditional Values

Set values depending on one or more test conditions that either pass or fail.
Parameter 
Related Transformers: RasterPaletteExtractor, RasterPaletteResolver"
36;606a1cce-bcc9-41f9-b6fc-9f56c84ed42b;"Name: VoronoiDiagrammer
Category: Spatial Analysis
Description: Name: VoronoiDiagrammer Category: Spatial Analysis Description:  assist in constructing values, generally available from the drop-down context menu adjacent to the value field.

Using the Text Editor

The Text Editor provides a convenient way to construct text strings (including regular expressions) from various data sources, such as attributes, parameters, and constants, where the result is used directly inside a parameter.
Text Editor

Using the Arithmetic Editor

The Arithmetic Editor provides a convenient way to construct math expressions from various data sources, such as attributes, parameters, and feature functions, where the result is used directly inside a parameter.
Arithmetic Editor

Conditional Values

Set values depending on one or more test conditions that either pass or fail.
Parameter Condition Definition Dialog

Content

Expressions and strings can include a number of functions, characters, parameters, and more.
When setting values - whether entered directly in a parameter or constructed using one of the editors - strings and expressions containing String, Math, Date/Time or FME Feature Functions will have those functions evaluated. Therefore, the names of these functions (in the form @<function_name>) should not be used as literal string values.
String Functions
Special Characters
Math Functions
Math Operators
FME Feature Functions
FME Parameters

Dialog Options - Tables

Transformers with table-style parameters have additional tools for populating and manipulating values.
Row Reordering

Enabled once you have clicked on a row item. Choices include:
Cut, Copy, and Paste

Enabled once you have clicked on a row item. Choices include:
Cut, copy, and paste may be used within a transformer, or between transformers.
Filter

Import

Reset/Refresh

Generally resets the table to its initial state, and may provide additional options to remove invalid entries. Behavior varies between transformers.
Note:Not all tools are available in all transformers.

FME Community

TheFME Communityis the place for demos, how-tos, articles, FAQs, and more. Get answers to your questions, learn from other users, and suggest, vote, and comment on new 
Related Transformers: "
37;3ca4057f-c943-4462-859d-1cbb1a663a20;"Name: RasterDEMGenerator
Category: 3D, Rasters
Description: Name: RasterDEMGenerator Category: 3D, Rasters Description:  new Nodata value on selected bands of a raster feature.
RasterBandOrderer
Specifies the required order of bands in a raster. Bands are reordered according 
 to the input band indices.
RasterBandPropertyExtractor
Extracts the band and palette properties of a raster feature and exposes them as attributes.
RasterBandRemover
Removes any selected bands from a raster feature.
RasterBandSeparator
Separates bands or unique band and palette combinations, and outputs either individual raster features or a single new raster feature containing all combinations.
RasterStatisticsCalculator
Calculates statistics on raster bands and adds the results as attributes.

Working with Cells

RasterAspectCalculator
Calculates the aspect (direction of slope) for each cell of a raster. Aspect is measured in degrees from 0 to 360, clockwise from north.
RasterCellCoercer
Creates individual points or polygons for each cell in a raster, optionally extracting band values as z coordinates or attributes.
RasterCellValueCalculator
Evaluates basic arithmetic , minimum, maximum or average operations on the cell values of a pair of rasters.
RasterCellValueReplacer
Replaces a range of band values in a raster with a new single value.
RasterCellValueRounder
Rounds off raster cell values.
RasterSegmenter
Partitions a raster image into arbitrarily sized groups of cells from the input image based on intensity differences in the input raster image cells.
RasterSingularCellValueCalculator
Performs basic arithmetic operations on the cell values of a raster against a numeric value.
RasterSlopeCalculator
Calculates the slope (maximum rate of change in z) for each cell of a raster.

Working with Palettes

RasterPaletteAdder
Creates a palette from an attribute, and adds this palette to all selected bands on a raster.
RasterPaletteExtractor
Creates a string representation of an existing palette on a raster and saves it to an attribute.
RasterPaletteGenerator
Generates a palette out of the selected band(s) of a raster. The output raster will have the selected band(s) replaced by a new band with a palette.
RasterPaletteInt
Related Transformers: 3DForcer, DEMGenerator, NumericRasterizer, SurfaceModeller"
38;9db2de79-4b34-475c-8371-2145e48ad2d9;"Name: GoogleLanguageConnector
Category: Web
Description: Name: GoogleLanguageConnector Category: Web Description:  of operation to perform. Choices are:

Editing Transformer Parameters

Using a set of menu options, transformer parameters can be assigned by referencing other elements in theworkspace. More advanced functions, such as an advanced editor and an arithmetic editor, are also available in some transformers. To access a menu of these options, clickbeside the applicable parameter. For more information, seeTransformer Parameter Menu Options.

Defining Values

There are several ways to define a value for use in a Transformer. The simplest is to simply type in a value or string, which can include functions of various types such as attribute references, math and string functions, andworkspaceparameters. There are a number of tools and shortcuts that can assist in constructing values, generally available from the drop-down context menu adjacent to the value field.

Using the Text Editor

The Text Editor provides a convenient way to construct text strings (including regular expressions) from various data sources, such as attributes, parameters, and constants, where the result is used directly inside a parameter.
Text Editor

Using the Arithmetic Editor

The Arithmetic Editor provides a convenient way to construct math expressions from various data sources, such as attributes, parameters, and feature functions, where the result is used directly inside a parameter.
Arithmetic Editor

Conditional Values

Set values depending on one or more test conditions that either pass or fail.
Parameter Condition Definition Dialog

Content

Expressions and strings can include a number of functions, characters, parameters, and more.
When setting values - whether entered directly in a parameter or constructed using one of the editors - strings and expressions containing String, Math, Date/Time or FME Feature Functions will have those functions evaluated. Therefore, the names of these functions (in the form @<function_name>) should not be used as literal string values.
String Functions
Special Characters
Math Functions
Math Operators
FME Feature Functions
FME Parameters

Dialog Options - Tables

Tr
Related Transformers: AzureComputerVisionConnector, AzureTextAnalyticsConnector, ComprehendConnector, GoogleBigQueryConnector, GoogleCloudPubSubConnector, GoogleCloudStorageConnector, GoogleDriveConnector, GoogleVisionConnector, RekognitionConnector"
39;9e992099-b3d4-43a7-a9fa-d512f1fbb031;"Name: Affiner
Category: Coordinates
Description: Name: Affiner Category: Coordinates Description: Usage Notes

To perform affine transformations in place on geographic features, consider temporary reprojection (Reprojector) to a local coordinate system or using theCommonLocalReprojector.
TheScalerperforms 2D and 3D scaling affine transformations, with additional options for specific geometry types and origin handling.
TheOffsetterperforms 2D and 3D translation affine transformations, with additional coordinate space options (polar and spherical coordinates, in addition to cartesian).
TheRotatorand3DRotatorperform rotation affine transformations, with a simplified interface for rotation value, origin (2D) and axis choice (3D).

Configuration
Related Transformers: 3DAffiner, 3DRotator, AffineWarper, Offsetter, PointCloudTransformationApplier, RasterRotationApplier, Rotator, Scaler, SecondOrderConformer"
40;7cd515a5-def9-42b4-b22f-08a15686be79;"Name: ListRenamer
Category: Attributes
Description: Name: ListRenamer Category: Attributes Description:  entered directly in a parameter or constructed using one of the editors - strings and expressions containing String, Math, Date/Time or FME Feature Functions will have those functions evaluated. Therefore, the names of these functions (in the form @<function_name>) should not be used as literal string values.
String Functions
Special Characters
Math Functions
Math Operators
FME Feature Functions
FME Parameters

Dialog Options - Tables

Transformers with table-style parameters have additional tools for populating and manipulating values.
Row Reordering

Enabled once you have clicked on a row item. Choices include:
Cut, Copy, and Paste

Enabled once you have clicked on a row item. Choices include:
Cut, copy, and paste may be used within a transformer, or between transformers.
Filter

Import

Reset/Refresh

Generally resets the table to its initial state, and may provide additional options to remove invalid entries. Behavior varies between transformers.
Note:Not all tools are available in all transformers.

FME Community

TheFME Communityis the place for demos, how-tos, articles, FAQs, and more. Get answers to your questions, learn from other users, and suggest, vote, and comment on new features.
Search forall results about the ListRenameron theFME Community.
Related Transformers: "
41;0cb6919b-da32-4497-bad2-3faf0e701d3e;"Name: LocalCoordinateSystemSetter
Category: Coordinates
Description: Name: LocalCoordinateSystemSetter Category: Coordinates Description: projections, as in aworkspacewith different input and output coordinate systems selected, default to using the FME (CS-Map) library.
If you are reprojecting explicitly with a transformer in theworkspace, using library-specific transformers is recommended. In the case ofCsmapReprojectorversus the Reprojector (with default engine), the library may be identical, but the CSMapReprojector handles vertical coordinate calculations whereas the Reprojector does not.
Generic Reprojection Transformers
Related Transformers: CommonLocalReprojector, CoordinateSystemSetter"
42;ab880633-48a4-430e-97a6-7aac3ab2fb6b;"Name: PointCloudSplitter
Category: Point Clouds
Description: Name: PointCloudSplitter Category: Point Clouds Description: ponent values for each point are interpolated from band values at the point location.
PointCloudPropertyExtractor
Extracts the geometry properties of a point cloud feature and exposes them as attributes, optionally checking for their existence, retrieving component properties, and finding minimum and maximum values. Extents may also be recalculated and updated.
PointCloudReplacer
Decodes a binary attribute containing encoded point clouds stored as Blobs, replacing the feature’s geometry with the decoded point cloud.
PointCloudSimplifier
Reduces the number of points in a point cloud by selectively keeping points based on the shape of the point cloud. The simplified and removed points are output as two discrete point clouds.
PointCloudSorter
Sorts the points within a point cloud by one or more component values.
PointCloudSplitter
Separates point clouds into multiple features based on component values, color, or first/last return.
PointCloudStatisticsCalculator
Calculates statistics on point cloud components and adds the results as attributes.
PointCloudSurfaceBuilder
Takes an input point cloud and reconstructs it into an output mesh.
PointCloudThinner
Reduces the number of points in (thins) a point cloud by keeping points at a fixed interval, a maximum number of points, or a set quantity of first or last points. Remaining points are discarded.
PointCloudToPointCoercer
Converts point clouds to point or multipoint geometries, optionally retaining attribute and component values.
PointCloudTransformationApplier
Applies a point cloud’s scale, offset, or transformation matrix to it, recalculating component values and removing the transformation values.

Configuration
Related Transformers: PointCloudCombiner, PointCloudFilter, PointCloudMerger, PointCloudSorter"
43;2160b77f-c3e3-4a71-8ebe-6cbce07f43c4;"Name: BulkAttributeRemover
Category: Attributes
Description: Name: BulkAttributeRemover Category: Attributes Description: nition Dialog

Content

Expressions and strings can include a number of functions, characters, parameters, and more.
When setting values - whether entered directly in a parameter or constructed using one of the editors - strings and expressions containing String, Math, Date/Time or FME Feature Functions will have those functions evaluated. Therefore, the names of these functions (in the form @<function_name>) should not be used as literal string values.
String Functions
Special Characters
Math Functions
Math Operators
FME Feature Functions
FME Parameters

Dialog Options - Tables

Transformers with table-style parameters have additional tools for populating and manipulating values.
Row Reordering

Enabled once you have clicked on a row item. Choices include:
Cut, Copy, and Paste

Enabled once you have clicked on a row item. Choices include:
Cut, copy, and paste may be used within a transformer, or between transformers.
Filter

Import

Reset/Refresh

Generally resets the table to its initial state, and may provide additional options to remove invalid entries. Behavior varies between transformers.
Note:Not all tools are available in all transformers.

Reference

Processing Behavior
Feature-Based
Feature Holding
No

FME Community

TheFME Communityis the place for demos, how-tos, articles, FAQs, and more. Get answers to your questions, learn from other users, and suggest, vote, and comment on new features.
Search forall results about the BulkAttributeRemoveron theFME Community.

Examples may contain information licensed under the Open Government Licence – Vancouver and/or the Open Government Licence – Canada.
Related Transformers: AttributeCopier, AttributeCreator, AttributeKeeper, AttributeManager, AttributeRemover, AttributeRenamer, AttributeValueMapper, BulkAttributeRenamer"
44;8833c93c-1bea-4d60-aba7-c561b4021daa;"Name: RasterBandCombiner
Category: Rasters
Description: Name: RasterBandCombiner Category: Rasters Description: eordered according 
 to the input band indices.
RasterBandPropertyExtractor
Extracts the band and palette properties of a raster feature and exposes them as attributes.
RasterBandRemover
Removes any selected bands from a raster feature.
RasterBandSeparator
Separates bands or unique band and palette combinations, and outputs either individual raster features or a single new raster feature containing all combinations.
RasterStatisticsCalculator
Calculates statistics on raster bands and adds the results as attributes.

Working with Cells

RasterAspectCalculator
Calculates the aspect (direction of slope) for each cell of a raster. Aspect is measured in degrees from 0 to 360, clockwise from north.
RasterCellCoercer
Creates individual points or polygons for each cell in a raster, optionally extracting band values as z coordinates or attributes.
RasterCellValueCalculator
Evaluates basic arithmetic , minimum, maximum or average operations on the cell values of a pair of rasters.
RasterCellValueReplacer
Replaces a range of band values in a raster with a new single value.
RasterCellValueRounder
Rounds off raster cell values.
RasterSegmenter
Partitions a raster image into arbitrarily sized groups of cells from the input image based on intensity differences in the input raster image cells.
RasterSingularCellValueCalculator
Performs basic arithmetic operations on the cell values of a raster against a numeric value.
RasterSlopeCalculator
Calculates the slope (maximum rate of change in z) for each cell of a raster.

Working with Palettes

RasterPaletteAdder
Creates a palette from an attribute, and adds this palette to all selected bands on a raster.
RasterPaletteExtractor
Creates a string representation of an existing palette on a raster and saves it to an attribute.
RasterPaletteGenerator
Generates a palette out of the selected band(s) of a raster. The output raster will have the selected band(s) replaced by a new band with a palette.
RasterPaletteInterpretationCoercer
Alters the interpretation type of raster palettes.
RasterPaletteNodataSetter
Identifies the palette key that match
Related Transformers: RasterBandAdder, RasterBandKeeper, RasterBandOrderer, RasterBandRemover, RasterBandSeparator, RasterMosaicker"
45;ad655370-1bf2-4169-ac88-ee9fed8f5c21;"Name: WorkspaceRunner
Category: Workflows
Description: Name: WorkspaceRunner Category: Workflows Description: ation. In this 
 case, the initiating feature is output via theSucceededport if the request 
 was successfully submitted.
Maximum Concurrent FME Processes (1-7)
Each feature that enters the transformer causes an FME process to be launched to execute aworkspace. To make maximum use of system resources, FME allows multiple processes to be run simultaneously.
This parameter defines the maximum number of FME processes allowed to run concurrently on a machine; for example if the value is set to 2, then the transformer will - if necessary - start two additional FME processes in order to execute multipleworkspaces simultaneously.
However, in order to avoid overloading system resources, there is a limit of 8 concurrent FME processes on a system. The parameter value if set, must be an integer in the range 1-7. If no value is set, then a maximum of 7 concurrent FME processes can be started. Once the limit is reached subsequentworkspaces must wait for an FME process to finish before they can be carried out.
The process limit is applied across all running FME processes. For example, if twoworkspaces are run concurrently, and bothworkspaces have WorkspaceRunners that will launch three additional concurrent processes each, then the limit of eight concurrentworkspaceprocesses is reached (one for each parentworkspaceand three additional processes each for their child processes).
Workspace Runs per FME Process
FME is able to use a single process to run multipleworkspaces consecutively. This saves starting and stopping a new FME process for eachworkspaceand is particularly useful when runningworkspaces that is performing small tasks. This parameter controls the number ofworkspaces that a single FME process will execute before shutting down, and is only available ifWait for Job to Completeis set toNo.
For example, if this parameter is set to 4, then each FME process will execute fourworkspaces, one after the other, and then shut down.
If the specifiedFME Workspacecontains published user parameters, they will be populated and settable here.

Editing Transformer Parameters

Using a set o
Related Transformers: FMEFlowJobSubmitter"
46;0e791b87-efc7-48c3-af03-9cb8cbdfc984;"Name: WebMapTiler
Category: Cartography and Reports
Description: Name: WebMapTiler Category: Cartography and Reports Description: ame the attribute to contain the quadkey for that tile.
Quadkeys are used by Bing Maps to uniquely identify a single tile at a particular level of detail. Note that this attribute will only be created for quad-tree based tile schemes (GoogleMapsCompatible and GoogleCRS84Quad).
Zoom Level
Name the attribute to contain the zoom level of that tile.
Tile Column
Name the attribute to contain the column of that tile.
Tile Row
Name the attribute to contain the row of that tile.
Raster Index
Name the attribute to contain which raster it was created from.
This index is zero-based, so all tiles created from the first input raster will have a value of 0, all tiles created from the second input raster will have a value of 1, etc.
Number of Tiles
Name the attribute to contain the total number of tiles created from the input raster, across all zoom levels.

Editing Transformer Parameters

Using a set of menu options, transformer parameters can be assigned by referencing other elements in theworkspace. More advanced functions, such as an advanced editor and an arithmetic editor, are also available in some transformers. To access a menu of these options, clickbeside the applicable parameter. For more information, seeTransformer Parameter Menu Options.

Defining Values

There are several ways to define a value for use in a Transformer. The simplest is to simply type in a value or string, which can include functions of various types such as attribute references, math and string functions, andworkspaceparameters. There are a number of tools and shortcuts that can assist in constructing values, generally available from the drop-down context menu adjacent to the value field.

Using the Text Editor

The Text Editor provides a convenient way to construct text strings (including regular expressions) from various data sources, such as attributes, parameters, and constants, where the result is used directly inside a parameter.
Text Editor

Using the Arithmetic Editor

The Arithmetic Editor provides a convenient way to construct math expressions from various data sources, such as attributes, parameters,
Related Transformers: Clipper, RasterMosaicker, RasterPyramider, RasterSubsetter, Tiler"
47;dc8e337c-c5cf-4c3d-8a34-fa76160e1080;"Name: AnchoredSnapper
Category: Geometries, Spatial Analysis
Description: Name: AnchoredSnapper Category: Geometries, Spatial Analysis Description: Configuration
Related Transformers: "
48;aed1a898-fe3d-41c9-b3ec-48a8660ff976;"Name: RasterBandRemover
Category: Rasters
Description: Name: RasterBandRemover Category: Rasters Description: es by overlaying a point cloud on a raster. The component values for each point are interpolated from band values at the point location.
PointOnRasterValueExtractor
Extracts the band and palette values from a raster at the location of one or more input points and sets them as attributes on the feature.
RasterDEMGenerator
Produces a raster digital elevation model (DEM) by uniformly sampling a Delaunay triangulation generated from input points and breaklines.
VectorOnRasterOverlayer
Rasterizes vector or point cloud features onto an existing raster. For vector features the fme_color attribute sets pixel color, and point clouds may be rendered using their color or intensity components.

Configuration
Related Transformers: RasterBandAdder, RasterBandCombiner, RasterBandKeeper, RasterBandSeparator"
49;5c944a7a-5a33-4ae4-9870-92b11cba239e;"Name: SolidDissolver
Category: 3D, Geometries, Spatial Analysis
Description: Name: SolidDissolver Category: 3D, Geometries, Spatial Analysis Description: e:
Cut, copy, and paste may be used within a transformer, or between transformers.
Filter

Import

Reset/Refresh

Generally resets the table to its initial state, and may provide additional options to remove invalid entries. Behavior varies between transformers.
Note:Not all tools are available in all transformers.

Reference

Processing Behavior
Group-Based
Feature Holding
Yes

FME Community

TheFME Communityis the place for demos, how-tos, articles, FAQs, and more. Get answers to your questions, learn from other users, and suggest, vote, and comment on new features.
Search forall results about the SolidDissolveron theFME Community.

Examples may contain information licensed under the Open Government Licence – Vancouver and/or the Open Government Licence – Canada.
Related Transformers: Dissolver, SolidBuilder"
50;66595fb6-25ca-4d70-8c33-70b5b726a86e;"Name: Geocoder
Category: Integrations, Web
Description: Name: Geocoder Category: Integrations, Web Description: line or a local ArcGIS Server installation. The World Geocoding service provided by Esri is used by default.
To access this geocoding service, you need to provide valid ArcGIS Online access credentials. Contact Esri to set up your own ArcGIS Online account:https://www.arcgis.com/features/plans/pricing.html.
Note that use of this Geocoder transformer may use up credits and you may be subject to transaction limits. For more information, please seehttps://developers.arcgis.com/rest/geocode/api-reference/overview-world-geocoding-service.htm.
Please review the terms of service before use:https://developers.arcgis.com/terms.
ArcGIS Server
This service type makes use of a published geocoding service or locator view on a local ArcGIS Server installation.
It is recommended to use an Esri ArcGIS Portal web connection when attempting to access an authenticated server. You will be required to provide the URL to the specific Geocoding Server hosted on the Portal.
For more information, please seehttps://enterprise.arcgis.com/en/server/latest/publish-services/windows/geocode-services.htm.
Bing
To access this geocoding service, you will need to provide valid Bing Maps access credentials. Contact Microsoft to set up your own Bing Maps account:https://www.microsoft.com/maps/Licensing/licensing.aspx.
Note that use of this Geocoder transformer may use up credits and you may be subject to transaction limits. Please review the terms of service before use:https://www.microsoft.com/maps/product/terms.html.
Geocode.Farm
To access this geocoding service, you need to provide valid Geocode.Farm access credentials. Contact Geocode.Farm to set up your own account:https://geocode.farm/register.
Note that use of the Geocoder transformer with this service may use up credits and you may be subject to transaction limits.
Please review the terms of service before use:https://geocode.farm/policies/terms-of-service.
Geocoder.ca
To access this geocoding service, you can use a Geocoder.ca web connection or provide valid Geocoder.ca access credentials. Contact Geocoder.ca to set up your own account:https://g
Related Transformers: None"
51;baa09b2c-56d2-42d5-9a5f-258e3b5ef0f9;"Name: TweetStreamer
Category: Integrations, Web
Description: Name: TweetStreamer Category: Integrations, Web Description: of functions, characters, parameters, and more.
When setting values - whether entered directly in a parameter or constructed using one of the editors - strings and expressions containing String, Math, Date/Time or FME Feature Functions will have those functions evaluated. Therefore, the names of these functions (in the form @<function_name>) should not be used as literal string values.
String Functions
Special Characters
Math Functions
Math Operators
FME Feature Functions
FME Parameters

Dialog Options - Tables

Transformers with table-style parameters have additional tools for populating and manipulating values.
Row Reordering

Enabled once you have clicked on a row item. Choices include:
Cut, Copy, and Paste

Enabled once you have clicked on a row item. Choices include:
Cut, copy, and paste may be used within a transformer, or between transformers.
Filter

Import

Reset/Refresh

Generally resets the table to its initial state, and may provide additional options to remove invalid entries. Behavior varies between transformers.
Note:Not all tools are available in all transformers.

FME Community

TheFME Communityis the place for demos, how-tos, articles, FAQs, and more. Get answers to your questions, learn from other users, and suggest, vote, and comment on new features.
Search forall results about the TweetStreameron theFME Community.
Related Transformers: JSONFragmenter, JSONExtractor, Tweeter, TweetSearcher, TwitterStatusFetcher"
52;145ea4f9-830b-419f-84c0-c85a0e00a3f3;"Name: AWSIoTConnector
Category: Web
Description: Name: AWSIoTConnector Category: Web Description: Configuration
Related Transformers: AzureIoTConnector, AzureQueueStorageConnector, GoogleCloudPubSubConnector, GoogleIoTConnector, IBMIoTConnector, KafkaConnector, MQTTConnector, SQSConnector"
53;d32b55b4-5c16-414d-bf4e-24282396838d;"Name: RasterResampler
Category: Rasters
Description: Name: RasterResampler Category: Rasters Description: hat matches a raster band’s Nodata value, and sets a value on it.
RasterPaletteRemover
Removes selected palette(s) from raster features.
RasterPaletteResolver
Resolves the palette(s) on a raster by replacing cell values with their corresponding palette values. Palette values with multiple components, such as RGB, are broken down and the individual values assigned to multiple, newly-added bands.

Workflow Control

RasterCheckpointer
Forces accumulated raster operations to be processed, saving the state to disk and releasing resources to tune performance or assist with memory limitations.
RasterConsumer
Reads raster features for testing purposes, including any accumulated raster operations. No additional operations are performed, and nothing is done with the features.
RasterExtractor
Serializes the geometry of a raster feature into a Blob attribute, encoding the contents according to a choice of common binary raster formats.
RasterNumericCreator
Creates a numeric raster of specified size and resolution, with default cell values.
RasterReplacer
Decodes a binary attribute containing encoded rasters stored as Blobs, replacing the feature’s geometry with the decoded raster.
RasterRGBCreator
Creates a color raster feature of specified size, resolution, and interpretation type, with default cell values.
RasterSelector
Selects specific bands and palettes of a raster for subsequent transformer operations.

Vectors and Rasters

ImageRasterizer
Creates a raster representation of vector or point cloud input features, using the fme_color attribute over a solid background fill for vector features. Point clouds may be rendered using their color or intensity components.
NumericRasterizer
Creates a numeric raster representation of vector or point cloud input features, where cell values are taken from the z coordinates of the input features and overlaid on a uniform background.
MapnikRasterizer
Generates a raster from input vector and raster features, with fine control over symbolization and labeling, using the Mapnik toolkit.
PointCloudOnRasterComponentSetter
Sets point cloud compon
Related Transformers: RasterPyramider, RasterSubsetter, RasterTiler, WebMapTiler"
54;56b448f5-bdb7-4124-94bf-73c7c1a725ae;"Name: DWGStyler
Category: Cartography and Reports
Description: Name: DWGStyler Category: Cartography and Reports Description: ll be used to fill either the hatch or mpolygon.
Format attributes set:autocad_hatch_gradient_color2(if Area Entity Type is set to Hatch With Gradient Pattern);autocad_mpolygon_gradient_color2(if Area Entity Type is set to Mpolygon With Gradient Pattern)
Fill Angle
Fill Angle sets the angle of the gradient pattern that will be used to fill either the hatch or mpolygon.
Format attributes set:autocad_hatch_gradient_angle(if Area Entity Type is set to Hatch With Gradient Pattern);autocad_mpolygon_gradient_angle(if Area Entity Type is set to Mpolygon With Gradient Pattern)
Fill Origin X
Fill Origin X sets the x coordinate of the origin for the gradient pattern that will be used to fill either the hatch or mpolygon.
Format attributes set:autocad_hatch_gradient_origin_point_x(if Area Entity Type is set to Hatch With Gradient Pattern);autocad_mpolygon_gradient_origin_point_x(if Area Entity Type is set to Mpolygon With Gradient Pattern)
Fill Origin Y
Fill Origin Y sets the y coordinate of the origin for the gradient pattern that will be used to fill either the hatch or mpolygon.
Format attributes set:autocad_hatch_gradient_origin_point_y(if Area Entity Type is set to Hatch With Gradient Pattern);autocad_mpolygon_gradient_origin_point_y(if Area Entity Type is set to Mpolygon With Gradient Pattern)
Show Wipeout Border
Show Wipeout Border sets whether the border of a wipeout entity is visible.
Note that this setting is applied at the drawing level, and to set it, FME will use the value of this attribute on the first Wipeout it writes.
Format attributes set:autocad_wipeout_border_visible
When enabled, text features will be prepared for output to AutoCAD DWG/DXF.
Features with other geometry types are not affected by settings in this section.
Text Entity Type
Text Entity Type specifies the kind of entity that will be created to represent the feature when it is written to AutoCAD DWG/DXF.  The choices with the corresponding AutoCAD entity type are:
autocad_multi_text
Format attribute set:autocad_entity
TrueType Font Name
TrueType Font Name sets the name of the font that will be used to dr
Related Transformers: "
55;32d64f40-dc60-436e-8074-be23725102d0;"Name: PointCloudCreator
Category: Point Clouds
Description: Name: PointCloudCreator Category: Point Clouds Description: Creates a point cloud of specified size and density, with default component values.
Jump to Configuration

Typical Uses
Related Transformers: 2DGridCreator, Creator, RasterNumericCreator, RasterRGBCreator"
56;14af8729-0251-4b15-b758-ed89593acdd3;"Name: TextPropertyExtractor
Category: Calculated Values
Description: Name: TextPropertyExtractor Category: Calculated Values Description: Parameters

Text String
Name the attribute to contain the value of the input text geometry feature'sfme_text_stringtext attribute.
Text Size
Name the attribute to contain the value of the input text geometry feature'sfme_text_sizetext attribute.
Text Rotation
Name the attribute to contain the value of the input text geometry feature'sfme_rotationtext attribute.

Editing Transformer Parameters

Using a set of menu options, transformer parameters can be assigned by referencing other elements in theworkspace. More advanced functions, such as an advanced editor and an arithmetic editor, are also available in some transformers. To access a menu of these options, clickbeside the applicable parameter. For more information, seeTransformer Parameter Menu Options.

Defining Values

There are several ways to define a value for use in a Transformer. The simplest is to simply type in a value or string, which can include functions of various types such as attribute references, math and string functions, andworkspaceparameters. There are a number of tools and shortcuts that can assist in constructing values, generally available from the drop-down context menu adjacent to the value field.

Using the Text Editor

The Text Editor provides a convenient way to construct text strings (including regular expressions) from various data sources, such as attributes, parameters, and constants, where the result is used directly inside a parameter.
Text Editor

Using the Arithmetic Editor

The Arithmetic Editor provides a convenient way to construct math expressions from various data sources, such as attributes, parameters, and feature functions, where the result is used directly inside a parameter.
Arithmetic Editor

Conditional Values

Set values depending on one or more test conditions that either pass or fail.
Parameter Condition Definition Dialog

Content

Expressions and strings can include a number of functions, characters, parameters, and more.
When setting values - whether entered directly in a parameter or constructed using one of the editors - strings and expressions containing String, Math, Date/T
Related Transformers: "
57;2493947c-721e-4455-b6cb-acbaf3919675;"Name: TweetSearcher
Category: Integrations, Web
Description: Name: TweetSearcher Category: Integrations, Web Description: Runs a search for Twitter™ entries that contain the given query.Access to the Twitter search API is rate-limited.

Configuration
Related Transformers: JSONFragmenter, JSONExtractor, Tester, Tweeter, TweetStreamer, TwitterStatusFetcher"
58;d5bf009e-8b05-4195-a82a-046ef578ab00;"Name: PointOnLineOverlayer
Category: Filters and Joins, Spatial Analysis
Description: Name: PointOnLineOverlayer Category: Filters and Joins, Spatial Analysis Description: ired of FME. If the data needs ordering, it can be sorted in theworkspace(though the added processing overhead may negate any gains).
Sorting becomes more difficult according to the number of data streams. Multiple streams of data could be almost impossible to sort into the correct order, since all features matching aGroup Byvalue need to arrive before any features (of any feature type or dataset) belonging to the next group. In this case, usingGroup BywithWhen All Features Receivedmay be the equivalent and simpler approach.
As with many scenarios, testing different approaches in yourworkspacewith your data is the only definitive way to identify performance gains.
Point Tolerance
The Point Tolerance value is compared to the distance from the lines to the points, and the lines will be segmented if the distance is less than or equal to the Point Tolerance value. When such a match occurs, the attributes of the segmented lines are merged with the points and the attributes of the points are merged with the lines.
Aggregate Handling
Choose how aggregate geometries are to be handled.
Deaggregate: Decompose aggregates into their individual components.
Reject: Do not process aggregates and output them via the <Rejected> port.
Merge Measures

IfYes, any measures that exist on a line will be added to matching points. Measure values are determined according to theTreat Measures Asparameter.
If both point and line have measures of the same name, the point's values will be overwritten by the line's values.
IfNo, no measures will be copied, and any existing measures (on points or lines) will be output unchanged.
Treat Measures As
This parameter determines how measures are computed:
Continuous:The new measure value will be calculated, interpolating based on the nearest measures.
Discrete:The new measure value will be copied from the nearest measure.
If attributes on the incoming and original feature share the same name, but are not geometry attributes that start withfme_, then they are deemed conflicted.
If measures on the point and line share the same name, then they are deemed conflicted.
The resolution of conf
Related Transformers: AreaOnAreaOverlayer, Bufferer, Clipper, Intersector, LineOnAreaOverlayer, LineOnLineOverlayer, NeighborFinder, PointOnAreaOverlayer, PointOnPointOverlayer, SpatialFilter, SpatialRelator, TopologyBuilder"
59;7903b313-ce28-4afa-86d4-afca3efddd67;"Name: FilenamePartExtractor
Category: Strings
Description: Name: FilenamePartExtractor Category: Strings Description: nditions that either pass or fail.
Parameter Condition Definition Dialog

Content

Expressions and strings can include a number of functions, characters, parameters, and more.
When setting values - whether entered directly in a parameter or constructed using one of the editors - strings and expressions containing String, Math, Date/Time or FME Feature Functions will have those functions evaluated. Therefore, the names of these functions (in the form @<function_name>) should not be used as literal string values.
String Functions
Special Characters
Math Functions
Math Operators
FME Feature Functions
FME Parameters

Dialog Options - Tables

Transformers with table-style parameters have additional tools for populating and manipulating values.
Row Reordering

Enabled once you have clicked on a row item. Choices include:
Cut, Copy, and Paste

Enabled once you have clicked on a row item. Choices include:
Cut, copy, and paste may be used within a transformer, or between transformers.
Filter

Import

Reset/Refresh

Generally resets the table to its initial state, and may provide additional options to remove invalid entries. Behavior varies between transformers.
Note:Not all tools are available in all transformers.

FME Community

TheFME Communityis the place for demos, how-tos, articles, FAQs, and more. Get answers to your questions, learn from other users, and suggest, vote, and comment on new features.
Search forall results about the FilenamePartExtractoron theFME Community.
Related Transformers: "
60;df32f669-fddd-4d1c-8aa7-121b04109bb2;"Name: HullReplacer
Category: Geometries
Description: Name: HullReplacer Category: Geometries Description: erate both convex and concave hulls around a point cloud. Note that the bottom left corner of the data has an irregular edge, the result of LiDAR coverage along a coastline.

A point cloud is a single feature. There is a set of specialized point cloud transformers that operate on individual points, but other transformers generally treat their geometry as their rectangular footprint (bounding box).
To create a hull that honors the irregular edge, the point cloud is first routed into aPointCloudToPointCoercerand then on to a HullReplacer.

In the parameters dialog,Output Geometryis set toSingle Multipoint. Only one feature is output via theCoercedoutput port.

The resulting multipoint feature is no longer treated as a point cloud. Note that this will result in much longer processing times.

In the parameters dialog of the HullReplacer,Hull Typeis set toConvex (), andOutput Dimensionis changed fromAutomaticto2Dto ensure the hull is a footprint.

The resulting 2D hull honors the irregular boundary of the data. It replaces the multipoint geometry.

IfHull TypeisConcave )(andAlpha Valueis left blank (calculating the optimal alpha to produce a single hull), a tightly fitting hull is produced. Processing time is much longer.

In this example, we will generate a series of concave hulls for a set of property addresses while varying alpha values.
The input features are in a UTM83-10 coordinate system, with ground units in meters, and so the alpha value represents a measurement in meters as well.
Alpha Value
Concave Hull
10- Too small for useful results.

50- Tightly fitting, some input points fall outside alpha distance.

Default (blank)- optimal value calculated to produce a single area.

500- Loosely fitting but not convex.

10000- Identical to the convex hull.

Usage Notes

For triangulated surfaces, see theSurfaceModeller,Trianglesoutput.

Configuration
Related Transformers: 2DBoxReplacer, BoundingBoxAccumulator, BoundingBoxReplacer, BoundsExtractor, HullAccumulator, MinimumSpanningCircleReplacer, RasterExtentsCoercer"
61;5ca97eca-2246-4e03-8f78-3b07ec23db82;"Name: MeasureGenerator
Category: Calculated Values
Description: Name: MeasureGenerator Category: Calculated Values Description: Configuration
Related Transformers: "
62;435d2468-9ff8-4412-bcb0-cdea5086665f;"Name: Geocoder
Category: Integrations, Web
Description: Name: Geocoder Category: Integrations, Web Description: How does it work?

The Geocoder provides a single interface to numerous geocoding web services. Once a service is selected, the appropriate parameters are presented, including connection credentials and the expected attributes the service needs to perform geocoding.
As features pass through the transformer, these attributes are passed to the service, and the results retrieved.
If the feature is successfully matched by the service, the results (attributes and/or geometry) are added to the feature and it is output through the Output port.
If the feature geocoding fails for any reason (including addresses not found, invalid coordinates, or failed credential authentication), it is output through the <Rejected> port.
Modes
The Geocoder can perform a variety of tasks, dependent upon which service you choose to use. Each service will provide one or more of these modes of geocoding:
Forward Street Address Geocoding
Single free form street address to latitude/longitude values, for example:
""7445, 132nd Street, Surrey, BC, V3W 1J8""
Discrete street address elements to latitude/longitude values, for example:
""7445""
""132nd""
""Street""
""Surrey""
""BC""
""V3W 1J8""
Forward IP Address Geocoding
IP address string to latitude/longitude values
Forward Address Geocoding to Service ID
Single free-form street address or discrete street address elements to a service-specific identifier
Reverse Street Address Geocoding
Latitude/longitude values to a single street address string
Reverse Elevation Geocoding
Latitude/longitude values to elevation in meters
Reverse Timezone Geocoding
Latitude/longitude values to timezone code, name and offset
Reverse Street Address Geocoding from Service ID
Service specific lookup key to a single street address string
The geocoding service result is stored in output feature attributes, feature geometry, or both. For example, latitude/longitude output is represented on the feature as a point geometry, and also as ‘_latitude’ and ‘_longitude’ attributes.

Usage Notes
Related Transformers: None"
63;3577acd2-fe62-4171-9ab9-cbdefaf1ffba;"Name: TrelloConnector
Category: Integrations, Web, Workflows
Description: Name: TrelloConnector Category: Integrations, Web, Workflows Description: How does it work?

The TrelloConnector uses your Trello account credentials (either via a previously defined FME web connection, or by setting up a new FME web connection right from the transformer) to access the project management service.
Depending on your choice of actions, it will create, update, archive, or list information from Trello Boards, Lists, and Cards. On Create, Update, and List actions, information from the Trello objects can be added to the output features. On Archive actions, basic identification information from the archived Trello object is added to the output attribute.

Configuration
Related Transformers: EthereumConnector, SalesforceConnector, SlackConnector"
64;a0312824-336c-4fa5-a7a9-dec6df9ed8c7;"Name: CommonLocalReprojector
Category: Cartography and Reports, Coordinates
Description: Name: CommonLocalReprojector Category: Cartography and Reports, Coordinates Description: How does it work?

The CommonLocalReprojector receives features and calculates their cumulative bounding box, then reprojects the features to a local coordinate system, centered on that box, with ground units in meters. The center of the data is used as the origin point to minimize and equalize distortion in all directions.
TheProjection Typemay be eitherEquidistant (AZMED)orEqual Area (ASMEA).

Reprojector vs. CommonLocalReprojector

TheReprojectorcan also reproject features to local coordinate systems, however, each feature is handled individually and receives its own coordinate system based on its bounding box. An example using neighborhood polygons is shown below(A).Each feature’s origin is at its center, and so they appear stacked on top of each other.
The CommonLocalReprojector creates a single local coordinate system that spans all of the input features, and applies it to all of them(B).
Related Transformers: LocalCoordinateSystemSetter, Reprojector"
65;f80f6c05-20e3-48f1-9223-574a5c3c26ba;"Name: AutodeskBIM360DocsConnector
Category: Integrations, Web, Workflows
Description: Name: AutodeskBIM360DocsConnector Category: Integrations, Web, Workflows Description: it view, for example) this will be the name of the source file it was extracted from.
_file_or_folder
Whether the item is a file or a folder.
_version_number
The version number of the file.
_created
Date and time when the file was created.
_created_by
Name of user who created the file or folder.
_last_modified
Date and time when the file was last modified.
_last_modified_by
Name of user who last modified the file or folder.

Data Source

Upload
The type of data to be uploaded.
When working with large objects, File is a better choice than Attribute as the data will be streamed directly from disk and not require that the object be stored entirely in memory on a feature.
When wanting to upload content from a folder, it is better to upload as a folder instead of setting a fixed path and sending multiple features into the connector to upload as a file.
File to Upload
The file to be uploaded to BIM 360 Docs ifUploadis set toFile.
Folder to Upload
Include Subfolders
Choose whether to upload subfolders of theFolder to Uploador not.
Attribute to Upload as File
The data to be uploaded, supplied from an attribute ifUploadis set toAttribute.

Upload Options

Hub
The ID of the BIM 360 Hub. You may browse for the correct Hub.
Project
The Project of interest within the hub. A hub can contain many projects, which can be browsed. The browser will show all projects that the authenticated user is authorized to view.
Upload with File Name
The name of the file created from the data supplied inAttribute to Upload as File. The name must include a filename extension (for example, .dwg, .rvt, .pdf).
If File Exists
Specify what to do if the file already exists on BIM 360 Docs.

Output Attributes

_name
Name of the file or folder.
_id
Item id of the file or folder.
_full_path
Full path of the file or folder, from the root of the project.
_project
The Project ID of the file or folder.
_extension
The extension of the file.
_hub
The Hub ID of the file or folder.
_file_or_folder
Whether the item is a file or a folder.
_version_number
The version number of the file.
_created
Date and time when the file was created.
_created_by
N
Related Transformers: GoogleDriveConnector, SharePointOnlineConnector, S3Connector"
66;a79431f0-34de-4218-8ebf-bd161be47d25;"Name: NeighborFinder
Category: Spatial Analysis
Description: Name: NeighborFinder Category: Spatial Analysis Description: l then supply the new attributes to the Base features.

In the Parameters dialog,Number of Neighbors to Findis set to1, as we want only the single closest match to be used.Treat Polygons Asis set to Areas.
Note that the default setting forAccumulation Mode-Merge Candidate- will copy the Candidate’s attributes onto the Base feature (which is what we want).

The outputMatchedBaseparcel polygons now have attributes from their closest Candidate match.

In this example, we have a dataset of bike path lines, and want to find drinking water fountains within 100 meters of the paths.

The bike paths are routed into a NeighborFinder as theBasefeatures - the ones that the transformer will try to find matches for, and output.
The water fountain points are connected as theCandidates- the ones that will be searched for matches, and will then supply attributes to the Base features, as a list.

In the Parameters dialog,Number of Neighbors to Findis blank, and so no limit is imposed and all matches will be recorded.Maximum Distanceis set to100(ground units, here in meters.)
By enablingGenerate Listand selecting specific attributes from the drinking fountain data, alist attributewill be added to the bike paths to store multiple matches.

One item is added to the_candidateslist attribute for each match, as shown on the selected feature here. The list can be further manipulated to work with this information - seeList Attributes.
Related Transformers: AreaOnAreaOverlayer, Bufferer, Clipper, Intersector, LineOnAreaOverlayer, LineOnLineOverlayer, NeighborPairFinder, PointOnAreaOverlayer, PointOnLineOverlayer, PointOnPointOverlayer, SpatialFilter, SpatialRelator, TopologyBuilder"
67;f541ab2d-6df9-414e-a5ff-e23ed38d6c0a;"Name: PointCloudFilter
Category: Filters and Joins, Point Clouds
Description: Name: PointCloudFilter Category: Filters and Joins, Point Clouds Description: Operands

Operands may be any of the following:

Example(s)
Description
Component
@Component(z)
@Component(color_red)
@Component(return)
@Component(<user_component>)
A component from an input point cloud.
Note that if a component has a scale/offset, the ""applied"" value of the component will be used in the expression.
Constant
42
0
13.5
3.
6e4
7.91e+16
A numeric constant, either integer or floating-point.
Where possible, numeric constants are interpreted as integer values; otherwise, operands will be treated as floating-point numbers.
Attribute Value
Function
@sqrt(@Component(z))
@if(@Component(z) < 0,0,@Component(z))
A function whose arguments have any of the above forms for operands. Available functions include:

abs(arg)
Returns the absolute value of arg.
acos(arg)
Returns the arc cosine of arg, in the range [0,pi] radians. Arg should be in the range [-1,1].
asin(arg)
Returns the arc sine of arg, in the range [-pi/2,pi/2] radians. Arg should be in the range [-1,1].
atan(arg)
Returns the arc tangent of arg, in the range [-pi/2,pi/2] radians.
atan2(y,x)
Returns the arc tangent of y/x, in the range [-pi,pi] radians. x and y cannot both be 0.
ceil(arg)
Returns the smallest integer value not less than arg.
clamp(value,min,max)
Returns the clamp of value based on the boundaries specified by min and max. If min <= value <= max, clamp returns value. If value < min, clamp returns min. If value > max, clamp returns max.
cos(arg)
Returns the cosine of arg, measured in radians.
cosh(arg)
Returns the hyperbolic cosine of arg. If the result would cause an overflow, an error is returned.
exp(arg)
Returns the exponential of arg, defined as e**arg. If the result would cause an overflow, an error is returned.
floor(arg)
Returns the largest integer value not greater than arg.
fmod(x,y)
Returns the floating-point remainder of the division of x by y. If y is 0, an error is returned.
if(c,x,y)
Returns x if c is 0, and y otherwise.
index()
Returns the point index. The first point in the point cloud is index 0, the second is index 1, etc.
log(arg)
Returns the natural logarithm of arg. Arg must be a positive val
Related Transformers: PointCloudCombiner, PointCloudMerger, PointCloudSorter, PointCloudSplitter"
68;dad947e3-6d23-4cd0-beb1-1cc8d31982fb;"Name: Deaggregator
Category: Attributes, Filters and Joins
Description: Name: Deaggregator Category: Attributes, Filters and Joins Description: original, non-list attribute, and one from thesomelistlist attribute. If the generated attributes share the same name as a feature's original, non-list attributes, but are not geometry attributes that start withfme_, they are deemed conflicted.
Use the following parameters to specify which attributes to keep on the output features, and which attribute's values to maintain in case of conflicts.
Accumulation Mode
Merge List Attributes: The feature retains all of its own un-conflicted attributes, and additionally acquires any un-conflicted attributes generated by the transformer. This mode handles conflicted attributes according to  theConflict Resolutionparameter.
Prefix List Attributes: The feature retains all of its own attributes. In addition, the feature acquires attributes generated by the transformer, with the name prefixed with thePrefixparameter.
Only Use List Attributes: All of the feature's attributes are removed, except geometry attributes that start withfme_. Then, the feature acquires all of the attributes and associated values that are generated from the exploded list attribute.
Conflict Resolution
Use Original Attribute Values: If a conflict occurs, maintain the values of the original, non-list attribute.
Use List Attribute Values: If a conflict occurs, transfer the values of the generated attributes onto the original, non-list attributes.
Prefix
If theAccumulation Modeparameter is set toPrefix List Attributes, this value prefixes attributes that are added to the feature.
Output Attribute Names
Part Number Attribute
IfPart Number Attributeis specified, then each deaggregated output feature is given an attribute containing the part's index within the original aggregate geometry.
Geometry Name Attribute
For geometries that have names, supplying theGeometry Name Attributewill set the attribute to the name of the deaggregated geometry part.
ID Selection
InPreserve Hierarchymode, the user may decompose hierarchical geometries and attach either ID and Parent ID, ID and Child ID, or all three sets of ID information. If a hierarchical geometry were to be represented as a tree, t
Related Transformers: "
69;1019c835-f42b-4997-99a8-ba7e26ecba06;"Name: PointCloudComponentAdder
Category: Point Clouds
Description: Name: PointCloudComponentAdder Category: Point Clouds Description: ons) from various data sources, such as attributes, parameters, and constants, where the result is used directly inside a parameter.
Text Editor

Using the Arithmetic Editor

The Arithmetic Editor provides a convenient way to construct math expressions from various data sources, such as attributes, parameters, and feature functions, where the result is used directly inside a parameter.
Arithmetic Editor

Conditional Values

Set values depending on one or more test conditions that either pass or fail.
Parameter Condition Definition Dialog

Content

Expressions and strings can include a number of functions, characters, parameters, and more.
When setting values - whether entered directly in a parameter or constructed using one of the editors - strings and expressions containing String, Math, Date/Time or FME Feature Functions will have those functions evaluated. Therefore, the names of these functions (in the form @<function_name>) should not be used as literal string values.
String Functions
Special Characters
Math Functions
Math Operators
FME Feature Functions
FME Parameters

Dialog Options - Tables

Transformers with table-style parameters have additional tools for populating and manipulating values.
Row Reordering

Enabled once you have clicked on a row item. Choices include:
Cut, Copy, and Paste

Enabled once you have clicked on a row item. Choices include:
Cut, copy, and paste may be used within a transformer, or between transformers.
Filter

Import

Reset/Refresh

Generally resets the table to its initial state, and may provide additional options to remove invalid entries. Behavior varies between transformers.
Note:Not all tools are available in all transformers.

Reference

Processing Behavior
Feature-Based
Feature Holding
No

FME Community

TheFME Communityis the place for demos, how-tos, articles, FAQs, and more. Get answers to your questions, learn from other users, and suggest, vote, and comment on new features.
Search forall results about the PointCloudComponentAdderon theFME Community.

Examples may contain information licensed under the Open Government Licence – Vanc
Related Transformers: PointCloudComponentCopier, PointCloudComponentKeeper, PointCloudComponentRemover, PointCloudComponentRenamer, PointCloudComponentTypeCoercer, PointCloudExpressionEvaluator, PointCloudOnRasterComponentSetter"
70;3eff7d14-10c6-49da-843f-819d0fc61844;"Name: FMEFlowJobWaiter
Category: Integrations, Web, Workflows
Description: Name: FMEFlowJobWaiter Category: Integrations, Web, Workflows Description: seeTransformer Parameter Menu Options.

Defining Values

There are several ways to define a value for use in a Transformer. The simplest is to simply type in a value or string, which can include functions of various types such as attribute references, math and string functions, andworkspaceparameters. There are a number of tools and shortcuts that can assist in constructing values, generally available from the drop-down context menu adjacent to the value field.

Using the Text Editor

The Text Editor provides a convenient way to construct text strings (including regular expressions) from various data sources, such as attributes, parameters, and constants, where the result is used directly inside a parameter.
Text Editor

Using the Arithmetic Editor

The Arithmetic Editor provides a convenient way to construct math expressions from various data sources, such as attributes, parameters, and feature functions, where the result is used directly inside a parameter.
Arithmetic Editor

Conditional Values

Set values depending on one or more test conditions that either pass or fail.
Parameter Condition Definition Dialog

Content

Expressions and strings can include a number of functions, characters, parameters, and more.
When setting values - whether entered directly in a parameter or constructed using one of the editors - strings and expressions containing String, Math, Date/Time or FME Feature Functions will have those functions evaluated. Therefore, the names of these functions (in the form @<function_name>) should not be used as literal string values.
String Functions
Special Characters
Math Functions
Math Operators
FME Feature Functions
FME Parameters

Dialog Options - Tables

Transformers with table-style parameters have additional tools for populating and manipulating values.
Row Reordering

Enabled once you have clicked on a row item. Choices include:
Cut, Copy, and Paste

Enabled once you have clicked on a row item. Choices include:
Cut, copy, and paste may be used within a transformer, or between transformers.
Filter

Import

Reset/Refresh

Generally resets the table to its initial sta
Related Transformers: "
71;a86fda00-4411-468b-a85e-aefdf48c2d6d;"Name: SharedItemAdder
Category: 3D
Description: Name: SharedItemAdder Category: 3D Description: Adds or replaces Appearances, Textures, Rasters, or Geometry Definitions in the internal FMELibrary.

Usage Notes

When adding Appearances or Textures, use style properties as described in theAppearanceStyler

Configuration
Related Transformers: "
72;fa8854fc-4789-49fb-88c4-f8e61aa28d4f;"Name: PointCloudMerger
Category: Filters and Joins, Point Clouds
Description: Name: PointCloudMerger Category: Filters and Joins, Point Clouds Description:  each point are interpolated from band values at the point location.
PointCloudPropertyExtractor
Extracts the geometry properties of a point cloud feature and exposes them as attributes, optionally checking for their existence, retrieving component properties, and finding minimum and maximum values. Extents may also be recalculated and updated.
PointCloudReplacer
Decodes a binary attribute containing encoded point clouds stored as Blobs, replacing the feature’s geometry with the decoded point cloud.
PointCloudSimplifier
Reduces the number of points in a point cloud by selectively keeping points based on the shape of the point cloud. The simplified and removed points are output as two discrete point clouds.
PointCloudSorter
Sorts the points within a point cloud by one or more component values.
PointCloudSplitter
Separates point clouds into multiple features based on component values, color, or first/last return.
PointCloudStatisticsCalculator
Calculates statistics on point cloud components and adds the results as attributes.
PointCloudSurfaceBuilder
Takes an input point cloud and reconstructs it into an output mesh.
PointCloudThinner
Reduces the number of points in (thins) a point cloud by keeping points at a fixed interval, a maximum number of points, or a set quantity of first or last points. Remaining points are discarded.
PointCloudToPointCoercer
Converts point clouds to point or multipoint geometries, optionally retaining attribute and component values.
PointCloudTransformationApplier
Applies a point cloud’s scale, offset, or transformation matrix to it, recalculating component values and removing the transformation values.

Configuration
Related Transformers: ChangeDetector, FeatureMerger, ListBasedFeatureMerger, PointCloudCombiner, PointCloudComponentCopier, TraitMerger"
73;fe542ea0-5391-4ec7-b745-902aa250860c;"Name: PointCloudExtractor
Category: Point Clouds
Description: Name: PointCloudExtractor Category: Point Clouds Description: Serializes the geometry of a point cloud feature into a Blob attribute, encoding the contents according to a choice of common binary point cloud formats.
Jump to Configuration

Typical Uses

Storage of point cloud geometry, as a temporary backup within aworkspace

How does it work?

The PointCloudExtractor receives point cloud features and puts a copy of the point cloud geometry into an attribute, as a Blob - a Binary Large OBject.
The Blob content may be encoded as a variety of common point cloud formats. The name of the chosen format will also be recorded in an attribute for reference when decoding.
There are no parameters in the transformer to control how the point cloud is formatted, and encoding is done based on default settings for the chosen format. If necessary, format-specific settings may be overwritten by setting format attributes on the point cloud feature, prior to using the PointCloudExtractor. Consult the appropriate format’s Writer documentation for a complete list of available attributes and format limitations.
As the point cloud exits the transformer, it has two copies of its geometry - its original geometry and a copy as a Blob in an attribute.

Examples

In this example, we will prepare and write a point cloud to a PostgreSQL database, which does not support geometry as an attribute type.
The point cloud feature is routed into a PointCloudExtractor, and then on to a PostgreSQL Writer.

In the parameters dialog,Formatis set toLAZ, and theFormat NameandBlobattributes are left with the default names applied.

Examining the output from the PointCloudExtractor in theFME Data Inspector, note that the feature has two added attributes -_pointCloudBlob, containing the encoded point cloud, and_pointCloudFormatName, containing the name (LAZ) of the chosen encoding.

In the writer parameters,User Attributes, theTypeof_pointCloudBlobis adjusted tobytea, which stores binary strings. (Note that the appropriate data type may vary between database formats.)
Related Transformers: AttributeFileWriter, GeometryExtractor, GeometryRemover, GeometryReplacer, PointCloudReplacer, RasterExtractor, RasterReplacer"
74;1ae30a8e-00cb-4fd8-b10d-a129ed12e16a;"Name: LineOnAreaOverlayer
Category: Filters and Joins, Spatial Analysis
Description: Name: LineOnAreaOverlayer Category: Filters and Joins, Spatial Analysis Description: Performs a line-on-area overlay, either splitting lines where they intersect area boundaries or subdividing areas where split by lines. Attributes may be shared between related lines and areas (spatial join).
Jump to Configuration

Typical Uses
Related Transformers: AreaOnAreaOverlayer, Bufferer, Clipper, Intersector, LineOnLineOverlayer, NeighborFinder, PointOnAreaOverlayer, PointOnLineOverlayer, PointOnPointOverlayer, SpatialFilter, SpatialRelator, TopologyBuilder"
75;389014d4-d669-4cd6-a900-dd6fd74e08e6;"Name: AutodeskDocsConnector
Category: Integrations, Web, Workflows
Description: Name: AutodeskDocsConnector Category: Integrations, Web, Workflows Description:  not be used as literal string values.
String Functions
Special Characters
Math Functions
Math Operators
FME Feature Functions
FME Parameters

Dialog Options - Tables

Transformers with table-style parameters have additional tools for populating and manipulating values.
Row Reordering

Enabled once you have clicked on a row item. Choices include:
Cut, Copy, and Paste

Enabled once you have clicked on a row item. Choices include:
Cut, copy, and paste may be used within a transformer, or between transformers.
Filter

Import

Reset/Refresh

Generally resets the table to its initial state, and may provide additional options to remove invalid entries. Behavior varies between transformers.
Note:Not all tools are available in all transformers.

Reference

Processing Behavior
Feature-Based
Feature Holding
No

FME Community

TheFME Communityis the place for demos, how-tos, articles, FAQs, and more. Get answers to your questions, learn from other users, and suggest, vote, and comment on new features.
Search forall results about the AutodeskDocsConnectoron theFME Community.

Examples may contain information licensed under the Open Government Licence – Vancouver and/or the Open Government Licence – Canada.
Related Transformers: GoogleDriveConnector, SharePointOnlineConnector, S3Connector"
76;dbc16dac-0395-46b8-b855-a0e75f38a966;"Name: DropboxConnector
Category: Integrations, Web, Workflows
Description: Name: DropboxConnector Category: Integrations, Web, Workflows Description: varies between transformers.
Note:Not all tools are available in all transformers.

Reference

Processing Behavior
Feature-Based
Feature Holding
No

FME Community

TheFME Communityis the place for demos, how-tos, articles, FAQs, and more. Get answers to your questions, learn from other users, and suggest, vote, and comment on new features.
Search forall results about the DropboxConnectoron theFME Community.

Examples may contain information licensed under the Open Government Licence – Vancouver and/or the Open Government Licence – Canada.
Related Transformers: AzureBlobStorageConnector, AzureFileStorageConnector, BoxConnector, CesiumIonConnector, FMEFlowResourceConnector, GoogleCloudStorageConnector, GoogleDriveConnector, HDFSConnector, OneDriveConnector, ProjectWiseWSGConnector, S3Connector"
77;c9ff4fa0-2615-4678-87ad-15bca026b5f0;"Name: Reprojector
Category: Coordinates
Description: Name: Reprojector Category: Coordinates Description: Reprojects feature x and y coordinates from one 
 coordinate system to another.
Jump to Configuration

Typical Uses
Related Transformers: AttributeReprojector, CommonLocalReprojector, CsmapAttributeReprojector, CsmapReprojector, EsriReprojector, GridInQuestIIReprojector, GtransAttributeReprojector, GtransReprojector, PROJAttributeReprojector, PROJReprojector, ReframeReprojector, ReprojectAngleCalculator, ReprojectLengthCalculator"
78;524be07c-1e39-492b-a9f1-ebedf9fdc187;"Name: BoundingBoxReplacer
Category: Geometries
Description: Name: BoundingBoxReplacer Category: Geometries Description: Replaces feature geometry with a box or cube that spans the extents of the feature.
Jump to Configuration

Typical Uses

Determining the extents of individual features

How does it work?

The BoundingBoxReplacer receives features with any geometry type and individually replaces their geometry with one of:
2D Bounding Box- the minimum enclosing rectangle, with sides parallel to the x and y axes.
2D Oriented Bounding Box- rotated to fit the feature as tightly as possible while remaining a rectangle.
3D Bounding Cube- the minimum enclosing cube for 3D features, including point clouds. The cube is axis-aligned.
Requesting 2D bounding boxes for 3D features produces footprints. Requesting a 3D bounding cube for a 2D feature produces a 2D box.
If an output bounding box or cube has zero area (if the input feature is a single point or vertical line, for example), it will become a point or line as appropriate.
Feature attributes are retained.

Examples

In this example, we will generate two types of 2D bounding boxes for a set of transit line features.
Note that there are three features, with an attribute containing their name.

The features are routed into a BoundingBoxReplacer.
Related Transformers: 2DBoxReplacer, 2DGridAccumulator, 2DGridCreator, BoundingBoxAccumulator, BoundsExtractor, Creator, HullAccumulator, HullReplacer, MinimumSpanningCircleReplacer, RasterExtentsCoercer"
79;85812279-0617-45a6-b105-2a411861d6d3;"Name: TrelloConnector
Category: Integrations, Web, Workflows
Description: Name: TrelloConnector Category: Integrations, Web, Workflows Description: to be added as an attachment to new card.
Attachment URL
A URL to be added as an attachment to the card.
Comment
A comment to add to the card.
Trello Member IDs
Members of the selected Trello board to add to the card. If valid credentials have been provided and a valid board has been selected from your account, you may browse for members.
For theCreate,List, andUpdateactions:
The selected attributes will be added to the output feature.
_id
The ID of the Trello object.
_name
The name of the Trello object
_url
Available when the Trello type isBoardorCard. The URL of the Trello object.
_short_url
Available when the Trello type isBoardorCard. The short URL of the Trello object.
_board_id
Available when the Trello type isListorCard. The parent board ID of the Trello object.
_list_id
Available when the Trello type isCard. The parent list ID of the Trello card.
_board_name
Available when the Trello type isListorCard. The parent board name of the Trello object.
_list_name
Available when the Trello type isCard. The parent list name of the Trello card.
_organization_id
Available when the Trello type isBoard. The team ID that the Trello board is added to.
_organization_name
Available when the Trello type isBoard. The team name that the Trello board is added to.
_description
Available when the Trello type isBoardorCard. The description of the Trello object.
_member_ids{}
Available when the Trello type isBoardorCard. The ids of the members of the Trello object.
_member_names
Available when the Trello type isBoardorCard. The names of the members of the Trello object.
_due_date
Available when the Trello type isCard. The due date and time for the Trello card, in UTC time zone and ISO format.
_comments{}
Available when the Trello type isCard. The comments on the Trello card.
_attachment_urls{}
Available when the Trello type isCard. URL links to the file and URL attachments of the Trello card.

For theArchiveaction:
The following attributes will be added to the output feature.
_id
The ID of the Trello object.
_board_id
Output when the Trello type isListorCard. The parent board ID of the Trello object.
_
Related Transformers: EthereumConnector, SalesforceConnector, SlackConnector"
80;46434a10-b2df-472f-adda-76a910017dfc;"Name: RasterObjectDetectorSampleGenerator
Category: Rasters
Description: Name: RasterObjectDetectorSampleGenerator Category: Rasters Description: ve Samples Fileparameter.
Starting Transparency Value
Background color that denotes transparent color. Since there might be compression artifacts, the amount of color tolerance can be specified by theTransparency Thresholdparameter.
Transparency Threshold
All pixels within the following range: from (Starting Transparency Value-Transparency Threshold) to (Starting Transparency Value+Transparency Threshold) are interpreted as transparent.
Invert Colors
If the parameter is set toYes, colors will be inverted.
Invert Randomly
If the parameter is set toYes, colors will be inverted randomly.
Maximum Intensity Deviation
Maximum intensity deviation of pixels in foreground samples.
Maximum Rotation Angles
Maximum rotation angle towards X, Y and Z axis specified in radians.
Maximum Sample Scale
When specified, the source image will not be scaled beyond the number specified when it is being placed in the background image. If not specified, the background image size determines the maximum scale.
Random Number Generator Seed
RNG Seed can be used to reproduce the same results of samples generation. If the seed is left unspecified, the seed is determined randomly.

Editing Transformer Parameters

Using a set of menu options, transformer parameters can be assigned by referencing other elements in theworkspace. More advanced functions, such as an advanced editor and an arithmetic editor, are also available in some transformers. To access a menu of these options, clickbeside the applicable parameter. For more information, seeTransformer Parameter Menu Options.

Defining Values

There are several ways to define a value for use in a Transformer. The simplest is to simply type in a value or string, which can include functions of various types such as attribute references, math and string functions, andworkspaceparameters. There are a number of tools and shortcuts that can assist in constructing values, generally available from the drop-down context menu adjacent to the value field.

Using the Text Editor

The Text Editor provides a convenient way to construct text strings (including regular expressions) fr
Related Transformers: RasterObjectDetectionModelTrainer, RasterObjectDetector, RasterObjectDetectorSamplePreparer"
81;a0aa7569-a959-47e1-8b01-fae0afc58814;"Name: RasterBandRemover
Category: Rasters
Description: Name: RasterBandRemover Category: Rasters Description: Usage Notes
Related Transformers: RasterBandAdder, RasterBandCombiner, RasterBandKeeper, RasterBandSeparator"
82;959556ec-277d-467a-9457-c35ede1a5217;"Name: HTMLExtractor
Category: Integrations, Strings, Web, Workflows
Description: Name: HTMLExtractor Category: Integrations, Strings, Web, Workflows Description: Input Ports

This transformer accepts any feature.

Output Ports

Features with attributes containing the results of Extract Queries..
If an error occurs, the feature will be output via the <Rejected> port, with information about the error contained in the fme_rejection_code and fme_rejection_message attributes.
Rejected Feature Handling:can be set to either terminate the translation or continue running when it encounters a rejected feature. This setting is available both as a defaultFME optionand as aworkspace parameter.

Parameters

HTML Input
The type of source. Choices include:
HTML Content
IfHTML Inputis set toContent, HTML content can either be specified directly in theHTML Contentfield, or set to the value of an attribute.
HTML File
IfHTML Inputis set toFile, the path to an input HTML file can be specified.
Target Attribute
The name of the attribute that will hold the results of the query.
CSS Selector
A CSS selector which specifies a tag or set of tags in the HTML document or content.
A list of selectors can be found at:
CSS Selector Reference
Tag Part/HTML Attribute
This parameter can be set to
Value: the value inside the HTML tag will be extracted
Whole: the entire tag will be extracted
Text: the text inside the HTML tag will be extracted
All Text: the text inside the HTML tag, including the text from all descendant tags, will be extracted
Alternatively, an HTML attribute name (such as “href” or “alt”) can be entered. This will result in the attribute being extracted from the tag.
Parser
If necessary, select an alternate parsing library. Choices include:
Default Parser
lxml
Both parsers should return the same results on well-formatted input, but results may differ if that is not the case. In general, the lxml parser is faster, but the Default Parser is more lenient with input.
Return Format
If this is set toFirst Match, the target attributes will contain only the first element found that matches the query.
If set toList Attributes, the target attributes will be lists, and will contain all results matching the query.
Verify HTTPS Certificates
Prior to FME 2022.0, web access through t
Related Transformers: HTTPCaller"
83;b7fa4d5e-16a3-4a14-b27c-75f1da5e0329;"Name: XMLXQueryUpdater
Category: 
Description: Name: XMLXQueryUpdater Category:  Description: provides a convenient way to construct text strings (including regular expressions) from various data sources, such as attributes, parameters, and constants, where the result is used directly inside a parameter.
Text Editor

Using the Arithmetic Editor

The Arithmetic Editor provides a convenient way to construct math expressions from various data sources, such as attributes, parameters, and feature functions, where the result is used directly inside a parameter.
Arithmetic Editor

Conditional Values

Set values depending on one or more test conditions that either pass or fail.
Parameter Condition Definition Dialog

Content

Expressions and strings can include a number of functions, characters, parameters, and more.
When setting values - whether entered directly in a parameter or constructed using one of the editors - strings and expressions containing String, Math, Date/Time or FME Feature Functions will have those functions evaluated. Therefore, the names of these functions (in the form @<function_name>) should not be used as literal string values.
String Functions
Special Characters
Math Functions
Math Operators
FME Feature Functions
FME Parameters

Dialog Options - Tables

Transformers with table-style parameters have additional tools for populating and manipulating values.
Row Reordering

Enabled once you have clicked on a row item. Choices include:
Cut, Copy, and Paste

Enabled once you have clicked on a row item. Choices include:
Cut, copy, and paste may be used within a transformer, or between transformers.
Filter

Import

Reset/Refresh

Generally resets the table to its initial state, and may provide additional options to remove invalid entries. Behavior varies between transformers.
Note:Not all tools are available in all transformers.

FME Community

TheFME Communityis the place for demos, how-tos, articles, FAQs, and more. Get answers to your questions, learn from other users, and suggest, vote, and comment on new features.
Search forall results about the XMLXQueryUpdateron theFME Community.
Related Transformers: "
84;11ee9fd1-ef9c-4d6e-98ce-2bc1cbbc4c39;"Name: Matcher
Category: Data Quality
Description: Name: Matcher Category: Data Quality Description: ted Attributes
Enabled whenAdd To Listis set toSelected Attributes. Specify the attributes you wish to be included.

Editing Transformer Parameters

Using a set of menu options, transformer parameters can be assigned by referencing other elements in theworkspace. More advanced functions, such as an advanced editor and an arithmetic editor, are also available in some transformers. To access a menu of these options, clickbeside the applicable parameter. For more information, seeTransformer Parameter Menu Options.

Defining Values

There are several ways to define a value for use in a Transformer. The simplest is to simply type in a value or string, which can include functions of various types such as attribute references, math and string functions, andworkspaceparameters. There are a number of tools and shortcuts that can assist in constructing values, generally available from the drop-down context menu adjacent to the value field.

Using the Text Editor

The Text Editor provides a convenient way to construct text strings (including regular expressions) from various data sources, such as attributes, parameters, and constants, where the result is used directly inside a parameter.
Text Editor

Using the Arithmetic Editor

The Arithmetic Editor provides a convenient way to construct math expressions from various data sources, such as attributes, parameters, and feature functions, where the result is used directly inside a parameter.
Arithmetic Editor

Conditional Values

Set values depending on one or more test conditions that either pass or fail.
Parameter Condition Definition Dialog

Content

Expressions and strings can include a number of functions, characters, parameters, and more.
When setting values - whether entered directly in a parameter or constructed using one of the editors - strings and expressions containing String, Math, Date/Time or FME Feature Functions will have those functions evaluated. Therefore, the names of these functions (in the form @<function_name>) should not be used as literal string values.
String Functions
Special Characters
Math Functi
Related Transformers: ChangeDetector, DatabaseJoiner, DuplicateFilter, FeatureJoiner, InlineQuerier, ListBasedFeatureMerger, SQLCreator, SQLExecutor"
85;8735ad92-618d-40ba-b9d6-e43647bcd224;"Name: RasterCellValueReplacer
Category: Rasters
Description: Name: RasterCellValueReplacer Category: Rasters Description: ccording 
 to the input band indices.
RasterBandPropertyExtractor
Extracts the band and palette properties of a raster feature and exposes them as attributes.
RasterBandRemover
Removes any selected bands from a raster feature.
RasterBandSeparator
Separates bands or unique band and palette combinations, and outputs either individual raster features or a single new raster feature containing all combinations.
RasterStatisticsCalculator
Calculates statistics on raster bands and adds the results as attributes.

Working with Cells

RasterAspectCalculator
Calculates the aspect (direction of slope) for each cell of a raster. Aspect is measured in degrees from 0 to 360, clockwise from north.
RasterCellCoercer
Creates individual points or polygons for each cell in a raster, optionally extracting band values as z coordinates or attributes.
RasterCellValueCalculator
Evaluates basic arithmetic , minimum, maximum or average operations on the cell values of a pair of rasters.
RasterCellValueReplacer
Replaces a range of band values in a raster with a new single value.
RasterCellValueRounder
Rounds off raster cell values.
RasterSegmenter
Partitions a raster image into arbitrarily sized groups of cells from the input image based on intensity differences in the input raster image cells.
RasterSingularCellValueCalculator
Performs basic arithmetic operations on the cell values of a raster against a numeric value.
RasterSlopeCalculator
Calculates the slope (maximum rate of change in z) for each cell of a raster.

Working with Palettes

RasterPaletteAdder
Creates a palette from an attribute, and adds this palette to all selected bands on a raster.
RasterPaletteExtractor
Creates a string representation of an existing palette on a raster and saves it to an attribute.
RasterPaletteGenerator
Generates a palette out of the selected band(s) of a raster. The output raster will have the selected band(s) replaced by a new band with a palette.
RasterPaletteInterpretationCoercer
Alters the interpretation type of raster palettes.
RasterPaletteNodataSetter
Identifies the palette key that matches a raster ban
Related Transformers: RasterCellValueCalculator, RasterCellValueRounder, RasterExpressionEvaluator, RasterSingularCellValueCalculator"
86;ea5a18e9-a62b-45b2-860b-d85cf5dc7f7f;"Name: VertexCreator
Category: Geometries
Description: Name: VertexCreator Category: Geometries Description: and an arithmetic editor, are also available in some transformers. To access a menu of these options, clickbeside the applicable parameter. For more information, seeTransformer Parameter Menu Options.

Defining Values

There are several ways to define a value for use in a Transformer. The simplest is to simply type in a value or string, which can include functions of various types such as attribute references, math and string functions, andworkspaceparameters. There are a number of tools and shortcuts that can assist in constructing values, generally available from the drop-down context menu adjacent to the value field.

Using the Text Editor

The Text Editor provides a convenient way to construct text strings (including regular expressions) from various data sources, such as attributes, parameters, and constants, where the result is used directly inside a parameter.
Text Editor

Using the Arithmetic Editor

The Arithmetic Editor provides a convenient way to construct math expressions from various data sources, such as attributes, parameters, and feature functions, where the result is used directly inside a parameter.
Arithmetic Editor

Conditional Values

Set values depending on one or more test conditions that either pass or fail.
Parameter Condition Definition Dialog

Content

Expressions and strings can include a number of functions, characters, parameters, and more.
When setting values - whether entered directly in a parameter or constructed using one of the editors - strings and expressions containing String, Math, Date/Time or FME Feature Functions will have those functions evaluated. Therefore, the names of these functions (in the form @<function_name>) should not be used as literal string values.
String Functions
Special Characters
Math Functions
Math Operators
FME Feature Functions
FME Parameters

Dialog Options - Tables

Transformers with table-style parameters have additional tools for populating and manipulating values.
Row Reordering

Enabled once you have clicked on a row item. Choices include:
Cut, Copy, and Paste

Enabled once you have clicked on a 
Related Transformers: "
87;ea650b7e-0889-44fd-8ecd-cd2bae3a7b01;"Name: Densifier
Category: Geometries
Description: Name: Densifier Category: Geometries Description: Adds vertices to each feature by interpolating new coordinates at fixed intervals.
This transformer is often used to densify features before reprojection. By adding vertices to long linear segments, the densified feature may better represent the original feature in a different coordinate system.

Example
Related Transformers: "
88;085465c3-76b9-4394-8147-4e5ba0ef55e4;"Name: ArcEstimator
Category: Geometries
Description: Name: ArcEstimator Category: Geometries Description: Elliptical Arc

This arc has the same primary radius as the circular arc above, but has a shorter secondary radius, producing an elliptical arc.
The estimated arc does not match the original.
Original Arc
Stroked Arc
ArcEstimator Arc

Stacking the original, stroked, and estimated arcs illustrates how using the first, middle, and last vertices of the stroked arc does not necessarily produce a good result. The more elliptical the arc is, the more variance there will be.
TheCurvefitterwould be a better choice here.
Related Transformers: 2DArcReplacer, 2DEllipseReplacer, 3DArcReplacer, ArcPropertyExtractor, ArcPropertySetter, ArcStroker, Creator, Curvefitter, EllipsePropertyExtractor, EllipsePropertySetter, Generalizer"
89;0db02077-d742-4d17-a5fa-4e80de991a92;"Name: 2DArcReplacer
Category: Geometries
Description: Name: 2DArcReplacer Category: Geometries Description: Usage Notes

If the arc values are unknown and need to be calculated from a line feature, consider using theCurvefitterorArcEstimator.
TheCreatorcan create alternate arc typesArc By BulgeandArc By 3 Points.

Creating and Modifying Arcs, Circles, and Ellipses

These transformers work with arcs in a variety of ways.

Function
Geometry Out
Z Coordinates
Creator
Creates one or more new features with arc geometry (whenGeometry Objectis an arc type).
Arc by center point
Arc by center point with ends
Arc by 3 points
Arc by bulge
Ellipse (Arc by center point)
Supported
2DArcReplacer
Replaces any existing feature’s geometry with a 2D arc.
Arc by center point
No
3DArcReplacer
Replaces any existing feature’s geometry with a 3D arc.
Arc by center point
Yes, at center point
2DEllipseReplacer
Replaces an existing feature’s geometry with a 2D ellipse or circle (closed arc).
Ellipse (Arc by center point)
No
ArcPropertySetter
Modifies an existing arc or converts a point to an arc.
Arc by center point
Arc by center point with ends
Arc by 3 points
Supported, at center and/or ends
EllipsePropertySetter
Modifies an existing ellipse (closed arc) or converts a point to an ellipse.
Ellipse (Arc by center point)
Supported, at center point
ArcPropertyExtractor
Extracts the property values that describe an arc’s geometry and stores them as attributes.
Arc by center point
Arc by center point with ends
Arc by 3 points
Arc by bulge
Supported
EllipsePropertyExtractor
Extracts the property values that describe an ellipse’s geometry and stores them as attributes.
Ellipse (Arc by center point)
Supported
ArcStroker
Converts arcs and ellipses to lines or polygons by interpolating points along the arc.
Path
Line
Area
Supported
ArcEstimator
Replaces geometry with an arc described by the first, middle, and last vertices of the input feature.
Arc by 3 points
Supported
Curvefitter
Replaces lines or polygons with an optimal combination of line and arc segments, creating smooth curving lines.
Path
Area
Arc by bulge
Line
Supported
Generalizer
Reduces point density on lines or polygons, fitting arcs where poss
Related Transformers: 2DEllipseReplacer, 3DArcReplacer, ArcEstimator, ArcPropertyExtractor, ArcPropertySetter, ArcStroker, Creator, Curvefitter, EllipsePropertyExtractor, EllipsePropertySetter"
90;c176a4cc-a379-4e6b-beed-4b7b7179affa;"Name: StringCaseChanger
Category: Strings
Description: Name: StringCaseChanger Category: Strings Description: Parameters

Attributes to Change
Change
After connecting the StringCaseChanger in yourworkspace, specify whether to change the case of all available attributes, or a subset of attributes that you select.
Selected Attributes
IfChangeisSelected Attributes, click the Browse 
 button. Use the checklist to choose which attributes to change, and then 
 click the OK button.
Case Change

Editing Transformer Parameters

Using a set of menu options, transformer parameters can be assigned by referencing other elements in theworkspace. More advanced functions, such as an advanced editor and an arithmetic editor, are also available in some transformers. To access a menu of these options, clickbeside the applicable parameter. For more information, seeTransformer Parameter Menu Options.

Defining Values

There are several ways to define a value for use in a Transformer. The simplest is to simply type in a value or string, which can include functions of various types such as attribute references, math and string functions, andworkspaceparameters. There are a number of tools and shortcuts that can assist in constructing values, generally available from the drop-down context menu adjacent to the value field.

Using the Text Editor

The Text Editor provides a convenient way to construct text strings (including regular expressions) from various data sources, such as attributes, parameters, and constants, where the result is used directly inside a parameter.
Text Editor

Using the Arithmetic Editor

The Arithmetic Editor provides a convenient way to construct math expressions from various data sources, such as attributes, parameters, and feature functions, where the result is used directly inside a parameter.
Arithmetic Editor

Conditional Values

Set values depending on one or more test conditions that either pass or fail.
Parameter Condition Definition Dialog

Content

Expressions and strings can include a number of functions, characters, parameters, and more.
When setting values - whether entered directly in a parameter or constructed using one of the editors - strings and expressions
Related Transformers: BulkAttributeRenamer"
91;5ffeda15-a9be-4f58-b5ca-cf17fcfafb22;"Name: PointCloudCreator
Category: Point Clouds
Description: Name: PointCloudCreator Category: Point Clouds Description: vernment Licence – Vancouver and/or the Open Government Licence – Canada.
Keywords: point ""point cloud"" cloud PointCloud LiDAR sonar
Related Transformers: 2DGridCreator, Creator, RasterNumericCreator, RasterRGBCreator"
92;cabba061-091d-4f08-a17b-73b1b7e034e2;"Name: PartCounter
Category: Calculated Values, Data Quality
Description: Name: PartCounter Category: Calculated Values, Data Quality Description: Parameters

Count Aggregates Recursively
Specifies whether to count aggregates' parts.
Count
Name the attribute to contain the number of parts returned.

Editing Transformer Parameters

Using a set of menu options, transformer parameters can be assigned by referencing other elements in theworkspace. More advanced functions, such as an advanced editor and an arithmetic editor, are also available in some transformers. To access a menu of these options, clickbeside the applicable parameter. For more information, seeTransformer Parameter Menu Options.

Defining Values

There are several ways to define a value for use in a Transformer. The simplest is to simply type in a value or string, which can include functions of various types such as attribute references, math and string functions, andworkspaceparameters. There are a number of tools and shortcuts that can assist in constructing values, generally available from the drop-down context menu adjacent to the value field.

Using the Text Editor

The Text Editor provides a convenient way to construct text strings (including regular expressions) from various data sources, such as attributes, parameters, and constants, where the result is used directly inside a parameter.
Text Editor

Using the Arithmetic Editor

The Arithmetic Editor provides a convenient way to construct math expressions from various data sources, such as attributes, parameters, and feature functions, where the result is used directly inside a parameter.
Arithmetic Editor

Conditional Values

Set values depending on one or more test conditions that either pass or fail.
Parameter Condition Definition Dialog

Content

Expressions and strings can include a number of functions, characters, parameters, and more.
When setting values - whether entered directly in a parameter or constructed using one of the editors - strings and expressions containing String, Math, Date/Time or FME Feature Functions will have those functions evaluated. Therefore, the names of these functions (in the form @<function_name>) should not be used as literal string values.
String Functions
Special Characte
Related Transformers: "
93;985709b2-5f56-48d9-aa9c-8d06350ee6c7;"Name: PointCloudComponentRemover
Category: Point Clouds
Description: Name: PointCloudComponentRemover Category: Point Clouds Description: Choosing a Point Cloud Transformer

FME has a selection of transformers for working specifically with point cloud data.
For information on point cloud geometry and properties, seePoint Clouds (IFMEPointCloud).
PointCloudCombiner
Combines features into a single point cloud. Point cloud and non-point cloud geometries are supported.
PointCloudComponentAdder
Adds new components with constant values to a point cloud.
PointCloudComponentCopier
Copies selected component values onto either a new or existing component
PointCloudComponentKeeper
Keeps only specified point cloud components, discarding all others.
PointCloudComponentRemover
Removes specified components from a point cloud.
PointCloudComponentRenamer
Renames an existing component.
PointCloudComponentTypeCoercer
Alters the data type of point cloud components, and converts component values if required.
PointCloudConsumer
Reads point cloud features for testing purposes, including any accumulated point cloud operations. No additional operations are performed, and nothing is done with the features.
PointCloudCreator
Creates a point cloud of specified size and density, with default component values.
PointCloudExpressionEvaluator
Evaluates expressions on each point in a point cloud feature, including algebraic operations and conditional statements, and sets individual point cloud component values.
PointCloudExtractor
Serializes the geometry of a point cloud feature into a Blob attribute, encoding the contents according to a choice of common binary point cloud formats.
PointCloudFilter
Separates point clouds into multiple features, based on evaluating expressions including component values, and creates a separate output port for each expression defined.
PointCloudMerger
Merges point clouds by joining points where selected component values match (join key), including x, y, z, and other components. Component values are transferred between point clouds and output is filtered based on matching success and duplication.
PointCloudOnRasterComponentSetter
Sets point cloud component values by overlaying a point cloud on a raster. The component v
Related Transformers: PointCloudComponentAdder, PointCloudComponentCopier, PointCloudComponentKeeper, PointCloudComponentRenamer, PointCloudComponentTypeCoercer"
94;03690a79-94b6-4ebb-b935-0813964c86e8;"Name: RasterNumericCreator
Category: Rasters
Description: Name: RasterNumericCreator Category: Rasters Description: Input Ports

This transformer has no input ports.

Output Ports

One numeric raster feature, according to the specified parameters.

Parameters

Resolution Specification
Select the type of Resolution Specification:
Rows and Columns
Set dimensions by number of rows and columns.
Extents
Size based on extents and cell spacing. Corner coordinates (upper left and lower right) define extents.
Number of Columns (cells)
Number of Rows (cells)
WhenResolution SpecificationisRows and Columns, specify the number of rows and columns for the output raster. 
The minimum value for both rows and columns is one (1).
X Cell Origin
Y Cell Origin
Specify the origin for each cell. This can be used to specify whether each cell's data point is at the lower-left or center (or somewhere else) within the cell.
X Cell Spacing
Y Cell Spacing
Specify the spacing between cell elements, that is, the width and height of an individual cell. This must be greater than zero.
X Upper Left Coordinate
Y Upper Left Coordinate
Specify the coordinates of the upper left corner of the raster. Default is0,0.
X Lower Right Coordinate
Y Lower Right Coordinate
WhenResolution SpecificationisExtents, specify the coordinates of the lower right corner.
Rotation
Specify the rotation of the raster. Default is0.0.
Interpretation
Select an Interpretation Type for the output raster. Choices include:
Min. Numeric Value
Max. Numeric Value
Specify the range of cell values to be used for generating the selectedData Pattern.
Nodata Numeric Value
Optional:Set a Nodata Value on the output raster.
Data Pattern
Select a pattern for the output raster:
Single Value
All cells are set to theMax Numeric Value, producing a solid image.
Checkered Pattern
Alternating cells have values between theMinandMax Numeric Values.
Checkerboard
An 8 by 8 checkerboard pattern is created, with alternating blocks of cells set to theMinandMax Numeric Values.
The size of the blocks is variable, and dependent on the number of rows and columns specified. If the number of rows and columns are not multiples of eight, the remaining data will be set to either Nodat
Related Transformers: 2DGridCreator, Creator, PointCloudCreator, RasterRGBCreator"
95;0e2a4ec3-2db8-4408-b397-4e27f8ee7041;"Name: PathBuilder
Category: Geometries
Description: Name: PathBuilder Category: Geometries Description: spatial join).
LineOnLineOverlayer
Intersecting lines and lines.
Performs a line-on-line overlay in which all input lines are intersected against each other and resultant line features are created and output. Intersection points are turned into point features that can contain the merged list of attributes of the original intersected lines.
PointOnLineOverlayer
Finding where points lay on lines.
Performs a point-on-line overlay. Each input line is split at its closest place to any point within the specified point tolerance, and attributes may be shared between related points and lines (spatial join).

Configuration
Related Transformers: LineBuilder, LineCombiner, PathSplitter"
96;290e8637-4954-4b45-9587-14b2cf705fa9;"Name: Sorter
Category: Workflows
Description: Name: Sorter Category: Workflows Description: Sorts features by a selected attribute's value. The features leave the transformer 
 in the order specified, and are output through the Sorted port.
This transformer tries to balance speed and memory usage by storing some features in memory and some in a temporary disk file.

Configuration
Related Transformers: ListSorter, SpatialSorter"
97;9bc49ce8-61c5-42dc-b89f-a8a42d969ba3;"Name: RasterReplacer
Category: Rasters
Description: Name: RasterReplacer Category: Rasters Description: such as attributes, parameters, and feature functions, where the result is used directly inside a parameter.
Arithmetic Editor

Conditional Values

Set values depending on one or more test conditions that either pass or fail.
Parameter Condition Definition Dialog

Content

Expressions and strings can include a number of functions, characters, parameters, and more.
When setting values - whether entered directly in a parameter or constructed using one of the editors - strings and expressions containing String, Math, Date/Time or FME Feature Functions will have those functions evaluated. Therefore, the names of these functions (in the form @<function_name>) should not be used as literal string values.
String Functions
Special Characters
Math Functions
Math Operators
FME Feature Functions
FME Parameters

Dialog Options - Tables

Transformers with table-style parameters have additional tools for populating and manipulating values.
Row Reordering

Enabled once you have clicked on a row item. Choices include:
Cut, Copy, and Paste

Enabled once you have clicked on a row item. Choices include:
Cut, copy, and paste may be used within a transformer, or between transformers.
Filter

Import

Reset/Refresh

Generally resets the table to its initial state, and may provide additional options to remove invalid entries. Behavior varies between transformers.
Note:Not all tools are available in all transformers.

Reference

Processing Behavior
Feature-Based
Feature Holding
No

FME Community

TheFME Communityis the place for demos, how-tos, articles, FAQs, and more. Get answers to your questions, learn from other users, and suggest, vote, and comment on new features.
Search forall results about the RasterReplaceron theFME Community.

Examples may contain information licensed under the Open Government Licence – Vancouver and/or the Open Government Licence – Canada.
Related Transformers: AttributeFileReader, GeometryExtractor, GeometryRemover, GeometryReplacer, PointCloudExtractor, PointCloudReplacer, RasterExtractor"
98;5042e68c-b5cf-4914-91cc-2138ea40145b;"Name: PointPropertyExtractor
Category: Calculated Values
Description: Name: PointPropertyExtractor Category: Calculated Values Description: pplicable parameter. For more information, seeTransformer Parameter Menu Options.

Defining Values

There are several ways to define a value for use in a Transformer. The simplest is to simply type in a value or string, which can include functions of various types such as attribute references, math and string functions, andworkspaceparameters. There are a number of tools and shortcuts that can assist in constructing values, generally available from the drop-down context menu adjacent to the value field.

Using the Text Editor

The Text Editor provides a convenient way to construct text strings (including regular expressions) from various data sources, such as attributes, parameters, and constants, where the result is used directly inside a parameter.
Text Editor

Using the Arithmetic Editor

The Arithmetic Editor provides a convenient way to construct math expressions from various data sources, such as attributes, parameters, and feature functions, where the result is used directly inside a parameter.
Arithmetic Editor

Conditional Values

Set values depending on one or more test conditions that either pass or fail.
Parameter Condition Definition Dialog

Content

Expressions and strings can include a number of functions, characters, parameters, and more.
When setting values - whether entered directly in a parameter or constructed using one of the editors - strings and expressions containing String, Math, Date/Time or FME Feature Functions will have those functions evaluated. Therefore, the names of these functions (in the form @<function_name>) should not be used as literal string values.
String Functions
Special Characters
Math Functions
Math Operators
FME Feature Functions
FME Parameters

Dialog Options - Tables

Transformers with table-style parameters have additional tools for populating and manipulating values.
Row Reordering

Enabled once you have clicked on a row item. Choices include:
Cut, Copy, and Paste

Enabled once you have clicked on a row item. Choices include:
Cut, copy, and paste may be used within a transformer, or between transformers.
Filter

Import

Reset/Refres
Related Transformers: PointPropertySetter"
99;833eb3c0-51ca-4aa3-a488-07914f2e861f;"Name: ProjectWiseWSGConnector
Category: Integrations, Web, Workflows
Description: Name: ProjectWiseWSGConnector Category: Integrations, Web, Workflows Description:  to upload as a file.
File to Upload
The file to be uploaded to ProjectWise if Upload is set to File.
Folder to Upload
The folder to be uploaded to ProjectWise if Upload is set to Folder.
Include Subfolders
Choose whether to upload subfolders of the Folder to Upload or not.
Attribute to Upload as File
The data to be uploaded, supplied from an attribute if Upload is set to Attribute.

ProjectWise Destination

Project
The project to upload the data to. If valid credentials have been provided as a web connection, you may browse to a location.
Upload with File Name
The name of the file created from the data supplied in Attribute to Upload as File. The name must include a filename extension (for example, .txt, .jpg, .doc).

Output Attributes

Attributes to Add
The selected attributes will be added to the output feature.
_instance_id
Instance ID of the file/folder that was uploaded.
_object_id
Object ID of the file/folder that was uploaded.

Editing Transformer Parameters

Using a set of menu options, transformer parameters can be assigned by referencing other elements in theworkspace. More advanced functions, such as an advanced editor and an arithmetic editor, are also available in some transformers. To access a menu of these options, clickbeside the applicable parameter. For more information, seeTransformer Parameter Menu Options.

Defining Values

There are several ways to define a value for use in a Transformer. The simplest is to simply type in a value or string, which can include functions of various types such as attribute references, math and string functions, andworkspaceparameters. There are a number of tools and shortcuts that can assist in constructing values, generally available from the drop-down context menu adjacent to the value field.

Using the Text Editor

The Text Editor provides a convenient way to construct text strings (including regular expressions) from various data sources, such as attributes, parameters, and constants, where the result is used directly inside a parameter.
Text Editor

Using the Arithmetic Editor

The Arithmetic Editor provides a convenient way to construc
Related Transformers: AzureBlobStorageConnector, AzureFileStorageConnector, BoxConnector, CesiumIonConnector, DropboxConnector, FMEFlowResourceConnector, GoogleCloudStorageConnector, GoogleDriveConnector, HDFSConnector, OneDriveConnector, S3Connector"
100;eb695c1f-9105-44be-b364-2de8e7a29d88;"Name: PointOnLineOverlayer
Category: Filters and Joins, Spatial Analysis
Description: Name: PointOnLineOverlayer Category: Filters and Joins, Spatial Analysis Description: Z Values and Measures

If the input Line features have measures and/or 3D coordinates, measures and elevations (z values) are interpolated and assigned to points according to the selections made in theAttribute Accumulationparameters.
If AttributeAccumulation Modeis set toDrop Incoming Attributes, the measures and z values will be ignored. If it is set toMerge,Prefix, orReplace with Single Incoming, the appropriate values will be calculated and assigned to the points. If a z value is added to a 2D point, it will become 3D.

Choosing a Spatial Transformer

Many transformers can assess spatial relationships and perform spatial joins - analyzing topology, merging attributes, and sometimes modifying geometry. Generally, choosing the one that is most specific to the task you need to accomplish will provide the optimal performance results. If there is more than one way to do it (which is frequently the case), time spent on performance testing alternate methods may be worthwhile.
To correctly analyze spatial relationships, all features should be in the same coordinate system. TheReprojectormay be useful for reprojecting features within theworkspace.
Transformer
Can Merge Attributes
Alters Geometry
Counts Related Features
Creates List
Supported Types*
Recommended For
* Note thatCurveincludes Lines, Arcs, and Paths.Areaincludes Polygons, Donuts, and Ellipses.
Spatial analysis can be processing-intensive, particularly when a large number of features are involved. If you would like to tune the performance of yourworkspace, this is a good place to start.
When there are multiple ways to configure aworkspaceto reach the same goal, it is often best to choose the transformer most specifically suited to your task.
If performance is an issue in yourworkspace, look for alternative methods, guided by geometry.

Configuration
Related Transformers: AreaOnAreaOverlayer, Bufferer, Clipper, Intersector, LineOnAreaOverlayer, LineOnLineOverlayer, NeighborFinder, PointOnAreaOverlayer, PointOnPointOverlayer, SpatialFilter, SpatialRelator, TopologyBuilder"
101;ba84d590-1a03-4d39-b95f-97bf421bc11f;"Name: ListHistogrammer
Category: Calculated Values, Data Quality
Description: Name: ListHistogrammer Category: Calculated Values, Data Quality Description: functions (in the form @<function_name>) should not be used as literal string values.
String Functions
Special Characters
Math Functions
Math Operators
FME Feature Functions
FME Parameters

Dialog Options - Tables

Transformers with table-style parameters have additional tools for populating and manipulating values.
Row Reordering

Enabled once you have clicked on a row item. Choices include:
Cut, Copy, and Paste

Enabled once you have clicked on a row item. Choices include:
Cut, copy, and paste may be used within a transformer, or between transformers.
Filter

Import

Reset/Refresh

Generally resets the table to its initial state, and may provide additional options to remove invalid entries. Behavior varies between transformers.
Note:Not all tools are available in all transformers.

FME Community

TheFME Communityis the place for demos, how-tos, articles, FAQs, and more. Get answers to your questions, learn from other users, and suggest, vote, and comment on new features.
Search forall results about the ListHistogrammeron theFME Community.
Related Transformers: "
102;de2ffebc-04ea-432d-980e-c4b5a19a3d38;"Name: GMLFeatureComposer
Category: 
Description: Name: GMLFeatureComposer Category:  Description: Input Ports

Input features containing attributes and geometries appropriate to particular GML feature types.

Output Ports

Serialized GML documents are output via this port.
Features with duplicategml_idvalues within a group are output via this port.
Features withgml_parent_idvalues referring to non-existinggml_id(s)are output via this port.
Features with no corresponding GML feature types.

Parameters

When enabled, a single GML document may be composed from many features.  The document structure, the nesting of features in the document, may be controlled via thegml_idandgml_parent_idattributes.   Each feature within a group must have a uniquegml_id.  Features with duplicate ids are send to theDuplicateIdsport.  Features withgml_parent_id(s)pointing to non-existing parents are sent to theOrphansport.
Group By
If you do not selectGroup Byattributes, then all features fall into the same group.
When you selectGroup Byattributes, this transformer will compose a GML document, based on the selection in theGroup Byparameter.  Each group of features that have the same values for theGroup Byattributes will be processed independently of other groups.
Complete Groups
Select the point in processing at which groups are processed:
When All Features Received
This is the default behavior. Processing will only occur in this transformer once all input is present.
When Group Changes (Advanced)
This transformer will process input groups in order. Changes of the value of theGroup Byparameter on the input stream will trigger processing on the currently accumulating group. This may improve overall speed (particularly with multiple, equally-sized groups), but could cause undesired behavior if input groups are not truly ordered.
There are two typical reasons for usingWhen Group Changes (Advanced). The first is incoming data that is intended to be processed in groups (and is already so ordered). In this case, the structure dictatesGroup Byusage - not performance considerations.
The second possible reason is potential performance gains.
Performance gains are most likely when the data 
Related Transformers: "
103;4ccaf84e-4d80-4161-9302-56fe9d7220b9;"Name: RasterCheckpointer
Category: Rasters, Workflows
Description: Name: RasterCheckpointer Category: Rasters, Workflows Description: and sets a value on it.
RasterPaletteRemover
Removes selected palette(s) from raster features.
RasterPaletteResolver
Resolves the palette(s) on a raster by replacing cell values with their corresponding palette values. Palette values with multiple components, such as RGB, are broken down and the individual values assigned to multiple, newly-added bands.

Workflow Control

RasterCheckpointer
Forces accumulated raster operations to be processed, saving the state to disk and releasing resources to tune performance or assist with memory limitations.
RasterConsumer
Reads raster features for testing purposes, including any accumulated raster operations. No additional operations are performed, and nothing is done with the features.
RasterExtractor
Serializes the geometry of a raster feature into a Blob attribute, encoding the contents according to a choice of common binary raster formats.
RasterNumericCreator
Creates a numeric raster of specified size and resolution, with default cell values.
RasterReplacer
Decodes a binary attribute containing encoded rasters stored as Blobs, replacing the feature’s geometry with the decoded raster.
RasterRGBCreator
Creates a color raster feature of specified size, resolution, and interpretation type, with default cell values.
RasterSelector
Selects specific bands and palettes of a raster for subsequent transformer operations.

Vectors and Rasters

ImageRasterizer
Creates a raster representation of vector or point cloud input features, using the fme_color attribute over a solid background fill for vector features. Point clouds may be rendered using their color or intensity components.
NumericRasterizer
Creates a numeric raster representation of vector or point cloud input features, where cell values are taken from the z coordinates of the input features and overlaid on a uniform background.
MapnikRasterizer
Generates a raster from input vector and raster features, with fine control over symbolization and labeling, using the Mapnik toolkit.
PointCloudOnRasterComponentSetter
Sets point cloud component values by overlaying a point cloud on a raster. The 
Related Transformers: RasterConsumer"
104;52228f9f-7c01-4b3c-8164-60f738841cdc;"Name: Geocoder
Category: Integrations, Web
Description: Name: Geocoder Category: Integrations, Web Description: ultiple geocoding modes, they will be available for selection here; for example, the Google service supports Forward, Reverse, Elevation, and Timezone modes. If not, forward geocoding is always assumed. This choice also determines which input mode becomes active.
Forward geocoding accepts input in the form of a street or IP address, while elevation, reverse, and timezone geocoding take in latitude and longitude for input.
Street Address
For a single line address, a comma-separated list of the address elements. For example, 123 Main Street, Surrey, BC, Canada. This string may be easily constructed from separate attributes, if required, by using the text editor to combine them right in the transformer, or using theAttributeManagerearlier in theworkspace.
Note that some services are more lenient than others when it comes to the format of the address string.
For discrete address elements, the street address will typically contain only the house number and street name. For example, 123 Main Street. This is used in conjunction with other fields to specify a full address.
City
The name of the city, for use in discrete address specification.
Province/State
The full name or abbreviation for the province or state component of a discrete address specification.
Postal/ZIP Code
The postal code or zip code component of a discrete address specification.
Country
The name of the country, for use in discrete address specification.
Latitude/Longitude
Distinct values for a latitude longitude pair.
Example:
Latitude: 49.1044
Longitude: -122.8011
Radius
Search radius around a given coordinate.
Out Fields
Select additional attributes to include on the output feature. The values of these attributes will be taken directly from the geocoding server response.
IP Address
An IPv4 or IPv6 address.
Example:
199.7.157.0, or
2001:0db8:0a0b:12f0:0000:0000:0000:0001
Return Language
For some services, a language for geocoding results can be specified. This will usually apply to corrected addresses for forward geocoding as well as reverse geocoding result addresses.
Example:
Reverse geocoding 52.07, 4.28
Related Transformers: None"
105;86cab470-0321-41be-abe8-7125af278432;"Name: RasterConsumer
Category: Rasters
Description: Name: RasterConsumer Category: Rasters Description: nity.

Examples may contain information licensed under the Open Government Licence – Vancouver and/or the Open Government Licence – Canada.
Related Transformers: PointCloudConsumer, RasterCheckpointer"
106;62123072-76c7-447a-ba49-99da9766d4be;"Name: AttributeSplitter
Category: Attributes, Strings
Description: Name: AttributeSplitter Category: Attributes, Strings Description: returns the following list:
`_list{0}' has value `a'
`_list{1}' has value `b'
`_list{2}' has value `'
`_list{3}' has value `'
`_list{4}' has value `c'
`_list{5}' has value `d'
`_list{6}' has value `e'
If this parameter is set toYes, splittinga,b,,,c,d,ewith commas returns the following list:
`_list{0}' has value `a'
`_list{1}' has value `b'
`_list{2}' has value `c'
`_list{3}' has value `d'
`_list{4}' has value `e'

Editing Transformer Parameters

Using a set of menu options, transformer parameters can be assigned by referencing other elements in theworkspace. More advanced functions, such as an advanced editor and an arithmetic editor, are also available in some transformers. To access a menu of these options, clickbeside the applicable parameter. For more information, seeTransformer Parameter Menu Options.

Defining Values

There are several ways to define a value for use in a Transformer. The simplest is to simply type in a value or string, which can include functions of various types such as attribute references, math and string functions, andworkspaceparameters. There are a number of tools and shortcuts that can assist in constructing values, generally available from the drop-down context menu adjacent to the value field.

Using the Text Editor

The Text Editor provides a convenient way to construct text strings (including regular expressions) from various data sources, such as attributes, parameters, and constants, where the result is used directly inside a parameter.
Text Editor

Using the Arithmetic Editor

The Arithmetic Editor provides a convenient way to construct math expressions from various data sources, such as attributes, parameters, and feature functions, where the result is used directly inside a parameter.
Arithmetic Editor

Conditional Values

Set values depending on one or more test conditions that either pass or fail.
Parameter Condition Definition Dialog

Content

Expressions and strings can include a number of functions, characters, parameters, and more.
When setting values - whether entered directly in a parameter or constructed using one of the editors -
Related Transformers: AttributeManager, StringConcatenator, StringFormatter, StringPairReplacer, StringReplacer, StringSearcher, SubstringExtractor"
107;233b1bfb-fb64-4d44-9863-ad747b27a119;"Name: AreaCalculator
Category: Calculated Values
Description: Name: AreaCalculator Category: Calculated Values Description: py, and paste may be used within a transformer, or between transformers.
Filter

Import

Reset/Refresh

Generally resets the table to its initial state, and may provide additional options to remove invalid entries. Behavior varies between transformers.
Note:Not all tools are available in all transformers.

FME Community

TheFME Communityis the place for demos, how-tos, articles, FAQs, and more. Get answers to your questions, learn from other users, and suggest, vote, and comment on new features.
Search forall results about the AreaCalculatoron theFME Community.
Related Transformers: "
108;64c91c67-3ac4-462e-8277-34db3baf1d8c;"Name: 2DBoxReplacer
Category: Geometries
Description: Name: 2DBoxReplacer Category: Geometries Description: vernment Licence – Canada.
Related Transformers: 2DGridCreator, 2DGridAccumulator, BoundingBoxAccumulator, BoundingBoxReplacer, BoundsExtractor, Creator, RasterExtentsCoercer"
109;3df0ae53-a1e2-42a9-89bd-e3f89e5f0877;"Name: StreamPriorityCalculator
Category: Calculated Values
Description: Name: StreamPriorityCalculator Category: Calculated Values Description: Configuration
Related Transformers: NetworkFlowOrientor, NetworkTopologyCalculator, ShortestPathFinder, StreamOrderCalculator"
110;2bae8c4a-2feb-4db0-893b-7fb5a5ef0ba9;"Name: PointCloudComponentRenamer
Category: Point Clouds
Description: Name: PointCloudComponentRenamer Category: Point Clouds Description: How does it work?

The PointCloudComponentRenamer receives point cloud features, changes the names of selected existing components, and then outputs the modified point cloud feature.
Components may be renamed to standard component names or user-defined names. If a target component name (the new name) is already in use, that component will be overwritten.
Multiple components may be renamed at once.

Examples

In this example, we are starting with a text file (CSV) of cell signal measurements. We want to convert the entire dataset to a single point cloud.
Note that coordinates are available in thelongitudeandlatitudeattributes, however, the data is non-spatial at this point.

In order to treat the dataset as a point cloud and be able to perform spatial manipulations (such as reprojection), two steps are required.
First, the text records are routed into aPointCloudCombiner, where they are converted into a single point cloud feature.
Next, a PointCloudComponentRenamer is used to change the longitude and latitude values to x and y components - and so as individual point coordinates within the point cloud.
Related Transformers: PointCloudComponentAdder, PointCloudComponentCopier, PointCloudComponentKeeper, PointCloudComponentRemover"
111;72110e86-5b5e-4afe-a9d9-093c0c57a6c0;"Name: RasterBandNodataRemover
Category: Rasters
Description: Name: RasterBandNodataRemover Category: Rasters Description: d’s Nodata value, and sets a value on it.
RasterPaletteRemover
Removes selected palette(s) from raster features.
RasterPaletteResolver
Resolves the palette(s) on a raster by replacing cell values with their corresponding palette values. Palette values with multiple components, such as RGB, are broken down and the individual values assigned to multiple, newly-added bands.

Workflow Control

RasterCheckpointer
Forces accumulated raster operations to be processed, saving the state to disk and releasing resources to tune performance or assist with memory limitations.
RasterConsumer
Reads raster features for testing purposes, including any accumulated raster operations. No additional operations are performed, and nothing is done with the features.
RasterExtractor
Serializes the geometry of a raster feature into a Blob attribute, encoding the contents according to a choice of common binary raster formats.
RasterNumericCreator
Creates a numeric raster of specified size and resolution, with default cell values.
RasterReplacer
Decodes a binary attribute containing encoded rasters stored as Blobs, replacing the feature’s geometry with the decoded raster.
RasterRGBCreator
Creates a color raster feature of specified size, resolution, and interpretation type, with default cell values.
RasterSelector
Selects specific bands and palettes of a raster for subsequent transformer operations.

Vectors and Rasters

ImageRasterizer
Creates a raster representation of vector or point cloud input features, using the fme_color attribute over a solid background fill for vector features. Point clouds may be rendered using their color or intensity components.
NumericRasterizer
Creates a numeric raster representation of vector or point cloud input features, where cell values are taken from the z coordinates of the input features and overlaid on a uniform background.
MapnikRasterizer
Generates a raster from input vector and raster features, with fine control over symbolization and labeling, using the Mapnik toolkit.
PointCloudOnRasterComponentSetter
Sets point cloud component values by overlaying a point
Related Transformers: RasterBandNodataSetter, RasterPaletteNodataSetter"
112;7d0164fa-d76e-42ce-af8c-dc0a2423ebbd;"Name: NLPTrainer
Category: Filters and Joins, Strings
Description: Name: NLPTrainer Category: Filters and Joins, Strings Description: Input Ports

This transformer expects to receive a corpus of labelled texts in the form of features containing this information as attributes. All incoming features should have the same attribute names for each of the required pieces of information, both the label and the text. For example, if one of the input features uses 'my_label' as an attribute name for the label and 'my_text' as the attribute name for the text, all the other input features should use 'my_label' for labels and 'my_text' for texts as well.

Output Ports

This port will output one feature after the training process is over. The feature’s attributes will indicate the sizes of the test and training sets of data, as well as the accuracy of the model over the test set (on a scale of 0 to 1, where 1 is perfect accuracy), and some information about what NLP features the model finds helpful. (The exact structure of this information depends on the model type.) This information can be easily reviewed by connecting a logger.
Features which cannot be used to train the model, often because either the text itself or the label cannot be retrieved, are routed to this port.
Rejected Feature Handling:can be set to either terminate the translation or continue running when it encounters a rejected feature. This setting is available both as a defaultFME optionand as aworkspace parameter.

Parameters

Model Type to Train
This parameter specifies what kind of model the NLPTrainer will produce. All model types are suitable for use with the NLPClassifier transformer.
Label
The attribute on incoming features which specifies the label.
Output Model Filename
The save location for the model, in the form of an *.fmd file.
Text
The attribute on incoming features which specifies the text.
Case Sensitive
Determines whether the model will be case sensitive or not.
Data Percentage for Testing
Determines what percentage of the input data will be used for testing the completed model. The remainder of the input data will be used for training.
Text Type
Indicates whether this model is being trained to look at single-word or multiword texts.
NLP 
Related Transformers: AzureTextAnalyticsConnector, NLPClassifier"
113;dc61e7dc-48ed-424f-8b70-dcfd2da2505c;"Name: PROJReprojector
Category: Coordinates, Integrations
Description: Name: PROJReprojector Category: Coordinates, Integrations Description: How does it work?

The PROJReprojector receives raster, vector, or point cloud features and reprojects their coordinates from one coordinate system to another, using PROJ coordinate system definitions and PROJ reprojection library.
FME currently uses PROJ version 9.2.0.
The transformation can be automatically or manually configured. ForAutomatictransformations, theSource Coordinate Systemmay be read from the features or specified explicitly, and theDestination Coordinate Systemmust be specified.
ForManualtransformations, a PROJ string must be provided describing the desired transformation, as documented at PROJ’sTransformation Pipelinesand shown in the examples further below. WKT2 descriptions are also valid.

Coordinate System Definitions

This transformer will accept coordinate systems defined in any one of the following forms.
Definition Style
Example: LL-WGS84 Defined
External Reference
EPSG Number
EPSG:4326
EPSG Website
Well-Known Text (WKT1 or WKT2)
GEODCRS[""WGS 84"",
DATUM[""World Geodetic System 1984"",
ELLIPSOID[""WGS 84"",6378137,298.257223563,
LENGTHUNIT[""metre"",1.0]]],
CS[ellipsoidal,2],
AXIS[""latitude"",north,ORDER[1]],
AXIS[""longitude"",east,ORDER[2]],
ANGLEUNIT[""degree"",0.01745329252],
ID[""EPSG"",4326]]
Open Geospatial Consortium: Geographic information —Well-known text representation of coordinate reference systems
Note that the EPSG website can also provide WKT strings for specific coordinate systems.
PROJ String
+proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs
PROJ Projections
They are fully interchangeable and can be used in any combination to define the Source and Destination Coordinate System for an Automatic transformation.
They may also be used in a PROJ string or pipeline for a Manual transformation.
Note that EPSG and WKT representations can more fully describe a coordinate system than PROJ strings, and so are the preferred definition types.

Geographic Transformations and Grids

Geographic Transformations control how coordinates are converted between different datums.
For anAutomatic Transformation, FME will attempt to select an appropriate transformation between t
Related Transformers: AttributeReprojector, CommonLocalReprojector, CsmapAttributeReprojector, CsmapReprojector, EsriReprojector, GridInQuestIIReprojector, GtransAttributeReprojector, GtransReprojector, PROJAttributeReprojector, ReframeReprojector, ReprojectAngleCalculator, ReprojectLengthCalculator, Reprojector"
114;41ec6ab1-7f4e-48a8-86a4-4775a8c28fed;"Name: InlineQuerier
Category: Workflows
Description: Name: InlineQuerier Category: Workflows Description: Usage Notes
Related Transformers: DatabaseJoiner, FeatureJoiner, FeatureMerger, ListBasedFeatureMerger, SQLCreator, SQLExecutor, Matcher"
115;63b8f198-9a7d-4c5c-b4f3-b21fd83e55aa;"Name: RCaller
Category: 
Description: Name: RCaller Category:  Description: Parameters

The RCaller requires definition of one or more Tables, which will become input ports to the transformer.  TheImport…button provides a quick way to populate the input table definitions from the source feature types in theworkspace.
Note that certain FME attribute and table names may not be valid in R as data frame or column names (notably attribute names starting with an underscore ""_"").  To avoid issues, these names will be converted to valid R names.  The adjusted names will be shown in the Data frames section on the left of the script editor.
The RCaller has a single output port.  Attributes  created in the script need to be entered by the user in theAttributes to Exposeparameter in order to have these appear in subsequent transformers or theFME Data Inspectortable view.   The attributes set on the feature are determined by the columns set on thefmeOutputdata frame at runtime.  A helpful editor is used to construct the R Script, and provides convenient drag and drop access to data frames, columns, and published and private parameters which can be used within the script.
The number of features output will depend on the length of the largest column in thefmeOutputdata frame.  In this way the RCaller can be used to output a single value, or a list, or matrix of values.
When theR raster packageis loaded, rasters are supported on input and output. On input, raster geometry in FME will be converted to a RasterBrick object in R under the raster column for that table. That is, the columnInputTableName$rasterwill contain a RasterBrick object for each feature that had a raster geometry, and NA for each feature that didn’t. On output, raster objects in thefmeOutput$rastercolumn in R will be converted to raster geometry in FME.
Attributes to Expose
Exposes attributes so they can be used elsewhere in the workspace.
Attribute names may be entered directly or provided in theEnter Values for Attributes to Exposedialog accessed via the ellipsis button, where data type may also be specified.
For more information on exposed and unexposed attributes, seeUn
Related Transformers: "
116;dc93c08c-3246-484e-b5d2-e8b2c1257c3f;"Name: ListConcatenator
Category: Attributes
Description: Name: ListConcatenator Category: Attributes Description: Concatenates all the values of a list into a single attribute.

Example

If this feature enters the ListConcatenator:
and a concatenation ofsomelist{}.kindwith a backslash (\\) separator is requested, then the resulting attribute 
 will contain:paved\smooth\rough.

Usage Notes
Related Transformers: "
117;2e9a59df-2f57-4b5c-a7ae-b6c80aed11d6;"Name: NetworkTopologyCalculator
Category: Calculated Values, Spatial Analysis
Description: Name: NetworkTopologyCalculator Category: Calculated Values, Spatial Analysis Description: ames of these functions (in the form @<function_name>) should not be used as literal string values.
String Functions
Special Characters
Math Functions
Math Operators
FME Feature Functions
FME Parameters

Dialog Options - Tables

Transformers with table-style parameters have additional tools for populating and manipulating values.
Row Reordering

Enabled once you have clicked on a row item. Choices include:
Cut, Copy, and Paste

Enabled once you have clicked on a row item. Choices include:
Cut, copy, and paste may be used within a transformer, or between transformers.
Filter

Import

Reset/Refresh

Generally resets the table to its initial state, and may provide additional options to remove invalid entries. Behavior varies between transformers.
Note:Not all tools are available in all transformers.
Related Transformers: NetworkFlowOrientor, ShortestPathFinder, StreamOrderCalculator, StreamPriorityCalculator"
118;91a20f08-bdae-43c2-a287-f6e9b8fa0720;"Name: GoogleLanguageConnector
Category: Web
Description: Name: GoogleLanguageConnector Category: Web Description: Accesses the Google Natural Language and Google Cloud Translation API for text analysis, such as language and sentiment detection.
Jump to Configuration

Typical Uses
Related Transformers: AzureComputerVisionConnector, AzureTextAnalyticsConnector, ComprehendConnector, GoogleBigQueryConnector, GoogleCloudPubSubConnector, GoogleCloudStorageConnector, GoogleDriveConnector, GoogleVisionConnector, RekognitionConnector"
119;98c8a877-4e54-4d85-b518-2e207c349cf4;"Name: ListBasedFeatureMerger
Category: Filters and Joins
Description: Name: ListBasedFeatureMerger Category: Filters and Joins Description: How does it work?

The ListBasedFeatureMerger joins two feature streams based on a common key attribute or expression, where one of the key values is alist attribute. Every value in the list (on every feature) is considered for matching, as the transformer tests each list element in turn for a match.
It receives two the streams of features via its input ports.
Requestor:the features that will receive new attributes and/or geometry. The Requestor must have a list attribute that will be used as a key to join the Supplier(s).
Supplier:provide attributes and/or geometry to be merged onto the Requestors.
Matches between Requestor and Supplier are identified according to theJoin Attributesconfiguration in the parameters dialog. A Requestor feature matches a Supplier feature when a key in the specifiedRequestor List Attribute(for example,list{}.key) matches the specifiedSupplier Attributeparameter (for example,supplierKey).
When a Requestor finds a matching Supplier, the attributes and/or geometry from the Supplier are merged with the Requestor.
TheIncomplete Requestorsparameter specifies whether or not to merge Suppliers onto partially matching Requestors when there are keys in theRequestor List Attributethat have no matching Suppliers. A Requestor feature is considered fully matched if every key in theRequestor List Attributematches one or more Supplier features.

Examples

In this example, we have a set of polygons representing neighborhoods. They have a list attribute -FoodVendors{}- that contains unique IDs (KEY) for the food trucks located in the area. The task is to merge additional attributes for each vendor from a spreadsheet.

In this portion of aworkspace, the area (with list) features are routed into the Requestor port of a ListBasedFeatureMerger. The spreadsheet is attached to the Supplier port.

In the parameters dialog, theJoin Attributesare set to match theFoodVendors{}.KEYlist attribute (Requestor) with theKEYattribute from the spreadsheet (Supplier).
InMerge Parameters, we choose to mergeAttributes Only, and (importantly) toProcess Duplicate Suppliers. This will ensure t
Related Transformers: DatabaseJoiner, FeatureJoiner, FeatureMerger, InlineQuerier, ListBuilder, ListConcatenator, ListCopier, ListDuplicateRemover, ListElementCounter, ListExploder, ListExpressionPopulator, ListHistogrammer, ListIndexer, ListPopulator, ListRangeExtractor, ListRenamer, ListSearcher, ListSorter, ListSummer, Matcher, SQLCreator, SQLExecutor"
120;56054046-5543-4299-b976-ec6b222264a9;"Name: CoordinateSystemDescriptionConverter
Category: Coordinates, Strings
Description: Name: CoordinateSystemDescriptionConverter Category: Coordinates, Strings Description: Input Ports

Features with attributes containing coordinate system representations.
Features with their coordinate system representation stored as an attribute as specified in the parameters.

Parameters

Input Coordinate System Description
The attribute that contains the source coordinate system name or definition.
Conversion Direction
Select a conversion direction.
Representation
Select the third-party type to be converted from or to, depending on theConversion Directionparameter.
Coordinate System Description
Name the attribute to contain the results. The default name is_newcoordsys.

Editing Transformer Parameters

Using a set of menu options, transformer parameters can be assigned by referencing other elements in theworkspace. More advanced functions, such as an advanced editor and an arithmetic editor, are also available in some transformers. To access a menu of these options, clickbeside the applicable parameter. For more information, seeTransformer Parameter Menu Options.

Defining Values

There are several ways to define a value for use in a Transformer. The simplest is to simply type in a value or string, which can include functions of various types such as attribute references, math and string functions, andworkspaceparameters. There are a number of tools and shortcuts that can assist in constructing values, generally available from the drop-down context menu adjacent to the value field.

Using the Text Editor

The Text Editor provides a convenient way to construct text strings (including regular expressions) from various data sources, such as attributes, parameters, and constants, where the result is used directly inside a parameter.
Text Editor

Using the Arithmetic Editor

The Arithmetic Editor provides a convenient way to construct math expressions from various data sources, such as attributes, parameters, and feature functions, where the result is used directly inside a parameter.
Arithmetic Editor

Conditional Values

Set values depending on one or more test conditions that either pass or fail.
Parameter Condition Definition Dialog

Content

Expressions and strings can include a nu
Related Transformers: CoordinateSystemExtractor, CoordinateSystemSetter"
121;f3608287-967a-47ab-8a3c-5ea3628aea5e;"Name: RasterConsumer
Category: Rasters
Description: Name: RasterConsumer Category: Rasters Description:  the parameters dialog, we keep the default settings.

Running theworkspaceagain, we can see that it will take significantly more time to fully read and process the rasters, with the accumulated operations applied.
Related Transformers: PointCloudConsumer, RasterCheckpointer"
122;62a4a242-0019-4dd5-8234-c442c5e7e187;"Name: RasterSelector
Category: Rasters
Description: Name: RasterSelector Category: Rasters Description: couver and/or the Open Government Licence – Canada.
Related Transformers: "
123;5814e94f-7c70-49c5-8490-2ccffe82d349;"Name: HTMLReportGenerator
Category: Cartography and Reports
Description: Name: HTMLReportGenerator Category: Cartography and Reports Description: Input Ports

All input is supplied through a single port.  Multiple features can be used to create a single output feature storing a single output HTML page in thehtml_contentattribute.

Output Ports

This transformer supportsGroup Byand outputs a single feature per group (or simply a single feature ifGroup Byis not used) containing a single HTML page in thehtml_contentattribute.  All input attributes (other than theGroup Byattributes) and geometries will be lost on the output feature.

Parameters

Group By
If theGroup Byparameter is set to a set of attributes, one HTML page per group will be produced.
Complete Groups
Select the point in processing at which groups are processed:
When All Features Received
This is the default behavior. Processing will only occur in this transformer once all input is present.
When Group Changes (Advanced)
This transformer will process input groups in order. Changes of the value of theGroup Byparameter on the input stream will trigger processing on the currently accumulating group. This may improve overall speed (particularly with multiple, equally-sized groups), but could cause undesired behavior if input groups are not truly ordered.
There are two typical reasons for usingWhen Group Changes (Advanced). The first is incoming data that is intended to be processed in groups (and is already so ordered). In this case, the structure dictatesGroup Byusage - not performance considerations.
The second possible reason is potential performance gains.
Performance gains are most likely when the data is already sorted (or read using aSQL ORDER BYstatement) since less work is required of FME. If the data needs ordering, it can be sorted in theworkspace(though the added processing overhead may negate any gains).
Sorting becomes more difficult according to the number of data streams. Multiple streams of data could be almost impossible to sort into the correct order, since all features matching aGroup Byvalue need to arrive before any features (of any feature type or dataset) belonging to the next group. In this case, usingGroup BywithWhen All Features Receivedmay be th
Related Transformers: "
124;f16b8686-a273-46db-ae00-ce2d35f4a551;"Name: MapnikRasterizer
Category: Cartography and Reports, Rasters
Description: Name: MapnikRasterizer Category: Cartography and Reports, Rasters Description: Input Ports

Input ports are created by either connecting a feature stream to theConnect Inputport, or by adding them in the Rendering Rules table, Input Port column.
Input ports may also be renamed, moved, and deleted in theRendering Rulestable.

Output Ports

The raster(s) drawn from a group of features according to the parameter selections.
Invalid features that will not be included in the output raster.
Rejected Feature Handling:can be set to either terminate the translation or continue running when it encounters a rejected feature. This setting is available both as a defaultFME optionand as aworkspace parameter.

Parameters

Group By
If theGroup Byparameter is set to an attribute list, one raster per group will be produced.
Complete Groups
Select the point in processing at which groups are processed:
When All Features Received
This is the default behavior. Processing will only occur in this transformer once all input is present.
When Group Changes (Advanced)
This transformer will process input groups in order. Changes of the value of theGroup Byparameter on the input stream will trigger processing on the currently accumulating group. This may improve overall speed (particularly with multiple, equally-sized groups), but could cause undesired behavior if input groups are not truly ordered.
There are two typical reasons for usingWhen Group Changes (Advanced). The first is incoming data that is intended to be processed in groups (and is already so ordered). In this case, the structure dictatesGroup Byusage - not performance considerations.
The second possible reason is potential performance gains.
Performance gains are most likely when the data is already sorted (or read using aSQL ORDER BYstatement) since less work is required of FME. If the data needs ordering, it can be sorted in theworkspace(though the added processing overhead may negate any gains).
Sorting becomes more difficult according to the number of data streams. Multiple streams of data could be almost impossible to sort into the correct order, since all features matching aGroup Byvalue need to arrive before any features (of a
Related Transformers: ImageRasterizer, NumericRasterizer, RasterNumericCreator, RasterRGBCreator, VectorOnRasterOverlayer"
125;f3544f6a-206f-43b3-8fd7-9878d3132ed7;"Name: GoogleVisionConnector
Category: Rasters, Web
Description: Name: GoogleVisionConnector Category: Rasters, Web Description: Input Ports

This transformer accepts any feature. Raster geometries may be used as input ifRaster Geometryis selected as the image source.

Output Ports

Output will depend on the analysis chosen. Each input feature may result in multiple output features. For example, a single image is likely to contain multiple objects.

Object Detection

Detects and extract information about objects in an image, across a broad group of categories. Labels can identify general objects, locations, activities, animal species, products, and more. Detected objects will have a bounding box geometry returned. Bounding boxes are in pixel units, and will align with raster and local file inputs. Bounded boxes for URL inputs are returned as normalized  values between 0 and 1.
Attributes
_label
Labels that describe detected entities in the image.
_confidence
The confidence score, which ranges from 0 (no confidence) to 1 (very high confidence).

Face Detection

Successfully identified faces will result in output features with attributes describing the face. Each feature will have a bounding box for the face. Optionally, facial ""landmarks,"" such asLEFT_EYE,NOSE_TIP, orLEFT_EYE_PUPILwill also be added as additional point geometries on the feature.
When using any input image source, the bounding box is in pixel units, and will align with the input.
Likelihood attributes have possible values of:
UNKNOWN,VERY_UNLIKELY,UNLIKELY,POSSIBLE,LIKELY,VERY_LIKELY
Attributes
_confidence
Overall confidence score of the feature, which ranges from 0 (no confidence) to 1 (very high confidence).
_landmark_confidence
Face landmarking confidence score, which ranges from 0 (no confidence) to 1 (very high confidence).
_joy_likelihood
Joy likelihood.
_sorrow_likelihood
Sorrow likelihood.
_anger_likelihood
Anger likelihood.
_surprise_likelihood
Surprise likelihood.
_under_exposed_likelihood
Under-exposed likelihood.
_blurred_likelihood
Blurred likelihood.
_headwear_likelihood
Headwear likelihood.

Text Detection

Detects and extracts text from any image. For example, a photograph might contain a street sign or traffic sign. Resu
Related Transformers: AzureComputerVisionConnector, AzureTextAnalyticsConnector, ComprehendConnector, GoogleBigQueryConnector, GoogleCloudPubSubConnector, GoogleCloudStorageConnector, GoogleDriveConnector, GoogleLanguageConnector, RekognitionConnector"
126;9f62b872-46d5-4e16-a783-b1a109f28539;"Name: ModuloCounter
Category: Calculated Values
Description: Name: ModuloCounter Category: Calculated Values Description: Adds an attribute holding the next integer in a sequence, restarting 
 the count at 0 whenever the sequence reaches the specified maximum value.
Each 
 feature will have a number added to it, in the range from 0 to one less than the maximum.

Example

If you set theCount Maximumto a value of 3, this will set the value of theCount Output Attributeto 0,1,2,0,1,2,0 for the first 7 features that enter the transformer.

Configuration
Related Transformers: "
127;a72627a7-14d1-4552-ab15-7e3d3c866ef7;"Name: HTMLReportGenerator
Category: Cartography and Reports
Description: Name: HTMLReportGenerator Category: Cartography and Reports Description: Mapbox account. The default is set to mapbox/streets-v11 as this map should be present on all accounts.
WMS URL(s)
This optional field allows the user to input a list of comma delimited URLs to WMS sources to be added as additional layers on the output map. By default, the tile size will be 512.
Vector Layers
This table allows the user to input an optional list of pairs consisting of vector layer source URLS and layers in those sources. These layers will be rendered as line layers.
Feature Layer URL
The link to a vector layer source. This must be provided with the `{z}/{y}/{x}` suffix. Note that using a non-MapBox vector tile service may cause CORS issues when loading the layer in certain browsers.
Source Layer
The name of the source layer in the corresponding tile service
Separator
Allows the user to set a separator element or<hr>tag.
Separator Thickness (pixels)
This integer parameter controls the width of the separator.
Table
This element creates a basic HTML table featuring data from attributes.
Table Style
Allows the user to choose between several bootstrap table styles including:Basic,Bordered,Condensed,Combined,Hover, andStriped. The Default style isBordered.
TheCombinedstyle will produce a table with bordered, condensed, hover, and striped styling.
Column Settings
This table allows the user to configure the columns of the output HTML table.  The ‘Column Contents’ column must be set to an attribute value.  These values will appear as the rows of the column.  The ‘Column Name’ field allows the user to specify a name for each column.
Custom HTML
Allows the user to enter custom HTML.
Custom HTML
Raw HTML-formatted text that will be inserted into the output page. The user should ensure that the text is valid HTML.

Editing Transformer Parameters

Using a set of menu options, transformer parameters can be assigned by referencing other elements in theworkspace. More advanced functions, such as an advanced editor and an arithmetic editor, are also available in some transformers. To access a menu of these options, clickbeside the applicable parameter. For more information, seeTransform
Related Transformers: "
128;a01a8bec-76ae-4a38-a2df-9d859ec1efa8;"Name: GOIDGenerator
Category: Calculated Values
Description: Name: GOIDGenerator Category: Calculated Values Description: 

Dialog Options - Tables

Transformers with table-style parameters have additional tools for populating and manipulating values.
Row Reordering

Enabled once you have clicked on a row item. Choices include:
Cut, Copy, and Paste

Enabled once you have clicked on a row item. Choices include:
Cut, copy, and paste may be used within a transformer, or between transformers.
Filter

Import

Reset/Refresh

Generally resets the table to its initial state, and may provide additional options to remove invalid entries. Behavior varies between transformers.
Note:Not all tools are available in all transformers.

FME Community

TheFME Communityis the place for demos, how-tos, articles, FAQs, and more. Get answers to your questions, learn from other users, and suggest, vote, and comment on new features.
Search forall results about the GOIDGeneratoron theFME Community.
Related Transformers: "
129;01a813cb-92cc-4cf0-9d78-72095923fceb;"Name: RasterGCPSetter
Category: Coordinates, Rasters
Description: Name: RasterGCPSetter Category: Coordinates, Rasters Description: e, and sets a value on it.
RasterPaletteRemover
Removes selected palette(s) from raster features.
RasterPaletteResolver
Resolves the palette(s) on a raster by replacing cell values with their corresponding palette values. Palette values with multiple components, such as RGB, are broken down and the individual values assigned to multiple, newly-added bands.

Workflow Control

RasterCheckpointer
Forces accumulated raster operations to be processed, saving the state to disk and releasing resources to tune performance or assist with memory limitations.
RasterConsumer
Reads raster features for testing purposes, including any accumulated raster operations. No additional operations are performed, and nothing is done with the features.
RasterExtractor
Serializes the geometry of a raster feature into a Blob attribute, encoding the contents according to a choice of common binary raster formats.
RasterNumericCreator
Creates a numeric raster of specified size and resolution, with default cell values.
RasterReplacer
Decodes a binary attribute containing encoded rasters stored as Blobs, replacing the feature’s geometry with the decoded raster.
RasterRGBCreator
Creates a color raster feature of specified size, resolution, and interpretation type, with default cell values.
RasterSelector
Selects specific bands and palettes of a raster for subsequent transformer operations.

Vectors and Rasters

ImageRasterizer
Creates a raster representation of vector or point cloud input features, using the fme_color attribute over a solid background fill for vector features. Point clouds may be rendered using their color or intensity components.
NumericRasterizer
Creates a numeric raster representation of vector or point cloud input features, where cell values are taken from the z coordinates of the input features and overlaid on a uniform background.
MapnikRasterizer
Generates a raster from input vector and raster features, with fine control over symbolization and labeling, using the Mapnik toolkit.
PointCloudOnRasterComponentSetter
Sets point cloud component values by overlaying a point cloud on a raster. 
Related Transformers: Affiner, RasterGCPExtractor, RasterGeoreferencer"
130;f8afc1c1-231c-4275-883d-0f10ac99b0b8;"Name: RasterToPolygonCoercer
Category: Rasters
Description: Name: RasterToPolygonCoercer Category: Rasters Description: Choosing a Raster Transformer

FME has an extensive selection of transformers for working with raster data. They can be generally categorized as working with whole rasters, bands, cells or palettes, and those designed for workflow control or combining raster with vector data.
For information on raster geometry and properties, seeRasters (IFMERaster).

Working with Rasters

RasterCellOriginSetter
Sets the cell origin point within cells in a raster.
RasterConvolver
Applies a convolution filter (sometimes called akernelorlens) to raster features and outputs the results.
RasterExpressionEvaluator
Evaluates expressions on each cell in a raster or pair of rasters, including algebraic operations and conditional statements.
RasterExtentsCoercer
Replaces the geometry of input raster features with a polygon covering either the extents of a raster or the extent of data within a raster.
RasterGCPExtractor
ExtractsGround Control Point(GCP) coordinate system and point values from a raster feature and exposes them as attributes.
RasterGCPSetter
SetsGround Control Points(GCPs) on a raster, pairing cell positions with known coordinates.
RasterGeoreferencer
Georeferences a raster by either known corner coordinates or origin, cell size, and rotation.
RasterHillshader
Generates a grayscale shaded relief representation of terrain, based on elevation values.
RasterInterpretationCoercer
Alters the interpretation type of rasters, including all bands, and converts cell values if necessary.
RasterMosaicker
Merges multiple raster features into a single raster feature.
RasterPropertyExtractor
Extracts the geometry properties of a raster feature and exposes them as attributes.
RasterPyramider
Resamples rasters to multiple resolutions, based on either number of levels or dimensions of the smallest output raster.
RasterRegisterer
Transforms an image to minimize its difference with another.
RasterResampler
Resamples rasters, based on specified output dimensions, cell size in ground units, or percentage of original, and interpolates new cell values.
RasterRotationApplier
Rotates a raster feature accordin
Related Transformers: AttributeRangeFilter, AttributeRangeMapper, Dissolver, RasterCellCoercer"
131;6d7c08ac-f27c-44c2-8396-86678a70fa15;"Name: RasterCellOriginSetter
Category: Rasters
Description: Name: RasterCellOriginSetter Category: Rasters Description: g to its rotation angle property, interpolating new cell values, updating all other affected raster properties, and producing an output raster feature with a rotation angle of zero.
RasterSharpener
Enhances the features of a raster image. The RasterSharpener enhances the borders, lines, and curves while reducing noise in the flat areas of the raster image.
RasterSubsetter
Clips raster features using pixel bounds instead of ground coordinates, and optionally adds cells around the perimeter.
RasterTiler
Splits each input raster into a series of tiles by specifying either a tile size in cells/pixels or the number of tiles.
RasterToPolygonCoercer
Creates polygons from input raster features. One polygon is output for each contiguous area of pixels with the same value in the input raster.
WebMapTiler
Creates a series of image tiles that can be utilized by web mapping applications such as Bing™ Maps, Google Maps™, or Web Map Tile Service. This is done by resampling rasters to various different resolutions and then splitting them into tiles.

Working with Bands

RasterBandAdder
Adds a new band to a raster feature.
RasterBandCombiner
Merges coincidental raster features into a single output raster feature, preserving and appending all bands.
RasterBandInterpretationCoercer
Alters the interpretation type of individual raster bands, converting cell values if necessary.

RasterBandKeeper
Removes all unselected bands from a raster feature.
RasterBandMinMaxExtractor
Extracts the minimum and maximum band values, palette keys, and palette values from a raster feature, and adds them to a list attribute.
RasterBandNameSetter
Sets the band name of selected bands on a raster, making raster contents simpler to understand compared to band numbers.
RasterBandNodataRemover
Removes the existing Nodata identifier from selected bands of a raster feature. Any values previously equal to the Nodata value are considered valid data.
RasterBandNodataSetter
Sets a new Nodata value on selected bands of a raster feature.
RasterBandOrderer
Specifies the required order of bands in a raster. Bands are reordered
Related Transformers: RasterCellCoercer, RasterGeoreferencer"
132;af8c70a3-88db-4f99-a107-efac5ac132d9;"Name: FilenamePartExtractor
Category: Strings
Description: Name: FilenamePartExtractor Category: Strings Description: Extracts specified parts of a filename path and returns the results as string attributes.

Example

For example, the path
C:\WINNT\Profiles\user\Desktop\roads.shp
would be extracted as follows:
Folder Path
C:\WINNT\Profiles\user\Desktop\
Full Filename
roads.shp
Filename Root
roads
Filename Extension
shp
Folder Name
Desktop

Usage Notes

When parsing the path, both backslashes and forward slashes are handled as separators, regardless of operating system.

Configuration
Related Transformers: "
133;f43e6e83-7941-4d30-8121-c0714d0b1b6a;"Name: GeometryPropertyExtractor
Category: 3D
Description: Name: GeometryPropertyExtractor Category: 3D Description: he trait is present on multiple parts of the geometry, one of the values will arbitrarily be the value associated with the new attribute. If no traits are specified, all traits on selected geometries will be pushed up as attributes (creating a list if the trait is present on multiple parts of the geometry and not otherwise).
Geometry Name
Name the attribute to contain the geometry name.
If a hierarchical geometry is present, multiple geometry names will be extracted onto a list attribute of the same name. The default value for theGeometry Name Attributeis_geometry_name.
This parameter is valid when theProperty to Extractis set toGeometry Name.

Editing Transformer Parameters

Using a set of menu options, transformer parameters can be assigned by referencing other elements in theworkspace. More advanced functions, such as an advanced editor and an arithmetic editor, are also available in some transformers. To access a menu of these options, clickbeside the applicable parameter. For more information, seeTransformer Parameter Menu Options.

Defining Values

There are several ways to define a value for use in a Transformer. The simplest is to simply type in a value or string, which can include functions of various types such as attribute references, math and string functions, andworkspaceparameters. There are a number of tools and shortcuts that can assist in constructing values, generally available from the drop-down context menu adjacent to the value field.

Using the Text Editor

The Text Editor provides a convenient way to construct text strings (including regular expressions) from various data sources, such as attributes, parameters, and constants, where the result is used directly inside a parameter.
Text Editor

Using the Arithmetic Editor

The Arithmetic Editor provides a convenient way to construct math expressions from various data sources, such as attributes, parameters, and feature functions, where the result is used directly inside a parameter.
Arithmetic Editor

Conditional Values

Set values depending on one or more test conditions that either pass or fail.
P
Related Transformers: GeometryPropertyRemover, GeometryPropertyRenamer, GeometryPropertySetter"
134;c471bcdf-e55e-468d-87b3-d0ed4c9a84f7;"Name: PointCloudCreator
Category: Point Clouds
Description: Name: PointCloudCreator Category: Point Clouds Description: How does it work?

The PointCloudCreator creates a single point cloud feature, based on specified size, location, spacing, rotation, and components. Size may be defined either by an origin with X and Y Length (in ground units), or by extents (lower left and upper right coordinates).
Patterns may be created for z values and/or any other component.

Z Values

Z values may be applied in a selection of patterns:
Flat
TheZ Minimumvalue is applied to all points, producing a flat point cloud.

Sloped
Z values are scaled between theZ MinimumandZ Maximum, producing an elevation gradient.

Trigonometric
Z values are assigned in a trigonometric pattern, producing waves that range between theZ MinimumandZ Maximumvalues.
TheZ Component Typemust be floating-point - eitherReal32orReal64.

Oblique view:

None
The point cloud will not have a z component - only x and y components.
Related Transformers: 2DGridCreator, Creator, RasterNumericCreator, RasterRGBCreator"
135;bf8c3b83-209c-4e52-a674-d857c62dd12c;"Name: RasterBandAdder
Category: Rasters
Description: Name: RasterBandAdder Category: Rasters Description: hat matches a raster band’s Nodata value, and sets a value on it.
RasterPaletteRemover
Removes selected palette(s) from raster features.
RasterPaletteResolver
Resolves the palette(s) on a raster by replacing cell values with their corresponding palette values. Palette values with multiple components, such as RGB, are broken down and the individual values assigned to multiple, newly-added bands.

Workflow Control

RasterCheckpointer
Forces accumulated raster operations to be processed, saving the state to disk and releasing resources to tune performance or assist with memory limitations.
RasterConsumer
Reads raster features for testing purposes, including any accumulated raster operations. No additional operations are performed, and nothing is done with the features.
RasterExtractor
Serializes the geometry of a raster feature into a Blob attribute, encoding the contents according to a choice of common binary raster formats.
RasterNumericCreator
Creates a numeric raster of specified size and resolution, with default cell values.
RasterReplacer
Decodes a binary attribute containing encoded rasters stored as Blobs, replacing the feature’s geometry with the decoded raster.
RasterRGBCreator
Creates a color raster feature of specified size, resolution, and interpretation type, with default cell values.
RasterSelector
Selects specific bands and palettes of a raster for subsequent transformer operations.

Vectors and Rasters

ImageRasterizer
Creates a raster representation of vector or point cloud input features, using the fme_color attribute over a solid background fill for vector features. Point clouds may be rendered using their color or intensity components.
NumericRasterizer
Creates a numeric raster representation of vector or point cloud input features, where cell values are taken from the z coordinates of the input features and overlaid on a uniform background.
MapnikRasterizer
Generates a raster from input vector and raster features, with fine control over symbolization and labeling, using the Mapnik toolkit.
PointCloudOnRasterComponentSetter
Sets point cloud compon
Related Transformers: RasterBandCombiner, RasterBandInterpretationCoercer, RasterBandKeeper, RasterBandNameSetter, RasterBandOrderer, RasterBandRemover, RasterBandSeparator, RasterInterpretationCoercer"
136;efaa503e-7fbd-4ccd-9ea4-c5fb7a058d03;"Name: RandomNumberGenerator
Category: Calculated Values, Strings
Description: Name: RandomNumberGenerator Category: Calculated Values, Strings Description: Output Ports

The dynamic <Rejected> port appears when a parameter is set to a non-literal value that might make processing impossible.
For example, if a numeric parameter such asLine Width,Count Start, orDecimal Placesis set to an expression, attribute value, or user parameter, it is possible to pass in a non-numeric value that cannot be used.Decimal Places=Catcannot be processed, so the feature will be output via this port.
Rejected features will have anfme_rejection_codeattribute explaining the reason for rejection.
Rejected Feature Handling:can be set to either terminate the translation or continue running when it encounters a rejected feature. This setting is available both as a defaultFME optionand as aworkspace parameter.

Parameters

Minimum Value
Specify the minimum value that can be generated.
Maximum Value
Specify the maximum value that can be generated.
Decimal Places
The random number will be rounded to the number 
 of digits specified in the Decimal Places parameter.
Note that in general, when the Minimum Value and Maximum Value is specified in an exponential form (for example, ""1.0e+25""), Decimal Places refers to the number of decimal places in the exponential form.
If Minimum Value or Maximum Value have more decimal places than the Decimal Places requested for the result, the actual minimum value used will be rounded up and the actual maximum value used will be rounded down to the requested decimal places.  This is to ensure that the generated random number will always fall between the Minimum Value and the Maximum Value.
Generated Number
Name the attribute to contain the generated number.

Editing Transformer Parameters

Using a set of menu options, transformer parameters can be assigned by referencing other elements in theworkspace. More advanced functions, such as an advanced editor and an arithmetic editor, are also available in some transformers. To access a menu of these options, clickbeside the applicable parameter. For more information, seeTransformer Parameter Menu Options.

Defining Values

There are several ways to define a value for use in a Transformer. The sim
Related Transformers: "
137;f648f63c-82ea-4479-9048-ce4d4175bb08;"Name: TempPathnameCreator
Category: Calculated Values, Workflows
Description: Name: TempPathnameCreator Category: Calculated Values, Workflows Description: Input Ports

This transformer accepts any feature.

Output Ports

Each input feature is output with the temporary pathname attribute added.

Parameters

Basename
An optional prefix for the actual filename portion of the temporary pathname being created.
Extension
An optional suffix for the actual filename.  If this does not start with a period ""."", then a period ""."" will be prepended to the specified suffix when it is used.
Pathname
The attribute that contains the reserved unique temporary pathname.
Note that this value does not create a permanent file or folder. FME removes everything on the file system at the end of the translation.

Editing Transformer Parameters

Using a set of menu options, transformer parameters can be assigned by referencing other elements in theworkspace. More advanced functions, such as an advanced editor and an arithmetic editor, are also available in some transformers. To access a menu of these options, clickbeside the applicable parameter. For more information, seeTransformer Parameter Menu Options.

Defining Values

There are several ways to define a value for use in a Transformer. The simplest is to simply type in a value or string, which can include functions of various types such as attribute references, math and string functions, andworkspaceparameters. There are a number of tools and shortcuts that can assist in constructing values, generally available from the drop-down context menu adjacent to the value field.

Using the Text Editor

The Text Editor provides a convenient way to construct text strings (including regular expressions) from various data sources, such as attributes, parameters, and constants, where the result is used directly inside a parameter.
Text Editor

Using the Arithmetic Editor

The Arithmetic Editor provides a convenient way to construct math expressions from various data sources, such as attributes, parameters, and feature functions, where the result is used directly inside a parameter.
Arithmetic Editor

Conditional Values

Set values depending on one or more test conditions that either pass or fail.
Parameter Condition Definition
Related Transformers: "
138;c0944101-8ee4-4a7a-89ce-8df85831a721;"Name: AttributeRounder
Category: Calculated Values, Strings
Description: Name: AttributeRounder Category: Calculated Values, Strings Description: Rounds off attributes with numeric values to the specified number of decimal places. Rounding may be nearest, up, or down.
Jump to Configuration

Typical Uses
Related Transformers: CoordinateRounder, DateTimeRounder, RasterCellValueRounder"
139;f3c506d4-4a0b-4043-928e-38a4db58b198;"Name: VertexRemover
Category: Coordinates, Geometries
Description: Name: VertexRemover Category: Coordinates, Geometries Description: Input Ports

Line or area features to have vertices removed.

Output Ports

Features with vertices removed as specified in the parameters, and an added attribute containing the actual number of vertices removed.
Features with invalid geometries will be rejected and output via this port.
Rejected features will receive an explanatoryfme_rejection_codeattribute.
Rejected Feature Handling:can be set to either terminate the translation or continue running when it encounters a rejected feature. This setting is available both as a defaultFME optionand as aworkspace parameter.

Parameters

Keep or Remove Coordinates
Select how coordinates are identified for removal:
Remove: Vertices described by theCoordinate IndexandNumber to Keep/Removeparameters will be deleted.
Keep: Vertices described by theCoordinate IndexandNumber to Keep/Removeparameters will be kept, and all other coordinates deleted.
Coordinate Index
Specify the index position of the first vertex of interest.
The index starts at zero (0), indicating the first vertex.
Negative integers are used to indicate position relative to the last vertex, where-1is last,-2is second-to-last, and so on.
The index value may be entered directly or provided via an attribute, expression, user parameter, or conditional value.
Number to Keep/Remove
Specify the number of vertices of interest, moving towards the end of the feature from the position specified inCoordinate Index.
The value may be entered directly or provided via an attribute, expression, user parameter, or conditional value.

Editing Transformer Parameters

Using a set of menu options, transformer parameters can be assigned by referencing other elements in theworkspace. More advanced functions, such as an advanced editor and an arithmetic editor, are also available in some transformers. To access a menu of these options, clickbeside the applicable parameter. For more information, seeTransformer Parameter Menu Options.

Defining Values

There are several ways to define a value for use in a Transformer. The simplest is to simply type in a value or string, which can include functions of 
Related Transformers: CoordinateExtractor, GeometryRemover, SpikeRemover, VertexCounter, VertexCreator"
140;eaed2fdc-cd7f-4bde-8724-a18db2bdc502;"Name: RasterCellValueCalculator
Category: Calculated Values, Rasters
Description: Name: RasterCellValueCalculator Category: Calculated Values, Rasters Description: e property, interpolating new cell values, updating all other affected raster properties, and producing an output raster feature with a rotation angle of zero.
RasterSharpener
Enhances the features of a raster image. The RasterSharpener enhances the borders, lines, and curves while reducing noise in the flat areas of the raster image.
RasterSubsetter
Clips raster features using pixel bounds instead of ground coordinates, and optionally adds cells around the perimeter.
RasterTiler
Splits each input raster into a series of tiles by specifying either a tile size in cells/pixels or the number of tiles.
RasterToPolygonCoercer
Creates polygons from input raster features. One polygon is output for each contiguous area of pixels with the same value in the input raster.
WebMapTiler
Creates a series of image tiles that can be utilized by web mapping applications such as Bing™ Maps, Google Maps™, or Web Map Tile Service. This is done by resampling rasters to various different resolutions and then splitting them into tiles.

Working with Bands

RasterBandAdder
Adds a new band to a raster feature.
RasterBandCombiner
Merges coincidental raster features into a single output raster feature, preserving and appending all bands.
RasterBandInterpretationCoercer
Alters the interpretation type of individual raster bands, converting cell values if necessary.

RasterBandKeeper
Removes all unselected bands from a raster feature.
RasterBandMinMaxExtractor
Extracts the minimum and maximum band values, palette keys, and palette values from a raster feature, and adds them to a list attribute.
RasterBandNameSetter
Sets the band name of selected bands on a raster, making raster contents simpler to understand compared to band numbers.
RasterBandNodataRemover
Removes the existing Nodata identifier from selected bands of a raster feature. Any values previously equal to the Nodata value are considered valid data.
RasterBandNodataSetter
Sets a new Nodata value on selected bands of a raster feature.
RasterBandOrderer
Specifies the required order of bands in a raster. Bands are reordered according 
 to the input band indices.
Rast
Related Transformers: RasterCellValueReplacer, RasterCellValueRounder, RasterConvolver, RasterExpressionEvaluator, RasterSingularCellValueCalculator, RasterStatisticsCalculator"
141;3e0037cd-7f51-462d-8716-a7a1b7cebf85;"Name: OffsetCurveGenerator
Category: Geometries
Description: Name: OffsetCurveGenerator Category: Geometries Description: 
Miter
Related Transformers: Bufferer, Offsetter"
142;f33925cd-ea97-4292-a321-af8efcfa3ab0;"Name: 3DRotator
Category: 3D, Geometries
Description: Name: 3DRotator Category: 3D, Geometries Description: Input Ports

This transformer accepts features with 2D and 3D geometries. 2D input features are forced to 3D with a z value of 0.

Output Ports

The rotated features.

Parameters

Angle in Degrees
Specifies the rotation angle in degrees.
Rotate Along
Select the axis for rotation:
X AxisY AxisZ Axis
These axes are predefined.
Custom Axis
Specify axis origin and direction usingCustom Axis of Rotationparameters.
Origin X, Y, Z
Specify the coordinates of a point on the axis of rotation.
Direction X, Y, Z
Specify the axis direction vector. This vector does not have to be normalized.

Editing Transformer Parameters

Using a set of menu options, transformer parameters can be assigned by referencing other elements in theworkspace. More advanced functions, such as an advanced editor and an arithmetic editor, are also available in some transformers. To access a menu of these options, clickbeside the applicable parameter. For more information, seeTransformer Parameter Menu Options.

Defining Values

There are several ways to define a value for use in a Transformer. The simplest is to simply type in a value or string, which can include functions of various types such as attribute references, math and string functions, andworkspaceparameters. There are a number of tools and shortcuts that can assist in constructing values, generally available from the drop-down context menu adjacent to the value field.

Using the Text Editor

The Text Editor provides a convenient way to construct text strings (including regular expressions) from various data sources, such as attributes, parameters, and constants, where the result is used directly inside a parameter.
Text Editor

Using the Arithmetic Editor

The Arithmetic Editor provides a convenient way to construct math expressions from various data sources, such as attributes, parameters, and feature functions, where the result is used directly inside a parameter.
Arithmetic Editor

Conditional Values

Set values depending on one or more test conditions that either pass or fail.
Parameter Condition Definition Dialog

Content

Expressions and 
Related Transformers: "
143;a1b52429-98c7-45ff-9401-64c19bbd7558;"Name: OffsetCurveGenerator
Category: Geometries
Description: Name: OffsetCurveGenerator Category: Geometries Description: How does it work?

The OffsetCurveGenerator takes in curve features and creates new curves on either side of the original. These new lines are placed at a specified Offset distance from the original, on the left and right-hand sides. There is a choice of how corners are created - round, mitered, or beveled.
The new offset curves are output as Right and Left, according to the orientation of the original feature.

Two options for Buffer Mode are available.Standard (Fast)can generalize the geometry, producing faster and simpler results.Precisehonors the input.

Examples

In this example, we will create offset lines on either side of a rapid transit line. The original feature is a single curve.

The feature is routed into an OffsetCurveGenerator.

In the parameters dialog, we set theOffsetto100, which will create the new offset curves 100 meters away from the original feature (which is in a UTM projection, ground units in meters). TheCorner Stylechosen isRound.

Two new curves are output from the transformer - one on the left side of the original line (shown in green), and one on the right (shown in red).
In a scenario where only one side is needed (left or right), simply disregard the unneeded output port.
Related Transformers: Bufferer, Offsetter"
144;2fc30504-3048-49c6-97d5-b13c815ff41c;"Name: CoordinateSystemDescriptionConverter
Category: Coordinates, Strings
Description: Name: CoordinateSystemDescriptionConverter Category: Coordinates, Strings Description: Looks up coordinate system names and definitions between FME’s internal format and common third-party and open source representations, storing the results as an attribute.
Jump to Configuration

Typical Uses
Related Transformers: CoordinateSystemExtractor, CoordinateSystemSetter"
145;f4c067ce-155a-4bb4-aa60-21233c9baf08;"Name: PointCloudComponentAdder
Category: Point Clouds
Description: Name: PointCloudComponentAdder Category: Point Clouds Description: ouver and/or the Open Government Licence – Canada.
Keywords: point ""point cloud"" cloud PointCloud LiDAR sonar
Related Transformers: PointCloudComponentCopier, PointCloudComponentKeeper, PointCloudComponentRemover, PointCloudComponentRenamer, PointCloudComponentTypeCoercer, PointCloudExpressionEvaluator, PointCloudOnRasterComponentSetter"
146;7a6c9743-4dfa-43eb-ba38-259104c2b06f;"Name: StreamPriorityCalculator
Category: Calculated Values
Description: Name: StreamPriorityCalculator Category: Calculated Values Description: Calculating the Stream Priority for Non-Oriented Network Lines

When the network lines are not oriented, the digitized direction of network lines is not significant. So the weight along the digitized direction (forward weight) and the weight against the digitized direction (reverse weight) are the same. In this case, you can use the same attribute corresponding to the length for both  weight parameters. In this way, the loops are removed for the primary network lines (stream priority=1) and you can apply other algorithm to modify the digitized direction. This is how you can make network lines primary (stream priority=1) where the digitized direction represents a downstream flow direction.
Related Transformers: NetworkFlowOrientor, NetworkTopologyCalculator, ShortestPathFinder, StreamOrderCalculator"
147;e806cd39-faef-438d-8a99-b68095b4b5f5;"Name: BinaryDecoder
Category: Strings
Description: Name: BinaryDecoder Category: Strings Description: il.
Parameter Condition Definition Dialog

Content

Expressions and strings can include a number of functions, characters, parameters, and more.
When setting values - whether entered directly in a parameter or constructed using one of the editors - strings and expressions containing String, Math, Date/Time or FME Feature Functions will have those functions evaluated. Therefore, the names of these functions (in the form @<function_name>) should not be used as literal string values.
String Functions
Special Characters
Math Functions
Math Operators
FME Feature Functions
FME Parameters

Dialog Options - Tables

Transformers with table-style parameters have additional tools for populating and manipulating values.
Row Reordering

Enabled once you have clicked on a row item. Choices include:
Cut, Copy, and Paste

Enabled once you have clicked on a row item. Choices include:
Cut, copy, and paste may be used within a transformer, or between transformers.
Filter

Import

Reset/Refresh

Generally resets the table to its initial state, and may provide additional options to remove invalid entries. Behavior varies between transformers.
Note:Not all tools are available in all transformers.

Transformer History

Selecting HEX as the Encoding Type replaces the HexDecoder transformer, which is now deprecated.

FME Community

TheFME Communityis the place for demos, how-tos, articles, FAQs, and more. Get answers to your questions, learn from other users, and suggest, vote, and comment on new features.
Search forall results about the BinaryDecoderon theFME Community.
Keywords: HexDecoder
Related Transformers: "
148;11777310-4540-409d-93fb-d735d4ef29d2;"Name: PROJAttributeReprojector
Category: Coordinates, Integrations
Description: Name: PROJAttributeReprojector Category: Coordinates, Integrations Description: Input Ports

Features with attributes containing coordinates to be reprojected.

Output Ports

Features with reprojected attributes as specified in parameters.

Parameters

Type

Select a method for applying a transformation.
Automatic Transformation
SourceandDestination Coordinate Systemare specified, and a transformation is chosen automatically by PROJ.
For information on how PROJ performs automatic transformations, seeComputation of coordinate operations between two CRSat PROJ.
Note that Automatic Transformations may change between FME releases.
Manual Transformation
A PROJ or WKT2 string will be entered specifying the Source and Destination Coordinate Systems and any other required transformation steps such as grid shift files.
Source Coordinate System
IfTransformation TypeisAutomatic Transformation, specify the coordinate system of the incoming features.
The default is <Read from feature>, which reads the features’ existing coordinate system(s).
Coordinate systems may also be explicitly selected from the Coordinate System Gallery, entered directly, or provided via an attribute value or user parameter.
Acceptable forms include  EPSG number, WKT2 string, or PROJ string (excluding pipelines).
Destination Coordinate System
IfTransformation TypeisAutomatic Transformation, specify the coordinate system to be reprojected to.
Coordinate systems may be explicitly selected from the Coordinate System Gallery, entered directly, or provided via an attribute value or user parameter.
Acceptable forms include  EPSG number, WKT2 string, or PROJ string (excluding pipelines).
Note that FME will attempt to determine what the destination coordinate system’s corresponding FME coordinate system is, and tag the output features with it, unless an override is specified byOutput Coordinate System Tag.
Epoch
Used for spatiotemporal transformations. A decimal year that represents the time dimension to be used in the transformation pipeline.
Transformation
IfTransformation TypeisManual Transformation, specify a complete transformation in the form of a PROJ string (including multiple-step pipelines) or WKT2.
For more
Related Transformers: AttributeReprojector, CommonLocalReprojector, CsmapAttributeReprojector, CsmapReprojector, EsriReprojector, GridInQuestIIReprojector, GtransAttributeReprojector, GtransReprojector, PROJReprojector, ReframeReprojector, ReprojectAngleCalculator, ReprojectLengthCalculator, Reprojector"
149;28f69988-0705-4df5-b5f9-5359144aa231;"Name: MQTTConnector
Category: Web
Description: Name: MQTTConnector Category: Web Description: Input Ports

This transformer accepts any feature.

Output Ports

The output of this transformer will vary depending on the action performed. Message data and metadata are presented as feature attributes.
The incoming feature is output through this port.
Features that cause the operation to fail are output through this port. Anfme_rejection_codeattribute, having the valueERROR_DURING_PROCESSING, will be added, along with a more descriptivefme_rejection_messageattribute which contains more specific details as to the reason for the failure.
Rejected Feature Handling:can be set to either terminate the translation or continue running when it encounters a rejected feature. This setting is available both as a defaultFME optionand as aworkspace parameter.

Parameters

Credential Source
Using a web connection integrates best with FME, but in some cases, you may wish to use one of the other sources.
Account
Available when the credential source isWeb Connection. To create an MQTT connection, click the 'Account' drop-down box and select 'Add Web Connection...'.
The connection can then be managed via Tools -> FME Options... -> Web Connections.
Broker URL, Broker Port
Available when the credential source isEmbedded. The broker URL and port allow FME to connect to the broker.
Enable SSL/TLS
Available when the credential source isEmbedded. Whether to use a secure connection. Secure connections typically use port 8883, while insecure connections typically use port 1883.
User Name, Password
Available when the credential source isEmbedded. The username and password to use when connecting to the broker. These are optional, allowing for anonymous access.
CA Certificate
Root CA certificate for broker.
Optional.
Client Certificate
Certificate for client authentication.
Optional.
Client Private Key
Private key for client authentication.
Optional.
Client ID
The client ID uniquely identifies the FME client to the broker. Some brokers require pre-registration of client IDs, while others allow the client to register ad-hoc.
Action
The type of operation to perform. Choices are:
QoS Leve
Related Transformers: AWSIoTConnector, AzureIoTConnector, AzureQueueStorageConnector, GoogleCloudPubSubConnector, GoogleIoTConnector, IBMIoTConnector, KafkaConnector, SQSConnector"
150;48575214-b2ca-4799-aa30-4d843dd64b88;"Name: JMSReceiver
Category: Integrations, Web
Description: Name: JMSReceiver Category: Integrations, Web Description: Using the Java Message System (JMS), receives messages from a message broker.

Working with JMS

For information about configuring FME to communicate with JMS-compliant message brokers, seeWorking with JMS.

Usage Notes

The performance of this transformer is dependent on the amount of memory allocated to the Java Virtual Machine (JVM). The following environment variables allow you to specify memory available to Java Plugins:
These variables must be set in multiples of 1024 and greater than 1 MB. To indicate kilobytes, megabytes, or gigabytes, appendkorK,morM, orgorGrespectively. For example, any of these values is acceptable:
6291456
6144k
6m
These variables must be set in multiples of 1024 and greater than 2 MB. To indicate kilobytes, megabytes, or gigabytes, appendkorK,morM, orgorGrespectively. For example, any of these values is acceptable:
83886080
81920k
80m

Configuration
Related Transformers: "
151;82eabc57-d478-4599-a44f-34390ffcd56a;"Name: ArcGISOnlineConnector
Category: Integrations, Web, Workflows
Description: Name: ArcGISOnlineConnector Category: Integrations, Web, Workflows Description: sting title of the source item.
Note:
Feature Layer Tags
The tags that the published feature layer should have in ArcGIS. If this is left blank, it published item will have the existing tags of the source item.
Coordinate System
Specify the target spatial reference of the created feature service. If not specified, this will default toWKID 102100.

Wait Behavior

Wait for Publish Processing
Whether to wait for the feature service created to publish
Processing Timeout (s)
The amount of time (seconds) to wait for the feature layer to publish. If not specified, this will default to 180 seconds.

Output Attributes

_id
Returns the ID of the feature service which was just created.
_private_url
Returns the link to the ArcGIS Online web content page for the newly created feature service
_service_type
Returns the type of service created with the publish operation
_webservice_url
Returns the URL which the newly created feature service can be accessed at. Only valid for feature-service like ArcGIS Online items.
Change the sharing level of a user’s ArcGIS Online content item or share it to additional groups.

Content Source

Path
The Item ID of an ArcGIS file to share. If valid credentials have been provided as a web connection, you may browse to a location in the user’s content.

Sharing

ShareLevel
Specify the sharing level to set for the item.
Share to Additional Groups
Select additional groups to share the item to. If there is a valid web connection, a list of all the groups the user belongs to will be displayed. Groups are listed with space separated IDs.
Notes:
Update the data stored for an existing ArcGIS item and optionally specify new title/tags for that item.

Content Source

Path
The Item ID of an ArcGIS file or folder to update. If valid credentials have been provided as a web connection, you may browse to a location in the user’s content. Only items which have data that can be updated by the connector will be displayed. If the user has permission to access items stored in other locations, the id of those items can be manually entered in this field.

Data Source

Upload
The type of data to u
Related Transformers: AzureBlobStorageConnector, GoogleCloudStorageConnector, S3Connector"
152;e6655326-b99c-46ac-a014-b506678853dc;"Name: LineOnAreaOverlayer
Category: Filters and Joins, Spatial Analysis
Description: Name: LineOnAreaOverlayer Category: Filters and Joins, Spatial Analysis Description:  intended to be processed in groups (and is already so ordered). In this case, the structure dictatesGroup Byusage - not performance considerations.
The second possible reason is potential performance gains.
Performance gains are most likely when the data is already sorted (or read using aSQL ORDER BYstatement) since less work is required of FME. If the data needs ordering, it can be sorted in theworkspace(though the added processing overhead may negate any gains).
Sorting becomes more difficult according to the number of data streams. Multiple streams of data could be almost impossible to sort into the correct order, since all features matching aGroup Byvalue need to arrive before any features (of any feature type or dataset) belonging to the next group. In this case, usingGroup BywithWhen All Features Receivedmay be the equivalent and simpler approach.
As with many scenarios, testing different approaches in yourworkspacewith your data is the only definitive way to identify performance gains.
Mode
Split Lines With Areas:Default.  Each input line is split at any area boundaries it intersects, and attributes may be shared between related lines and areas (spatial join).
Split Areas With Lines:Each input area is split wherever it is subdivided by line input.  Attributes may be shared between areas and their splitting lines (spatial join).
Tolerance
The minimum distance between geometries in 2D before they are considered equal, in ground units. If the tolerance isNone, the geometries must be exactly identical to be considered equal. If the tolerance isAutomatic, a tolerance will be automatically computed based on the location of the input geometries. Additionally, a custom tolerance may be used.
Aggregate Handling
Choose how aggregate geometries are to be handled.
Deaggregate:Decompose aggregates into their individual components.
With this setting, the transformer might output more features than were given as inputs.
Reject:Do not process aggregates and output them via the <Rejected> port.
Overlap Count
Split Lines With Areas:The Overlap Count Attribute added to output linear features holds the numbe
Related Transformers: AreaOnAreaOverlayer, Bufferer, Clipper, Intersector, LineOnLineOverlayer, NeighborFinder, PointOnAreaOverlayer, PointOnLineOverlayer, PointOnPointOverlayer, SpatialFilter, SpatialRelator, TopologyBuilder"
153;61850b97-f1ba-48cb-8fde-005bb1810d22;"Name: RasterBandNodataSetter
Category: Rasters
Description: Name: RasterBandNodataSetter Category: Rasters Description: Input Ports

This transformer accepts only raster features.

Output Ports

Raster features with Nodata values added or modified as specified on selected bands.
Non-raster features will be routed to the <Rejected> port, as well as invalid rasters.
Rejected features will have an fme_rejection_code attribute with one of the following values:
INVALID_GEOMETRY_TYPEINVALID_RASTER_NO_BANDS
Rejected Feature Handling:can be set to either terminate the translation or continue running when it encounters a rejected feature. This setting is available both as a defaultFME optionand as aworkspace parameter.

Parameters

Nodata Value
Specify a numeric value to be set as the new Nodata value.
If a Nodata value already exists, it will be replaced.
Replace Cell Values
No:Cell values are not altered.
If a raster already has a Nodata value defined, and has cells with that value, they will retain their original values and become valid.
Yes:If a raster already has a Nodata value defined, any cells with that value have their values changed to the new Nodata value.
If the raster contains cells with both the original and new Nodata values, original value cells will be changed to the new value and still considered Nodata,in addition toany cells that already had the newly defined Nodata value.
If the input raster does not already have a Nodata value defined,Yeswill have no effect and cell values are unchanged.

Editing Transformer Parameters

Using a set of menu options, transformer parameters can be assigned by referencing other elements in theworkspace. More advanced functions, such as an advanced editor and an arithmetic editor, are also available in some transformers. To access a menu of these options, clickbeside the applicable parameter. For more information, seeTransformer Parameter Menu Options.

Defining Values

There are several ways to define a value for use in a Transformer. The simplest is to simply type in a value or string, which can include functions of various types such as attribute references, math and string functions, andworkspaceparameters. There are a number of tools and short
Related Transformers: RasterBandNodataRemover, RasterPaletteNodataSetter"
154;1fa12035-038d-4ae9-be1d-7766fe08b164;"Name: XMLFragmenter
Category: 
Description: Name: XMLFragmenter Category:  Description: ced will be prefixed with matched element's name.
If the value is yes, then both the matched element's attributes and all its children are prefixed
If the value is no, then none of the feature attributes are prefixed with matched element's name
If the value is children, then only the children of the matched element are prefixed
If the value is attributes, then only the attributes of the matched element are prefixed.
Default value if not specified: yes
yes | no | children | attributes
If this option is set to yes then the attributes of the matched element are mapped as FME feature attributes. Otherwise, the attributes of the matched element are ignored.
matched-prefix option can also be set to attributes or yes to allow the attributes to be prefixed with the name of the matched element.
Default value if not specified: yes
The option controls whether XML attributes from ancestor of the matched element should be included as FME feature attributes.
- 'parent' or '1'         : XML attributes of the parent of the matched element are added
- 'grandparent' or '2'    : XML attributes of the grandparent of the matched element are added
- 'root' or '-1'          : XML attributes of the root of the document are added
- any non-negative number : XML attributes of the ancestor by going up x levels from the matched element are added. 0 is the matched element.
To include more than one ancestor, multiple values can be separated by a space.
For example: To get the attributes from root, parent and grand parent, we can specify
matched-ancestor-attributes=""parent grandparent root""
parent | grandparent | root
This option can be specified as a space separated list of cardinality directives.
Default value: +{?} (Treat child elements as a list if there are more than one with the same name)
Possible values: Refer to the xfMap section in the XML Reader documentation.
The except attribute accepts the same types of expressions as the match or except attribute of a mapping rule.
For example, the expression except=""parent/child{2}"" could be used to exclude the second <child> element
Related Transformers: "
155;aa546021-278a-4f2c-8dbd-26e93dcf6faa;"Name: RasterBandKeeper
Category: Rasters
Description: Name: RasterBandKeeper Category: Rasters Description: log

Content

Expressions and strings can include a number of functions, characters, parameters, and more.
When setting values - whether entered directly in a parameter or constructed using one of the editors - strings and expressions containing String, Math, Date/Time or FME Feature Functions will have those functions evaluated. Therefore, the names of these functions (in the form @<function_name>) should not be used as literal string values.
String Functions
Special Characters
Math Functions
Math Operators
FME Feature Functions
FME Parameters

Dialog Options - Tables

Transformers with table-style parameters have additional tools for populating and manipulating values.
Row Reordering

Enabled once you have clicked on a row item. Choices include:
Cut, Copy, and Paste

Enabled once you have clicked on a row item. Choices include:
Cut, copy, and paste may be used within a transformer, or between transformers.
Filter

Import

Reset/Refresh

Generally resets the table to its initial state, and may provide additional options to remove invalid entries. Behavior varies between transformers.
Note:Not all tools are available in all transformers.

Reference

Processing Behavior
Feature-Based
Feature Holding
No

FME Community

TheFME Communityis the place for demos, how-tos, articles, FAQs, and more. Get answers to your questions, learn from other users, and suggest, vote, and comment on new features.
Search forall results about the RasterBandKeeperon theFME Community.

Examples may contain information licensed under the Open Government Licence – Vancouver and/or the Open Government Licence – Canada.
Related Transformers: RasterBandAdder, RasterBandCombiner, RasterBandRemover, RasterBandSeparator"
156;df112cec-ed5c-4962-981e-4f1cd574aa48;"Name: Affiner
Category: Coordinates
Description: Name: Affiner Category: Coordinates Description: ings (including regular expressions) from various data sources, such as attributes, parameters, and constants, where the result is used directly inside a parameter.
Text Editor

Using the Arithmetic Editor

The Arithmetic Editor provides a convenient way to construct math expressions from various data sources, such as attributes, parameters, and feature functions, where the result is used directly inside a parameter.
Arithmetic Editor

Conditional Values

Set values depending on one or more test conditions that either pass or fail.
Parameter Condition Definition Dialog

Content

Expressions and strings can include a number of functions, characters, parameters, and more.
When setting values - whether entered directly in a parameter or constructed using one of the editors - strings and expressions containing String, Math, Date/Time or FME Feature Functions will have those functions evaluated. Therefore, the names of these functions (in the form @<function_name>) should not be used as literal string values.
String Functions
Special Characters
Math Functions
Math Operators
FME Feature Functions
FME Parameters

Dialog Options - Tables

Transformers with table-style parameters have additional tools for populating and manipulating values.
Row Reordering

Enabled once you have clicked on a row item. Choices include:
Cut, Copy, and Paste

Enabled once you have clicked on a row item. Choices include:
Cut, copy, and paste may be used within a transformer, or between transformers.
Filter

Import

Reset/Refresh

Generally resets the table to its initial state, and may provide additional options to remove invalid entries. Behavior varies between transformers.
Note:Not all tools are available in all transformers.

Reference

Processing Behavior
Feature-Based
Feature Holding
No

FME Community

TheFME Communityis the place for demos, how-tos, articles, FAQs, and more. Get answers to your questions, learn from other users, and suggest, vote, and comment on new features.
Search forall results about the Affineron theFME Community.

Examples may contain information licensed under t
Related Transformers: 3DAffiner, 3DRotator, AffineWarper, Offsetter, PointCloudTransformationApplier, RasterRotationApplier, Rotator, Scaler, SecondOrderConformer"
157;5efd70d3-c090-4fce-82ea-9aabd886e015;"Name: ArcPropertySetter
Category: Geometries
Description: Name: ArcPropertySetter Category: Geometries Description: ine
Supported
MinimumSpanningCircleReplacer
Either replaces an existing feature’s geometry with circle that contains all of its vertices or extracts the circle property values into attributes.
Ellipse (Arc by center point)
No

Configuration
Related Transformers: 2DEllipseReplacer, 2DArcReplacer, 3DArcReplacer, ArcEstimator, ArcPropertyExtractor, ArcStroker, Creator, Curvefitter, EllipsePropertyExtractor, EllipsePropertySetter"
158;fff9bdf3-ad60-428f-a522-b9102f558ea9;"Name: AzureIoTConnector
Category: Web
Description: Name: AzureIoTConnector Category: Web Description: ity.

Examples may contain information licensed under the Open Government Licence – Vancouver and/or the Open Government Licence – Canada.
Related Transformers: AWSIoTConnector, AzureEventHubsConnector, AzureQueueStorageConnector, GoogleIoTConnector, IBMIoTConnector, GoogleCloudPubSubConnector, KafkaConnector, MQTTConnector, SQSConnector"
159;e370af34-354c-44bf-a782-828cf7d8ecb9;"Name: LocalCoordinateSystemSetter
Category: Coordinates
Description: Name: LocalCoordinateSystemSetter Category: Coordinates Description: Usage Notes
Related Transformers: CommonLocalReprojector, CoordinateSystemSetter"
160;422ce847-c7b7-4bc3-9197-8d0bdeb3b7e8;"Name: RasterPaletteInterpretationCoercer
Category: Rasters
Description: Name: RasterPaletteInterpretationCoercer Category: Rasters Description: t band indices.
RasterBandPropertyExtractor
Extracts the band and palette properties of a raster feature and exposes them as attributes.
RasterBandRemover
Removes any selected bands from a raster feature.
RasterBandSeparator
Separates bands or unique band and palette combinations, and outputs either individual raster features or a single new raster feature containing all combinations.
RasterStatisticsCalculator
Calculates statistics on raster bands and adds the results as attributes.

Working with Cells

RasterAspectCalculator
Calculates the aspect (direction of slope) for each cell of a raster. Aspect is measured in degrees from 0 to 360, clockwise from north.
RasterCellCoercer
Creates individual points or polygons for each cell in a raster, optionally extracting band values as z coordinates or attributes.
RasterCellValueCalculator
Evaluates basic arithmetic , minimum, maximum or average operations on the cell values of a pair of rasters.
RasterCellValueReplacer
Replaces a range of band values in a raster with a new single value.
RasterCellValueRounder
Rounds off raster cell values.
RasterSegmenter
Partitions a raster image into arbitrarily sized groups of cells from the input image based on intensity differences in the input raster image cells.
RasterSingularCellValueCalculator
Performs basic arithmetic operations on the cell values of a raster against a numeric value.
RasterSlopeCalculator
Calculates the slope (maximum rate of change in z) for each cell of a raster.

Working with Palettes

RasterPaletteAdder
Creates a palette from an attribute, and adds this palette to all selected bands on a raster.
RasterPaletteExtractor
Creates a string representation of an existing palette on a raster and saves it to an attribute.
RasterPaletteGenerator
Generates a palette out of the selected band(s) of a raster. The output raster will have the selected band(s) replaced by a new band with a palette.
RasterPaletteInterpretationCoercer
Alters the interpretation type of raster palettes.
RasterPaletteNodataSetter
Identifies the palette key that matches a raster band’s Nodata value, and sets a valu
Related Transformers: RasterBandInterpretationCoercer, RasterInterpretationCoercer"
161;a97f7028-13cc-4050-8322-e5e62b2ed11f;"Name: RasterSelector
Category: Rasters
Description: Name: RasterSelector Category: Rasters Description: Transformers that support band orband and palette selection:
PointCloudOnRasterComponentSetter
PointOnRasterValueExtractor
RasterAspectCalculator
RasterBandInterpretationCoercer
RasterBandKeeper
RasterBandNameSetter
RasterBandNodataRemover
RasterBandNodataSetter
RasterBandRemover
RasterCellCoercer
RasterCellValueCalculator
RasterCellValueReplacer
RasterCellValueRounder
RasterConvolver
RasterHillshader
RasterMosaicker
RasterPaletteAdder
RasterPaletteExtractor
RasterPaletteGenerator
RasterPaletteInterpretationCoercer
RasterPaletteNodataSetter
RasterPaletteRemover
RasterPaletteResolver
RasterSingularCellValueCalculator
RasterSlopeCalculator
RasterToPolygonCoercer
Scaler
VectorOnRasterOverlayer
Selects specific bands and palettes of a raster for subsequent transformer 
 operations.
Jump to Configuration

Typical Uses
Related Transformers: "
162;60316bc2-35ad-4b85-a06c-7549c0b28a06;"Name: SpatialRelator
Category: Data Quality, Filters and Joins, Spatial Analysis
Description: Name: SpatialRelator Category: Data Quality, Filters and Joins, Spatial Analysis Description: Determines what type of spatial (topological) relationships exist between sets of point, line, area, and text features. Tags - but does not alter the geometry of - features when selected relationships exist, and performs a spatial join to optionally copy attributes between features.
Jump to Configuration

Typical Uses
Related Transformers: AreaOnAreaOverlayer, Bufferer, Clipper, Intersector, LineOnAreaOverlayer, LineOnLineOverlayer, NeighborFinder, PointOnAreaOverlayer, PointOnLineOverlayer, PointOnPointOverlayer, SpatialFilter, TopologyBuilder"
163;90233932-388e-4bf5-b2d5-dc02fc4e768d;"Name: RasterInterpretationCoercer
Category: Rasters
Description: Name: RasterInterpretationCoercer Category: Rasters Description: Choosing a Raster Transformer

FME has an extensive selection of transformers for working with raster data. They can be generally categorized as working with whole rasters, bands, cells or palettes, and those designed for workflow control or combining raster with vector data.
For information on raster geometry and properties, seeRasters (IFMERaster).

Working with Rasters

RasterCellOriginSetter
Sets the cell origin point within cells in a raster.
RasterConvolver
Applies a convolution filter (sometimes called akernelorlens) to raster features and outputs the results.
RasterExpressionEvaluator
Evaluates expressions on each cell in a raster or pair of rasters, including algebraic operations and conditional statements.
RasterExtentsCoercer
Replaces the geometry of input raster features with a polygon covering either the extents of a raster or the extent of data within a raster.
RasterGCPExtractor
ExtractsGround Control Point(GCP) coordinate system and point values from a raster feature and exposes them as attributes.
RasterGCPSetter
SetsGround Control Points(GCPs) on a raster, pairing cell positions with known coordinates.
RasterGeoreferencer
Georeferences a raster by either known corner coordinates or origin, cell size, and rotation.
RasterHillshader
Generates a grayscale shaded relief representation of terrain, based on elevation values.
RasterInterpretationCoercer
Alters the interpretation type of rasters, including all bands, and converts cell values if necessary.
RasterMosaicker
Merges multiple raster features into a single raster feature.
RasterPropertyExtractor
Extracts the geometry properties of a raster feature and exposes them as attributes.
RasterPyramider
Resamples rasters to multiple resolutions, based on either number of levels or dimensions of the smallest output raster.
RasterRegisterer
Transforms an image to minimize its difference with another.
RasterResampler
Resamples rasters, based on specified output dimensions, cell size in ground units, or percentage of original, and interpolates new cell values.
RasterRotationApplier
Rotates a raster feature according to 
Related Transformers: RasterBandInterpretationCoercer, RasterPaletteInterpretationCoercer"
164;ceffa9af-b246-4c13-baa7-7f05852f9bbc;"Name: RasterPaletteInterpretationCoercer
Category: Rasters
Description: Name: RasterPaletteInterpretationCoercer Category: Rasters Description: Choosing a Raster Transformer

FME has an extensive selection of transformers for working with raster data. They can be generally categorized as working with whole rasters, bands, cells or palettes, and those designed for workflow control or combining raster with vector data.
For information on raster geometry and properties, seeRasters (IFMERaster).

Working with Rasters

RasterCellOriginSetter
Sets the cell origin point within cells in a raster.
RasterConvolver
Applies a convolution filter (sometimes called akernelorlens) to raster features and outputs the results.
RasterExpressionEvaluator
Evaluates expressions on each cell in a raster or pair of rasters, including algebraic operations and conditional statements.
RasterExtentsCoercer
Replaces the geometry of input raster features with a polygon covering either the extents of a raster or the extent of data within a raster.
RasterGCPExtractor
ExtractsGround Control Point(GCP) coordinate system and point values from a raster feature and exposes them as attributes.
RasterGCPSetter
SetsGround Control Points(GCPs) on a raster, pairing cell positions with known coordinates.
RasterGeoreferencer
Georeferences a raster by either known corner coordinates or origin, cell size, and rotation.
RasterHillshader
Generates a grayscale shaded relief representation of terrain, based on elevation values.
RasterInterpretationCoercer
Alters the interpretation type of rasters, including all bands, and converts cell values if necessary.
RasterMosaicker
Merges multiple raster features into a single raster feature.
RasterPropertyExtractor
Extracts the geometry properties of a raster feature and exposes them as attributes.
RasterPyramider
Resamples rasters to multiple resolutions, based on either number of levels or dimensions of the smallest output raster.
RasterRegisterer
Transforms an image to minimize its difference with another.
RasterResampler
Resamples rasters, based on specified output dimensions, cell size in ground units, or percentage of original, and interpolates new cell values.
RasterRotationApplier
Rotates a raster feature according to its rot
Related Transformers: RasterBandInterpretationCoercer, RasterInterpretationCoercer"
165;ac42444c-4835-445d-81bd-9c6f5aa06827;"Name: DatabaseUpdater
Category: 
Description: Name: DatabaseUpdater Category:  Description: Input Ports

This transformer accepts any feature.

Output Ports

This transformer has no output ports.

Parameters

Format and Dataset
Select the format and dataset where the table resides, including any format-specific parameters.
Table
Specify the table to update. Click the Browse button to select the table from a list retrieved from the database. Note that you can only select this after you have completely specified the database format, dataset, and format-specific parameters.
Condition
Specify how to identify the rows to update.  This can either be done throughMatch Column(s)or through aWHERE Clause.
WHERE Clause
Use a SQL WHERE clause to identify matching records to update.
An example clause is the following:
id = 'roads'
Match On
Specify the columns and their values used to identify matching records.  A record match occurs when the contents of the record for the columns listed exactly equal the corresponding value.
In the Table Column field, click the Browse button to select from a list of all the columns in the database table.  Note this only works after you have completely specified the database format, dataset, format-specific parameters, and picked a table.
Columns to Update
Specify which columns to update and the values to update them with.  Columns not listed, that are disabled, or that are set to “<Do Nothing>” will not be updated.
This table entry widget is automatically populated after a table is selected from the Browse button in theTableparameter.
Click the Reload button, located at the right of the table entry widget, to repopulate the table with the columns from the database table.  Note reloading only works after you have completely specified the database format, dataset, format-specific parameters, and picked a table.
Automatic population fills the table with columns and tries to set their values with a convenient initial state.   If a column had a value prior to populating, that value will be maintained after populating.   Columns not already mapped will default to incoming attributes of the same name if one exists, otherwise it will d
Related Transformers: "
166;3436299a-0d30-469e-91b5-ea4ed35e9f4e;"Name: GeometryPropertySetter
Category: 3D
Description: Name: GeometryPropertySetter Category: 3D Description: Input Ports

Features with geometries.

Output Ports

Features with newly set traits or geometry names.
Features that were not modified by the transformer.
The dynamic <Rejected> port appears when a parameter is set to a non-literal value that might make processing impossible.
For example, if a numeric parameter such asLine Width,Count Start, orDecimal Placesis set to an expression, attribute value, or user parameter, it is possible to pass in a non-numeric value that cannot be used.Decimal Places=Catcannot be processed, so the feature will be output via this port.
Rejected features will have anfme_rejection_codeattribute explaining the reason for rejection.
Rejected Feature Handling:can be set to either terminate the translation or continue running when it encounters a rejected feature. This setting is available both as a defaultFME optionand as aworkspace parameter.

Parameters

Geometry XQuery
Use this parameter if you want to isolate only a portion of the geometry passed in to the transformer. If no criteria are specified, the action will apply to the entire geometry at all levels.
Selection can be based on structural location, geometry name, type, appearance information, traits, trait storage types, or definition reference. The syntax used is a restricted set of XQuery, where the return clause is fixed.
The basic Geometry  XQuery dialog allows you to construct simple selection queries by automatically writing the necessary query based on specified test clauses. Clicking the Switch to Advanced button opens the Advanced Editor, which allows you to type a query free-form, for more expressive queries.
A hierarchical geometry is represented as nodes of type geometry, with attributes containing information about traits, type, and name for each geometry.
Property to Set
Overwrite Existing Properties
If a property is already present and this parameter is set toNo, the geometry will not be modified.
For example, if the geometry name is already set toHouse, then renaming asResidentialwill not apply if this parameter is set toNo.
Remove Attributes
Determine whether the att
Related Transformers: Counter, GeometryPropertyExtractor, GeometryPropertyRemover, GeometryPropertyRenamer"
167;fd148d40-a357-42d7-90bd-b2a1b9a645f3;"Name: AttributeRangeFilter
Category: Filters and Joins
Description: Name: AttributeRangeFilter Category: Filters and Joins Description: Usage Notes
Related Transformers: AttributeFilter, AttributeRangeMapper, AttributeValueMapper, TestFilter"
168;99978d0f-c170-4482-8dfc-5092ca7f1361;"Name: CommonLocalReprojector
Category: Cartography and Reports, Coordinates
Description: Name: CommonLocalReprojector Category: Cartography and Reports, Coordinates Description: Library
AttributeReprojector
Reprojects x and y coordinates stored as attributes from one coordinate system to another.
FME (default) or Esri
CommonLocalReprojector
Reprojects one or more features to a local coordinate system centered on the bounding box containing all features.
FME (default) or Esri
ReprojectAngleCalculator
Converts a given angle from one coordinate system to another.
FME (default) or Esri
ReprojectLengthCalculator
Converts a given length from one coordinate system to another.
FME (default) or Esri
Reprojector
Reprojects feature x and y coordinates from one coordinate system to another.
FME (default) or Esri

Library-Specific Reprojection Transformers (Recommended)
Related Transformers: LocalCoordinateSystemSetter, Reprojector"
169;dd9834af-053a-4369-9645-6327d2dd38f0;"Name: RasterPropertyExtractor
Category: Calculated Values, Rasters
Description: Name: RasterPropertyExtractor Category: Calculated Values, Rasters Description: How does it work?

The RasterPropertyExtractor receives raster features, and extracts basic information about their geometry. The results are added as attributes, and output with the original feature.
The transformer has no parameters.
Property attributes include:
_num_bands_num_rows_num_columns_spacing_x_spacing_y_origin_x_origin_y_rotation_x_rotation_y_min_x_min_y_max_x_max_y_cell_origin_x_cell_origin_y_upper_left_x_upper_left_y_upper_right_x_upper_right_y_lower_right_x_lower_right_y_lower_left_x_lower_left_y
This transformer is unaffected by raster band and palette selection.

Examples

In this example, we will extract the geometry properties of an orthoimage. Note that the source raster feature has 13 typical attributes. Some geometry properties can be seen in the Feature Information window of theFME Data Inspector(underIFMERaster), but are not exposed in a usable attribute form.

The raster is routed into a RasterPropertyExtractor.

There are no parameter settings in this transformer. The raster is output, with new attributes exposed containing properties.
Related Transformers: RasterBandMinMaxExtractor, RasterBandPropertyExtractor, RasterStatisticsCalculator"
170;6c053296-2b55-4d0d-9341-67bd59a7164f;"Name: AzureIoTConnector
Category: Web
Description: Name: AzureIoTConnector Category: Web Description: provides a convenient way to construct text strings (including regular expressions) from various data sources, such as attributes, parameters, and constants, where the result is used directly inside a parameter.
Text Editor

Using the Arithmetic Editor

The Arithmetic Editor provides a convenient way to construct math expressions from various data sources, such as attributes, parameters, and feature functions, where the result is used directly inside a parameter.
Arithmetic Editor

Conditional Values

Set values depending on one or more test conditions that either pass or fail.
Parameter Condition Definition Dialog

Content

Expressions and strings can include a number of functions, characters, parameters, and more.
When setting values - whether entered directly in a parameter or constructed using one of the editors - strings and expressions containing String, Math, Date/Time or FME Feature Functions will have those functions evaluated. Therefore, the names of these functions (in the form @<function_name>) should not be used as literal string values.
String Functions
Special Characters
Math Functions
Math Operators
FME Feature Functions
FME Parameters

Dialog Options - Tables

Transformers with table-style parameters have additional tools for populating and manipulating values.
Row Reordering

Enabled once you have clicked on a row item. Choices include:
Cut, Copy, and Paste

Enabled once you have clicked on a row item. Choices include:
Cut, copy, and paste may be used within a transformer, or between transformers.
Filter

Import

Reset/Refresh

Generally resets the table to its initial state, and may provide additional options to remove invalid entries. Behavior varies between transformers.
Note:Not all tools are available in all transformers.

Reference

Processing Behavior
Feature-Based
Feature Holding
No

FME Community

TheFME Communityis the place for demos, how-tos, articles, FAQs, and more. Get answers to your questions, learn from other users, and suggest, vote, and comment on new features.
Search forall results about the AzureIoTConnectoron theFME Commun
Related Transformers: AWSIoTConnector, AzureEventHubsConnector, AzureQueueStorageConnector, GoogleIoTConnector, IBMIoTConnector, GoogleCloudPubSubConnector, KafkaConnector, MQTTConnector, SQSConnector"
171;9a4c1c83-090d-4351-91e1-38038eb54783;"Name: SpatialSorter
Category: Spatial Analysis, Workflows
Description: Name: SpatialSorter Category: Spatial Analysis, Workflows Description: ing values.
Row Reordering

Enabled once you have clicked on a row item. Choices include:
Cut, Copy, and Paste

Enabled once you have clicked on a row item. Choices include:
Cut, copy, and paste may be used within a transformer, or between transformers.
Filter

Import

Reset/Refresh

Generally resets the table to its initial state, and may provide additional options to remove invalid entries. Behavior varies between transformers.
Note:Not all tools are available in all transformers.

Reference

Processing Behavior
Group-Based
Feature Holding
Yes

FME Community

TheFME Communityis the place for demos, how-tos, articles, FAQs, and more. Get answers to your questions, learn from other users, and suggest, vote, and comment on new features.
Search forall results about the SpatialSorteron theFME Community.

Examples may contain information licensed under the Open Government Licence – Vancouver and/or the Open Government Licence – Canada.
Related Transformers: ListSorter, Sorter"
172;3a15b0bb-0490-415c-974b-d0f30b5fa739;"Name: RasterTiler
Category: Rasters
Description: Name: RasterTiler Category: Rasters Description: alette key that matches a raster band’s Nodata value, and sets a value on it.
RasterPaletteRemover
Removes selected palette(s) from raster features.
RasterPaletteResolver
Resolves the palette(s) on a raster by replacing cell values with their corresponding palette values. Palette values with multiple components, such as RGB, are broken down and the individual values assigned to multiple, newly-added bands.

Workflow Control

RasterCheckpointer
Forces accumulated raster operations to be processed, saving the state to disk and releasing resources to tune performance or assist with memory limitations.
RasterConsumer
Reads raster features for testing purposes, including any accumulated raster operations. No additional operations are performed, and nothing is done with the features.
RasterExtractor
Serializes the geometry of a raster feature into a Blob attribute, encoding the contents according to a choice of common binary raster formats.
RasterNumericCreator
Creates a numeric raster of specified size and resolution, with default cell values.
RasterReplacer
Decodes a binary attribute containing encoded rasters stored as Blobs, replacing the feature’s geometry with the decoded raster.
RasterRGBCreator
Creates a color raster feature of specified size, resolution, and interpretation type, with default cell values.
RasterSelector
Selects specific bands and palettes of a raster for subsequent transformer operations.

Vectors and Rasters

ImageRasterizer
Creates a raster representation of vector or point cloud input features, using the fme_color attribute over a solid background fill for vector features. Point clouds may be rendered using their color or intensity components.
NumericRasterizer
Creates a numeric raster representation of vector or point cloud input features, where cell values are taken from the z coordinates of the input features and overlaid on a uniform background.
MapnikRasterizer
Generates a raster from input vector and raster features, with fine control over symbolization and labeling, using the Mapnik toolkit.
PointCloudOnRasterComponentSetter
Sets po
Related Transformers: Clipper, RasterMosaicker, RasterSubsetter, Tiler, WebMapTiler"
173;5941f467-41c7-4d87-975a-e81973201e04;"Name: ConvexityFilter
Category: Data Quality, Filters and Joins
Description: Name: ConvexityFilter Category: Data Quality, Filters and Joins Description: Usage Notes
Related Transformers: HullAccumulator, HullReplacer"
174;c281d61e-cebe-4e1a-8b2c-80e3a8c78f02;"Name: HullReplacer
Category: Geometries
Description: Name: HullReplacer Category: Geometries Description: ables

Transformers with table-style parameters have additional tools for populating and manipulating values.
Row Reordering

Enabled once you have clicked on a row item. Choices include:
Cut, Copy, and Paste

Enabled once you have clicked on a row item. Choices include:
Cut, copy, and paste may be used within a transformer, or between transformers.
Filter

Import

Reset/Refresh

Generally resets the table to its initial state, and may provide additional options to remove invalid entries. Behavior varies between transformers.
Note:Not all tools are available in all transformers.

Reference

Processing Behavior
Feature-Based
Feature Holding
No

FME Community

TheFME Communityis the place for demos, how-tos, articles, FAQs, and more. Get answers to your questions, learn from other users, and suggest, vote, and comment on new features.
Search forall results about the HullReplaceron theFME Community.

Examples may contain information licensed under the Open Government Licence – Vancouver and/or the Open Government Licence – Canada.
Related Transformers: 2DBoxReplacer, BoundingBoxAccumulator, BoundingBoxReplacer, BoundsExtractor, HullAccumulator, MinimumSpanningCircleReplacer, RasterExtentsCoercer"
175;47772411-1fe3-4787-9659-7c5cbd1dc5bb;"Name: XMLUpdater
Category: 
Description: Name: XMLUpdater Category:  Description: e replaced with their contents. That is, the node will be removed but the node's children and text content will remain.
Delete
Each of the items referred to by the XML Path parameter will be removed from the document.
Delete contents
The contents of the items referred to by the XML Path parameter will be removed from the document.  If the path refers to an element, all child elements and text content of referred elements will be deleted, while attributes will be unmodified.  If the path refers to an attribute, its value will be removed.
Rename
The element or attribute referred to by the path will be renamed.  Note that if the Value Type  parameter is XML/XQuery, then the XQuery expression in the Value parameter should evaluate to a string or a QName object.
Insert as first child
The value given in the Value parameter will be inserted as the first child of each element referred to by the XML Path parameter.
Insert as last child
The value given in the Value parameter will be inserted as the last child of each element referred to by the XML Path parameter.
Insert as previous sibling
The value given in the Value parameter will be inserted into the parent element of each item referred to by the XML Path parameter.  It will appear immediately before the referred item.
Insert as next sibling
The value given in the Value parameter will be inserted into the parent element of each item referred to by the XML Path parameter.  It will appear immediately after the referred item.
XML Path
This parameter specifies the location of the XML nodes which are to be updated.  Any XQuery expression may be used here, as long as it returns nodes contained in the input document.  If the path expression evaluates to more than one item, they will all be modified.
The simplest parameter value is a path expression, for example:
/data/record/name
With this path expression, the transformer will modify every <name> element which is contained in a <record> element which is contained in a root <data> element.  A predicate may be used to narrow down this selection.  For example, to modify
Related Transformers: "
176;e98211b0-ade1-4dd3-a91e-2b71acb7c4a9;"Name: PointCloudCreator
Category: Point Clouds
Description: Name: PointCloudCreator Category: Point Clouds Description: luding regular expressions) from various data sources, such as attributes, parameters, and constants, where the result is used directly inside a parameter.
Text Editor

Using the Arithmetic Editor

The Arithmetic Editor provides a convenient way to construct math expressions from various data sources, such as attributes, parameters, and feature functions, where the result is used directly inside a parameter.
Arithmetic Editor

Conditional Values

Set values depending on one or more test conditions that either pass or fail.
Parameter Condition Definition Dialog

Content

Expressions and strings can include a number of functions, characters, parameters, and more.
When setting values - whether entered directly in a parameter or constructed using one of the editors - strings and expressions containing String, Math, Date/Time or FME Feature Functions will have those functions evaluated. Therefore, the names of these functions (in the form @<function_name>) should not be used as literal string values.
String Functions
Special Characters
Math Functions
Math Operators
FME Feature Functions
FME Parameters

Dialog Options - Tables

Transformers with table-style parameters have additional tools for populating and manipulating values.
Row Reordering

Enabled once you have clicked on a row item. Choices include:
Cut, Copy, and Paste

Enabled once you have clicked on a row item. Choices include:
Cut, copy, and paste may be used within a transformer, or between transformers.
Filter

Import

Reset/Refresh

Generally resets the table to its initial state, and may provide additional options to remove invalid entries. Behavior varies between transformers.
Note:Not all tools are available in all transformers.

Reference

Processing Behavior
Feature-Based
Feature Holding
No

FME Community

TheFME Communityis the place for demos, how-tos, articles, FAQs, and more. Get answers to your questions, learn from other users, and suggest, vote, and comment on new features.
Search forall results about the PointCloudCreatoron theFME Community.

Examples may contain information licensed under the Open Go
Related Transformers: 2DGridCreator, Creator, RasterNumericCreator, RasterRGBCreator"
177;4e4e1e25-18dd-4ff5-ab8a-baa84a372107;"Name: NLPTrainer
Category: Filters and Joins, Strings
Description: Name: NLPTrainer Category: Filters and Joins, Strings Description: Features
Allows the user to tell the NLPTrainer what information about the text to take into account. Different NLP feature specifications will produce different models, which may vary considerably in their accuracy.
Number of Characters to Track
The number of characters from the beginning of each text to consider when creating the model. For example, if this value is 2, the first 2 characters of each text will be noted by the model.
Format attribute set:_nlp_chars_from_beginning
Number of Words to Track
This parameter decides how many common words from the training corpus to keep track of. The words selected will always be the most common ones. For example, if the value is 500, the NLPTrainer will determine the 500 most common words throughout the training corpus and the model will pay attention to whether each of these words is used in each text.
Format attribute set:_nlp_number_words
Words to Ignore
This parameter, together with the next, allows the user to specify words that, however common, should not be tracked by the model. This is helpful, for example, for ignoring “stopwords”, words that are expected to be common throughout the texts regardless of category. This parameter offers a dropdown choice between no stopwords, FME’s list of English-language stopwords, or a custom list.
Format attribute set:_nlp_stopwords
Custom Stopword List Filename
If using a custom list of stopwords, or words to ignore, this parameter supplies the filepath for that list. The NLPTrainer expects this to be a newline-delimited plain text (*.txt) file.
Format attribute set:_nlp_stopwords_filename
Expression to Match
This parameter provides a regular expression. When used, the model will track whether a text contains a match for this regular expression.
Format attribute set:_nlp_regex
String
When used, this NLP feature specification will cause the model to track whether each text contains the provided string.
Format attribute set:_nlp_contains_substring
Number of Characters to Track
The number of characters from the end of each text to consider when creating the model. For example, if this value i
Related Transformers: AzureTextAnalyticsConnector, NLPClassifier"
178;82578cb9-9098-4f2e-8f26-203dc84459f1;"Name: GoogleBigQueryConnector
Category: Web
Description: Name: GoogleBigQueryConnector Category: Web Description: Input Ports

This transformer accepts any feature.

Output Ports

The output of this transformer will vary depending on theRequest > Actionperformed.
_project_id
Name of the project_id loaded into.
_table
Name of the table loaded into.
_dataset
Name of the dataset loaded into.
_rows_written
Number of rows written to the specified table in the dataset.
The incoming feature is output through this port.
Features that cause the operation to fail are output through this port. Anfme_rejection_codeattribute, will be added, along with a more descriptivefme_rejection_messageattribute which contains more specific details as to the reason for the failure.
Rejected Feature Handling:can be set to either terminate the translation or continue running when it encounters a rejected feature. This setting is available both as a defaultFME optionand as aworkspace parameter.

Parameters

Credential Source
Credentials can be used from different sources. Using a web connection integrates best with FME but in some cases, you may wish to use one of the other sources.
Account
Available when the credential source is Web Connection. To create a Google BigQuery web connection, click the Account drop-down box and select Add Web Connection.
The connection can then be managed via Tools > FME Options > Web Connections.
Project ID
The Google Cloud project id. Only required when the credential source is Web Connection.
Action
The type of operation to perform. Choices include:

Data Source

Load Source
Select the type of source data to be loaded:
File to Load
IfLoad SourceisFile, specify the location and name of the file to be loaded.
Bucket
IfLoad SourceisGoogle Storage, specify the Google storage bucket.
Path
IfLoad SourceisGoogle Storage, specify the Google storage path.
File Type
Only CSV is supported at this time.
Header Rows to Skip
For CSV files, specify the number of rows to skip at the top of the file.
For example, if the file contains a single-line header, enter1.
Auto Detect Schema
IfYes,BigQuery will at best effort detect and set the data types of your data.
IfNo, Defined Schema will be used.
Related Transformers: AmazonAthenaConnector, GoogleCloudPubSubConnector, GoogleCloudStorageConnector, GoogleDriveConnector, GoogleLanguageConnector, GoogleVisionConnector"
179;3c270ab4-7c69-4c38-86c8-171181f304d7;"Name: AutodeskBIM360DocsConnector
Category: Integrations, Web, Workflows
Description: Name: AutodeskBIM360DocsConnector Category: Integrations, Web, Workflows Description:  Characters
Math Functions
Math Operators
FME Feature Functions
FME Parameters

Dialog Options - Tables

Transformers with table-style parameters have additional tools for populating and manipulating values.
Row Reordering

Enabled once you have clicked on a row item. Choices include:
Cut, Copy, and Paste

Enabled once you have clicked on a row item. Choices include:
Cut, copy, and paste may be used within a transformer, or between transformers.
Filter

Import

Reset/Refresh

Generally resets the table to its initial state, and may provide additional options to remove invalid entries. Behavior varies between transformers.
Note:Not all tools are available in all transformers.

Reference

Processing Behavior
Feature-Based
Feature Holding
No

FME Community

TheFME Communityis the place for demos, how-tos, articles, FAQs, and more. Get answers to your questions, learn from other users, and suggest, vote, and comment on new features.
Search forall results about the AutodeskBIM360DocsConnectoron theFME Community.

Examples may contain information licensed under the Open Government Licence – Vancouver and/or the Open Government Licence – Canada.
Related Transformers: GoogleDriveConnector, SharePointOnlineConnector, S3Connector"
180;a89a39fb-8fc3-42be-ab0c-bf83ef360d69;"Name: GeometryCoercer
Category: Geometries, Point Clouds
Description: Name: GeometryCoercer Category: Geometries, Point Clouds Description: types, or definition reference. The syntax used is a restricted set of XQuery, where the return clause is fixed.
The basic Geometry  XQuery dialog allows you to construct simple selection queries by automatically writing the necessary query based on specified test clauses. Clicking the Switch to Advanced button opens the Advanced Editor, which allows you to type a query free-form, for more expressive queries.
A hierarchical geometry is represented as nodes of type geometry, with attributes containing information about traits, type, and name for each geometry.
The default criteria are set to coerce only the top level of passed in geometries.

Editing Transformer Parameters

Using a set of menu options, transformer parameters can be assigned by referencing other elements in theworkspace. More advanced functions, such as an advanced editor and an arithmetic editor, are also available in some transformers. To access a menu of these options, clickbeside the applicable parameter. For more information, seeTransformer Parameter Menu Options.

Defining Values

There are several ways to define a value for use in a Transformer. The simplest is to simply type in a value or string, which can include functions of various types such as attribute references, math and string functions, andworkspaceparameters. There are a number of tools and shortcuts that can assist in constructing values, generally available from the drop-down context menu adjacent to the value field.

Using the Text Editor

The Text Editor provides a convenient way to construct text strings (including regular expressions) from various data sources, such as attributes, parameters, and constants, where the result is used directly inside a parameter.
Text Editor

Using the Arithmetic Editor

The Arithmetic Editor provides a convenient way to construct math expressions from various data sources, such as attributes, parameters, and feature functions, where the result is used directly inside a parameter.
Arithmetic Editor

Conditional Values

Set values depending on one or more test conditions that either pass or fail.
Parameter Condit
Related Transformers: "
181;31bb0bdd-86ad-46db-85b2-e73dff67e832;"Name: KMLPropertySetter
Category: Cartography and Reports
Description: Name: KMLPropertySetter Category: Cartography and Reports Description: ers with table-style parameters have additional tools for populating and manipulating values.
Row Reordering

Enabled once you have clicked on a row item. Choices include:
Cut, Copy, and Paste

Enabled once you have clicked on a row item. Choices include:
Cut, copy, and paste may be used within a transformer, or between transformers.
Filter

Import

Reset/Refresh

Generally resets the table to its initial state, and may provide additional options to remove invalid entries. Behavior varies between transformers.
Note:Not all tools are available in all transformers.

FME Community

TheFME Communityis the place for demos, how-tos, articles, FAQs, and more. Get answers to your questions, learn from other users, and suggest, vote, and comment on new features.
Search forall results about the KMLPropertySetteron theFME Community.
Keywords: ""Google Earth"" KML
Related Transformers: "
182;94508f30-e311-46ab-af11-8c57db7c7bc5;"Name: HTMLExtractor
Category: Integrations, Strings, Web, Workflows
Description: Name: HTMLExtractor Category: Integrations, Strings, Web, Workflows Description: his transformer would automatically disable HTTPS Certificate verification when an SSL Error was received from the server. Now, this behavior must be explicitly enabled or disabled by this parameter.
The value of this parameter takes priority over the value of theVerify HTTPS Certificatesparameter which might be defined by the Web Connection used with this transformer.

Editing Transformer Parameters

Using a set of menu options, transformer parameters can be assigned by referencing other elements in theworkspace. More advanced functions, such as an advanced editor and an arithmetic editor, are also available in some transformers. To access a menu of these options, clickbeside the applicable parameter. For more information, seeTransformer Parameter Menu Options.

Defining Values

There are several ways to define a value for use in a Transformer. The simplest is to simply type in a value or string, which can include functions of various types such as attribute references, math and string functions, andworkspaceparameters. There are a number of tools and shortcuts that can assist in constructing values, generally available from the drop-down context menu adjacent to the value field.

Using the Text Editor

The Text Editor provides a convenient way to construct text strings (including regular expressions) from various data sources, such as attributes, parameters, and constants, where the result is used directly inside a parameter.
Text Editor

Using the Arithmetic Editor

The Arithmetic Editor provides a convenient way to construct math expressions from various data sources, such as attributes, parameters, and feature functions, where the result is used directly inside a parameter.
Arithmetic Editor

Conditional Values

Set values depending on one or more test conditions that either pass or fail.
Parameter Condition Definition Dialog

Content

Expressions and strings can include a number of functions, characters, parameters, and more.
When setting values - whether entered directly in a parameter or constructed using one of the editors - strings and expressions containing String, Math, Date/Time 
Related Transformers: HTTPCaller"
183;7fa95b19-e8e0-416b-a733-fe2d6d4e983b;"Name: AffineWarper
Category: Geometries, Spatial Analysis
Description: Name: AffineWarper Category: Geometries, Spatial Analysis Description: Performs warping operations on the spatial coordinates of features. It is used to adjust a set of observed input features according to a spatial transform defined by a set of control vectors.This transformer computes an affine (scale, 
 rotation, and offset) transformation based onControlvector features and applies this transformation to theObservedfeatures to generate output, 
 and produces good corrections when the entire set ofObserveddata requires a single transformation.
EachControlfeature represents a control vector (a 2-point line feature) whose start point is at some location in the originalObserveddata space, and whose end point is at the corresponding location in the desired output data space. Each control vector represents the correction required to go from the observed vertex to the desired vertex, in terms of direction and distance. Control vectors with only one point are interpreted as a requirement that this location not change from the observed dataset to the reference dataset. This is often referred to as a tie point.
Control vectors can be stored in a dataset of any format and read into FME, or generated directly in an FMEworkspace, which is often the case when the vectors are not known in advance and must be generated from incoming data.

Usage Notes
Related Transformers: "
184;350b7569-6f44-4dec-af9d-970f2bad8bad;"Name: ListDuplicateRemover
Category: Data Quality, Strings
Description: Name: ListDuplicateRemover Category: Data Quality, Strings Description: Removes all duplicate values from a list attribute.In the resulting 
 list, only distinct values for the list attribute will be present.
When looking for duplicates, null, missing and empty values are considered equivalent so will be treated as duplicates of each other. The first null, missing or empty string value will be kept.
If there were other attributes in the list “parallel” to the attribute being operated on, these will also be moved in the list to stay in “parallel” with the key attribute. Similarly, if there were other attributes in the list “parallel” to an entry that is a duplicate (so will be removed), those attributes will also be removed.
For matching purposes, a list entry is considered ‘missing’, only if it has a parallel attribute.  For example, iflist{0}.aexists, thenlist{0}.bwill be considered missing.  However if there are nolist{0}entries, thenlist{0}.bwill not be considered missing.  It rather will be considered to represent a ‘gap’ in the list.

Example

If this feature enters this transformer:
somelist{0}.kind = 'paved'
somelist{1}.kind = 'smooth'
somelist{2}.kind = 'smooth'
somelist{3}.kind = 'rough'
somelist{4}.kind = 'smooth'
somelist{5}.kind = 'smooth'
somelist{6}.kind = 'paved'
somelist{8}.kind = <Null>
and 
 the list name is set tosomelist{}.kind, the feature leaving 
 the transformer will have these attributes:
somelist{0}.kind 
 = 'paved'
somelist{1}.kind = 'smooth'
somelist{2}.kind 
 = 'rough'
somelist{3}.kind = <Null>
As another example, if the input feature had these attributes:
somelist{0}.kind = 'paved'
somelist{0}.id = 'A3'
somelist{1}.kind = 'smooth'
somelist{1}.id = 'B7'
somelist{2}.kind = 'smooth'
somelist{2}.id = 'B8'
somelist{3}.kind = 'rough'
somelist{3}.id = 'C9'
somelist{4}.kind = 'smooth'
somelist{4}.id = 'B9'
somelist{5}.kind = 'smooth'
somelist{5}.id = 'B2'
somelist{6}.kind = 'paved'
somelist{6}.id = 'A7'
and the list name is set tosomelist{}.kind, the feature leaving the 
 transformer will have these attributes:
somelist{0}.kind 
 = 'paved'
somelist{0}.id = 'A3'
somelist{1}.kind = 'smooth'
somelist{1}.id = 'B7'
somelist{2}.kind = 'ro
Related Transformers: "
185;2e07ba03-2029-4f54-9234-47510fc63033;"Name: SpatialSorter
Category: Spatial Analysis, Workflows
Description: Name: SpatialSorter Category: Spatial Analysis, Workflows Description: How does it work?

The SpatialSorter receives features and sorts them based on their location. Output features are ordered so that features appearing consecutively in the output order were spatially located near each other in the input.
Features may be sorted in either 2D or 3D.

Note that a difference in the order of the input features can produce slightly varying output order results when there are multiple possible partition points with the same median coordinate values in the group.

Hilbert sort in 2D

The sorting location used for each geometry is the center of its bounding box. Geometries with no coordinates are output last.
Related Transformers: ListSorter, Sorter"
186;cee4e897-43fb-4dce-b7ce-af14689c285a;"Name: VertexRemover
Category: Coordinates, Geometries
Description: Name: VertexRemover Category: Coordinates, Geometries Description: sed
Feature Holding
No

FME Community

TheFME Communityis the place for demos, how-tos, articles, FAQs, and more. Get answers to your questions, learn from other users, and suggest, vote, and comment on new features.
Search forall results about the VertexRemoveron theFME Community.

Examples may contain information licensed under the Open Government Licence – Vancouver and/or the Open Government Licence – Canada.
Related Transformers: CoordinateExtractor, GeometryRemover, SpikeRemover, VertexCounter, VertexCreator"
187;7014e446-cfc2-4848-8c5d-28581532b229;"Name: SharePointOnlineConnector
Category: Integrations, Web, Workflows
Description: Name: SharePointOnlineConnector Category: Integrations, Web, Workflows Description: How does it work?

The SharePointOnlineConnector uses your SharePoint Online account credentials (either via a previously defined FME web connection, or by setting up a new FME web connection right from the transformer) to access the file storage service.
Depending on your choice of actions, it will upload or download files, folders, and attributes; list information from the service; or delete items from the service. On Upload and List actions, links and file/folder information are added to the output features as attributes.

Authentication

The SharePointOnlineConnector uses an oauth web service defined FME web connection.  It is recommended to create a new web connection using the Microsoft SharePoint Online (safe.microsoft-sharepoint) web service.  It is also recommended to replace the included FME app client with your own defined oauth application by updating the client id and secret in SharePoint Online (safe.microsoft-sharepoint).
SharePoint supports only work or school Microsoft accounts.

Usage Notes
Related Transformers: GoogleDriveConnector, OneDriveConnector, S3Connector"
188;ca06bcfc-e15a-414c-b799-3df72765eac1;"Name: WebMapTiler
Category: Cartography and Reports
Description: Name: WebMapTiler Category: Cartography and Reports Description: Usage Notes
Related Transformers: Clipper, RasterMosaicker, RasterPyramider, RasterSubsetter, Tiler"
189;e7967915-7bce-45f1-ae93-ce912d11fc08;"Name: KMLViewSetter
Category: Cartography and Reports
Description: Name: KMLViewSetter Category: Cartography and Reports Description: Parameters

Longitude, Latitude, Altitude
These parameters specify a location associated with the View Type parameter.
Altitude Mode
Specifies how KML Viewers, such as Google Earth, should interpret the altitude value.
View Type
If the View Type is LookAt, this location is the focal point of the view (where the view is looking at). In most cases, this is the view type you will choose. If you determine, for whatever reason, that it is too limiting, you can set the view type to Camera.
If the View Type is Camera, this location is the location of the camera (where the view is looking from).
Heading
Heading specifies the rotation, in degrees, of the view around the Z axis, relative to North.
Tilt
Tilt specifies the rotation, in degrees, of the view around the X axis. A value of 0 indicates that the view is aimed straight down, and a value of 90 indicates that the view is aimed toward the horizon.
Values greater than 90 only apply if the View Type is Camera, and indicate that the view is pointed towards the sky.
Roll
Roll specifies the rotation, in degrees, of the view around the Z axis, after the Heading and Tilt rotations have been applied. This value only applies to Camera views, and is generally not necessary.
Range
Range specifies the distance, in meters, that the view location is viewed from. This value only applies to LookAt view types.
The parameters in the Time section allow the view to be active at a specific point or period of time.
Type
This parameter determines the type of KML time primitive that will be created. Possible options include Timestamp and Time Period. Select ‘None’ if you don’t wish to associate a time with the view.
Timestamp
This parameter specifies the value of the timestamp if the time type is Timestamp. The value can either be in the FME DateTime format, or the XML Schema time format.
Period Start
This parameter specifies the beginning of the time period if TimePeriod is the selected time type. The value can either be in the FME DateTime format, or the XML Schema time format.
Period End
This parameter specifies the optional end of the time period if Tim
Related Transformers: "
190;c9aaeb6c-a09c-4b5e-85e6-89f64181eeff;"Name: PROJAttributeReprojector
Category: Coordinates, Integrations
Description: Name: PROJAttributeReprojector Category: Coordinates, Integrations Description: system than PROJ strings, and so are the preferred definition types.

Geographic Transformations and Grids

Geographic Transformations control how coordinates are converted between different datums.
For anAutomatic Transformation, FME will attempt to select an appropriate transformation between theSourceandDestinationcoordinate systems.
Manual Transformationsare performed as specified in theManual Transformation Parameters.

Grid-Based Datum Adjustments

Some areas use grid shift files for datum conversion.
Many grids needed by PROJ are included with FME, and additional grids may be downloaded from thePROJ website.
PROJ will generally search for an appropriate grid to use, although specific paths or URLS may be specified in a transformation definition.
Grid shift files can be stored locally if preferred.
The PROJ website’sDownloadpage includes grids, in archives namedproj-data*.*To use them:
Download aproj-dataarchive. TheCurrent Releaseversion is generally appropriate. Donotuse the olderproj-datumgrid*.*archives.
Extract the archive’s contents to theProjDatadirectory (or a subdirectory thereof) in the FME user directory, per operating system:~/.fme/ProjDataon Linux~/Library/Application Support/FME/ProjDataon macOSDocuments/FME/ProjDataon Windows
Grids added in this way will be considered before online grids (if enabled). They will also be considered first in order of preference, unless an absolute or relative path or URL is specified in the transformation definition.
FME can also access PROJ grids online atcdn.proj.org.
Online access may be enabled or disabled via theFME Formmenu -Tools > FME Options > Coordinate Systems:
Online Grids Enabled
When enabled, PROJ in FME will search the specifiedCDN Endpointfor appropriate grids if necessary and according to the order of preference.
Default isEnabled.
Maximum Cache Size (MB)
Default is-1(Unlimited).
Optionally, specify a maximum size in Megabytes allotted for caching grids.
CDN Endpoint
Specify a URL to access for grids.
The default is provided by PROJ:
https://cdn.proj.org
PROJ will look for an appropriate grid, which can be accessed in a num
Related Transformers: AttributeReprojector, CommonLocalReprojector, CsmapAttributeReprojector, CsmapReprojector, EsriReprojector, GridInQuestIIReprojector, GtransAttributeReprojector, GtransReprojector, PROJReprojector, ReframeReprojector, ReprojectAngleCalculator, ReprojectLengthCalculator, Reprojector"
191;305d36d3-e64a-4457-9761-914a955fb9cd;"Name: PythonCaller
Category: Workflows
Description: Name: PythonCaller Category: Workflows Description: ssions) from various data sources, such as attributes, parameters, and constants, where the result is used directly inside a parameter.
Text Editor

Using the Arithmetic Editor

The Arithmetic Editor provides a convenient way to construct math expressions from various data sources, such as attributes, parameters, and feature functions, where the result is used directly inside a parameter.
Arithmetic Editor

Conditional Values

Set values depending on one or more test conditions that either pass or fail.
Parameter Condition Definition Dialog

Content

Expressions and strings can include a number of functions, characters, parameters, and more.
When setting values - whether entered directly in a parameter or constructed using one of the editors - strings and expressions containing String, Math, Date/Time or FME Feature Functions will have those functions evaluated. Therefore, the names of these functions (in the form @<function_name>) should not be used as literal string values.
String Functions
Special Characters
Math Functions
Math Operators
FME Feature Functions
FME Parameters

Dialog Options - Tables

Transformers with table-style parameters have additional tools for populating and manipulating values.
Row Reordering

Enabled once you have clicked on a row item. Choices include:
Cut, Copy, and Paste

Enabled once you have clicked on a row item. Choices include:
Cut, copy, and paste may be used within a transformer, or between transformers.
Filter

Import

Reset/Refresh

Generally resets the table to its initial state, and may provide additional options to remove invalid entries. Behavior varies between transformers.
Note:Not all tools are available in all transformers.

Reference

Processing Behavior
Feature-BasedorGroup-Based, conditional on Python script
Feature Holding
Conditional on Python script
An FME installation includes a Python version 2.7 and Python version 3.5 interpreter.  The default Python interpreter used for Python processing is the Python 2.7 interpreter.  The FME Objects Python API supports Python 2.7, Python 3.4, and Python 3.5.
The Python int
Related Transformers: PythonCreator, RCaller"
192;4742b552-2a66-487b-aee5-c58abcc024fd;"Name: RasterBandKeeper
Category: Rasters
Description: Name: RasterBandKeeper Category: Rasters Description: Removes all unselected bands from a raster feature.
Jump to Configuration

Typical Uses
Related Transformers: RasterBandAdder, RasterBandCombiner, RasterBandRemover, RasterBandSeparator"
193;4722f580-0fc4-4443-9242-ff416437b528;"Name: RasterRegisterer
Category: Rasters
Description: Name: RasterRegisterer Category: Rasters Description: nterval in which a line search is performed to find a learning rate is determined by multiplying the current learning rate value by this number.
For example, if for one iteration the learning rate is 5, and the minimum learning rate multiplier is 1.5, the learning rate in the next iteration will be somewhere between the minimum and 7.5.
When both the Maximum and the Minimum learning rate are set to 1, this optimizer behaves like a regular gradient descent optimizer.
Positive floating-point value. Default: 20.
Required
Line Search Tolerance
Control the accuracy of the line search.
Positive floating-point value. Default: 0.2.
Required
Termination Conditions
Convergence Window
Look back at this many iterations to check for convergence.
Positive integer. Default: 10.
Required
Convergence Value Tolerance
Coefficient that determines the sensitivity of the convergence checker.
Floating-point value. Default: 1e-6.
Required
Iterations Without Progress
Halt if the metric hasn’t improved in this many iterations.
Positive integer. Default: 30.
Required
Max Iterations
Halt after this number of iterations.
Positive integer. Default: 1500.
Required
Termination Conditions
Transformation Tolerance
Halt when the magnitude of the changes to the transformation parameters are less than this value.
Non negative floating-point value. Default: 1e-5.
Required
Metric Tolerance
Halt when the change in the metric is less than this value.
Non negative floating-point value. Default: 1e-5.
Required
Max Iterations
Halt after this number of iterations.
Positive integer. Default: 1500.
Required
Optimization Parameters
On Convergence
Terminate(Default): End the Optimization process once the termination conditions are met.
Restart: Restart the optimization process with a simplex with edges of half the size.
Required
Termination Conditions
Max Iterations
Halt after this number of iterations.
Positive integer. Default: 1500.
Required
Optimization Parameters
Initial Search Radius
Set the initial search radius.
The Search radius determines how different transformation parameter solutions can be in between
Related Transformers: RasterExpressionEvaluator, RasterStatisticsCalculator, RasterSharpener, RasterSegmenter"
194;84337c71-1150-42f8-a1ee-95c4e4e57885;"Name: AttributeSplitter
Category: Attributes, Strings
Description: Name: AttributeSplitter Category: Attributes, Strings Description: aining points of interest, with postal addresses included as a single attribute. The parts of the addresses are separated by commas.
Unlike the first example (with a variable number of tree types), we do know how many parts these attributes should have.

In the parameters dialog, theDelimiteris set to comma (,), we will trim whitespace, and create a new list attribute calledAddress. Note thatDrop Empty Partsis set toNo- if part of an address is missing, dropping it would cause the other parts to end up in the wrong list element.

With the AttributeSplitter configured, theAddress{}list is now available in the transformer output. Right-click (context menu) on the list name, and we canExpose Elementsfrom the list.

List elements are numbered starting with zero (0). In theSelect List Elementsdialog, entering the range0-3will expose the four total list elements that make up the address.

With the list elements exposed and now accessible, anAttributeManageris used to rename them according to their content.

The output features now have individual address component attributes.

In this example, we have a dataset of crime incidents. TheDATETIMEattribute contains a string composed of date and time information, which we want to split into its component parts.

The features are routed into an AttributeSplitter. In the parameters dialog, we use aFormat Stringto split the attribute at defined character positions. The Format String uses a#s#s#sformat - integers defining the width of each part, separated by an “s” character.

After exposing all of the list elements, anAttributeManagerrenames them, and they are available as attributes.
Related Transformers: AttributeManager, StringConcatenator, StringFormatter, StringPairReplacer, StringReplacer, StringSearcher, SubstringExtractor"
195;c15e0de4-c936-4043-bb03-30ea3af6f606;"Name: BulkAttributeRenamer
Category: Attributes
Description: Name: BulkAttributeRenamer Category: Attributes Description: rom various data sources, such as attributes, parameters, and feature functions, where the result is used directly inside a parameter.
Arithmetic Editor

Conditional Values

Set values depending on one or more test conditions that either pass or fail.
Parameter Condition Definition Dialog

Content

Expressions and strings can include a number of functions, characters, parameters, and more.
When setting values - whether entered directly in a parameter or constructed using one of the editors - strings and expressions containing String, Math, Date/Time or FME Feature Functions will have those functions evaluated. Therefore, the names of these functions (in the form @<function_name>) should not be used as literal string values.
String Functions
Special Characters
Math Functions
Math Operators
FME Feature Functions
FME Parameters

Dialog Options - Tables

Transformers with table-style parameters have additional tools for populating and manipulating values.
Row Reordering

Enabled once you have clicked on a row item. Choices include:
Cut, Copy, and Paste

Enabled once you have clicked on a row item. Choices include:
Cut, copy, and paste may be used within a transformer, or between transformers.
Filter

Import

Reset/Refresh

Generally resets the table to its initial state, and may provide additional options to remove invalid entries. Behavior varies between transformers.
Note:Not all tools are available in all transformers.

Reference

Processing Behavior
Feature-Based
Feature Holding
No

FME Community

TheFME Communityis the place for demos, how-tos, articles, FAQs, and more. Get answers to your questions, learn from other users, and suggest, vote, and comment on new features.
Search forall results about the BulkAttributeRenameron theFME Community.

Examples may contain information licensed under the Open Government Licence – Vancouver and/or the Open Government Licence – Canada.
Related Transformers: AttributeCopier, AttributeCreator, AttributeKeeper, AttributeManager, AttributeRemover, AttributeRenamer, AttributeValueMapper, BulkAttributeRemover"
196;6e05fb10-ceaa-404a-90c6-8c9e7cdd3519;"Name: ParameterFetcher
Category: Web, Workflows
Description: Name: ParameterFetcher Category: Web, Workflows Description: Adds an attribute to the feature, supplying it the value of a previously 
 published parameter.
A parameter is a setting that you can pass values into when a translation 
 is run. Parameters usually relate to a setting on a reader or transformer. The ParameterFetcher can be used to copy the value of  one or more parameters
 to a corresponding number of attributes. The number of rows specified in the configuration dialog determine the number of exposed output attributes.

Configuration
Related Transformers: "
197;625ec29e-7da0-4ee2-ac84-855689db11ab;"Name: WebMapTiler
Category: Cartography and Reports
Description: Name: WebMapTiler Category: Cartography and Reports Description:  
 to the input band indices.
RasterBandPropertyExtractor
Extracts the band and palette properties of a raster feature and exposes them as attributes.
RasterBandRemover
Removes any selected bands from a raster feature.
RasterBandSeparator
Separates bands or unique band and palette combinations, and outputs either individual raster features or a single new raster feature containing all combinations.
RasterStatisticsCalculator
Calculates statistics on raster bands and adds the results as attributes.

Working with Cells

RasterAspectCalculator
Calculates the aspect (direction of slope) for each cell of a raster. Aspect is measured in degrees from 0 to 360, clockwise from north.
RasterCellCoercer
Creates individual points or polygons for each cell in a raster, optionally extracting band values as z coordinates or attributes.
RasterCellValueCalculator
Evaluates basic arithmetic , minimum, maximum or average operations on the cell values of a pair of rasters.
RasterCellValueReplacer
Replaces a range of band values in a raster with a new single value.
RasterCellValueRounder
Rounds off raster cell values.
RasterSegmenter
Partitions a raster image into arbitrarily sized groups of cells from the input image based on intensity differences in the input raster image cells.
RasterSingularCellValueCalculator
Performs basic arithmetic operations on the cell values of a raster against a numeric value.
RasterSlopeCalculator
Calculates the slope (maximum rate of change in z) for each cell of a raster.

Working with Palettes

RasterPaletteAdder
Creates a palette from an attribute, and adds this palette to all selected bands on a raster.
RasterPaletteExtractor
Creates a string representation of an existing palette on a raster and saves it to an attribute.
RasterPaletteGenerator
Generates a palette out of the selected band(s) of a raster. The output raster will have the selected band(s) replaced by a new band with a palette.
RasterPaletteInterpretationCoercer
Alters the interpretation type of raster palettes.
RasterPaletteNodataSetter
Identifies the palette key that matches a raster band’s Nodata v
Related Transformers: Clipper, RasterMosaicker, RasterPyramider, RasterSubsetter, Tiler"
198;fb719a1e-ba85-4525-9c86-25371ce54c4d;"Name: Category: Filters and Joins
Category: 
Description: 
Related Transformers: "
199;23ba211d-d499-48f1-b487-c4352d138eb7;"Name: AttributeRounder
Category: Calculated Values, Strings
Description: Name: AttributeRounder Category: Calculated Values, Strings Description: Configuration
Related Transformers: CoordinateRounder, DateTimeRounder, RasterCellValueRounder"
200;a5bf0837-0e07-4b55-8c11-57dae8ab33fe;"Name: PROJReprojector
Category: Coordinates, Integrations
Description: Name: PROJReprojector Category: Coordinates, Integrations Description:  location and the true cell location should be at most the tolerance value.
For example, if a value of 0.5 is specified, each approximated cell location should be maximum one-half of a pixel away from its true location. Increasing the Tolerance value may improve performance.

Editing Transformer Parameters

Using a set of menu options, transformer parameters can be assigned by referencing other elements in theworkspace. More advanced functions, such as an advanced editor and an arithmetic editor, are also available in some transformers. To access a menu of these options, clickbeside the applicable parameter. For more information, seeTransformer Parameter Menu Options.

Defining Values

There are several ways to define a value for use in a Transformer. The simplest is to simply type in a value or string, which can include functions of various types such as attribute references, math and string functions, andworkspaceparameters. There are a number of tools and shortcuts that can assist in constructing values, generally available from the drop-down context menu adjacent to the value field.

Using the Text Editor

The Text Editor provides a convenient way to construct text strings (including regular expressions) from various data sources, such as attributes, parameters, and constants, where the result is used directly inside a parameter.
Text Editor

Using the Arithmetic Editor

The Arithmetic Editor provides a convenient way to construct math expressions from various data sources, such as attributes, parameters, and feature functions, where the result is used directly inside a parameter.
Arithmetic Editor

Conditional Values

Set values depending on one or more test conditions that either pass or fail.
Parameter Condition Definition Dialog

Content

Expressions and strings can include a number of functions, characters, parameters, and more.
When setting values - whether entered directly in a parameter or constructed using one of the editors - strings and expressions containing String, Math, Date/Time or FME Feature Functions will have those functions evaluated. Therefore, the names of 
Related Transformers: AttributeReprojector, CommonLocalReprojector, CsmapAttributeReprojector, CsmapReprojector, EsriReprojector, GridInQuestIIReprojector, GtransAttributeReprojector, GtransReprojector, PROJAttributeReprojector, ReframeReprojector, ReprojectAngleCalculator, ReprojectLengthCalculator, Reprojector"
201;471216e5-d438-4e7a-b004-a6ea8659a6b6;"Name: ListSorter
Category: Attributes
Description: Name: ListSorter Category: Attributes Description: Input Ports

Features containing a list attribute to be sorted.

Output Ports

Features containing the sorted list attribute.

Parameters

List Attribute
The name of the list that will be sorted by this transformer.
Sorting Type
Sorting Order

Additional Resources

More Information on Lists

Editing Transformer Parameters

Using a set of menu options, transformer parameters can be assigned by referencing other elements in theworkspace. More advanced functions, such as an advanced editor and an arithmetic editor, are also available in some transformers. To access a menu of these options, clickbeside the applicable parameter. For more information, seeTransformer Parameter Menu Options.

Defining Values

There are several ways to define a value for use in a Transformer. The simplest is to simply type in a value or string, which can include functions of various types such as attribute references, math and string functions, andworkspaceparameters. There are a number of tools and shortcuts that can assist in constructing values, generally available from the drop-down context menu adjacent to the value field.

Using the Text Editor

The Text Editor provides a convenient way to construct text strings (including regular expressions) from various data sources, such as attributes, parameters, and constants, where the result is used directly inside a parameter.
Text Editor

Using the Arithmetic Editor

The Arithmetic Editor provides a convenient way to construct math expressions from various data sources, such as attributes, parameters, and feature functions, where the result is used directly inside a parameter.
Arithmetic Editor

Conditional Values

Set values depending on one or more test conditions that either pass or fail.
Parameter Condition Definition Dialog

Content

Expressions and strings can include a number of functions, characters, parameters, and more.
When setting values - whether entered directly in a parameter or constructed using one of the editors - strings and expressions containing String, Math, Date/Time or FME Feature Functions will have those functions
Related Transformers: Sorter, SpatialSorter"
202;5209b744-151b-4e19-b182-9652d8ab9b2d;"Name: TopologyBuilder
Category: Spatial Analysis
Description: Name: TopologyBuilder Category: Spatial Analysis Description: Usage Notes
Related Transformers: AreaOnAreaOverlayer, Bufferer, Clipper, Intersector, LineOnAreaOverlayer, LineOnLineOverlayer, NeighborFinder, PointOnAreaOverlayer, PointOnLineOverlayer, PointOnPointOverlayer, SpatialFilter, SpatialRelator"
203;82d0c448-2a2b-422c-a068-dcc57c2f198a;"Name: AttributeValueMapper
Category: Strings
Description: Name: AttributeValueMapper Category: Strings Description: How does it work?

The AttributeValueMapper is driven by a user-defined lookup table - theValue Map. OneInput Attributeis selected, which will have its values compared to the lookup table to map new values. The new values may be stored in a new attribute (default behavior), or can overwrite an existing attribute (including the Input Attribute).
TheValue Mapcan either be created manually or by importing any FME-supported dataset. Importing is particularly useful for using a predefined map that already contains theInputandOutput Values(such as a spreadsheet), and for scanning a dataset to find all existing values for a given attribute.
If an attribute value is not found in the Value Map, the new attribute will be assigned theDefault Output Value, which may be left blank.

Additional Value Settings

Default Output Value,Input Value, andOutput Valuecan be set to a fixed value, or can use an FME predefined value. In the case of Input and Output values, these may be set per line in the Value Map table, and so different attribute values may prompt different actions.
Values available are:
Null
Input Value: Input null values will be mapped to a output value.
Output Value: The source value will be mapped to a null output value.
The reverse is true ifMapping Directionis set toReverse (Output to Input).
No Action
No action will be taken. When mapping in-place (that is, if the new value is overwriting the input value), the input attribute value will be preserved.
Otherwise, no output attribute will be created for the input value specified.

Support for Null, Missing, and Empty String Values

When mapping from input to output, there are three attribute values that arenotsupported by theDefault Output Valueparameter or theValue Maptable. They are: missing, null, and empty string values. The exceptions are noted below.
It is possible to map or specify a default value of null by using the null constant, available on the parameter drop-down menu.

Further, it is possible to map a source value to a destination value of empty string, or to specify the empty string as the default value.
Not
Related Transformers: AttributeFilter, NullAttributeMapper"
204;f9c09fb7-c474-42fa-807d-c3d178047ffd;"Name: RasterBandNodataRemover
Category: Rasters
Description: Name: RasterBandNodataRemover Category: Rasters Description: ccording 
 to the input band indices.
RasterBandPropertyExtractor
Extracts the band and palette properties of a raster feature and exposes them as attributes.
RasterBandRemover
Removes any selected bands from a raster feature.
RasterBandSeparator
Separates bands or unique band and palette combinations, and outputs either individual raster features or a single new raster feature containing all combinations.
RasterStatisticsCalculator
Calculates statistics on raster bands and adds the results as attributes.

Working with Cells

RasterAspectCalculator
Calculates the aspect (direction of slope) for each cell of a raster. Aspect is measured in degrees from 0 to 360, clockwise from north.
RasterCellCoercer
Creates individual points or polygons for each cell in a raster, optionally extracting band values as z coordinates or attributes.
RasterCellValueCalculator
Evaluates basic arithmetic , minimum, maximum or average operations on the cell values of a pair of rasters.
RasterCellValueReplacer
Replaces a range of band values in a raster with a new single value.
RasterCellValueRounder
Rounds off raster cell values.
RasterSegmenter
Partitions a raster image into arbitrarily sized groups of cells from the input image based on intensity differences in the input raster image cells.
RasterSingularCellValueCalculator
Performs basic arithmetic operations on the cell values of a raster against a numeric value.
RasterSlopeCalculator
Calculates the slope (maximum rate of change in z) for each cell of a raster.

Working with Palettes

RasterPaletteAdder
Creates a palette from an attribute, and adds this palette to all selected bands on a raster.
RasterPaletteExtractor
Creates a string representation of an existing palette on a raster and saves it to an attribute.
RasterPaletteGenerator
Generates a palette out of the selected band(s) of a raster. The output raster will have the selected band(s) replaced by a new band with a palette.
RasterPaletteInterpretationCoercer
Alters the interpretation type of raster palettes.
RasterPaletteNodataSetter
Identifies the palette key that matches a raster ban
Related Transformers: RasterBandNodataSetter, RasterPaletteNodataSetter"
205;338bb9b1-2aa1-44f6-877a-7be67313f353;"Name: GtransAttributeReprojector
Category: Coordinates, Integrations
Description: Name: GtransAttributeReprojector Category: Coordinates, Integrations Description: Working With Coordinate System Transformers

FME inherently supports coordinate system transformations and reprojections.
Coordinate systems generally have a name and a definition, and the syntax of that definition can vary greatly between both spatial data formats and other coordinate system libraries. Custom and local coordinate systems can also be defined in FME, further complicating matters. For in-depth information, see theWorking With Coordinate Systemsdocumentation.
Reprojections are generally done with the FME Reprojection Engine, which is based on the CS-Map coordinate system library. This default can be overridden on a per-workspacebasis, using theWorkspace Parameters > Translation > Reprojection Engineparameter, and set to Esri. Where appropriate, FME will use the Esri Reprojection Engine if it is selected there, with or without an Esri product being installed.

Coordinate System Support

These transformers perform various coordinate system-related tasks, but do not reproject the data.
CoordinateSystemDescriptionConverter
Looks up coordinate system names and definitions between FME’s internal format and common third-party and open source representations, storing the results as an attribute.
CoordinateSystemExtractor
Retrieves the name of the feature's assigned FME coordinate system into an attribute.
CoordinateSystemRemover
Removes the coordinate system from features, without modifying geometry or coordinates.
CoordinateSystemSetter
Assigns a specified coordinate system to features, without modifying geometry or coordinates.
LocalCoordinateSystemSetter
Assigns a specified local coordinate system to features, without modifying geometry or coordinates.

Coordinate System Reprojection

Different coordinate system libraries (engines) not only contain coordinate system definitions, they also have unique reprojection algorithms. FME’s generic reprojection transformers, in the first table below, default to using the FME (CS-Map) library.
A selection of other libraries is also available, some of which are specific to certain areas of the world or software platforms.
Inherent reprojections, 
Related Transformers: AttributeReprojector, CommonLocalReprojector, CsmapAttributeReprojector, CsmapReprojector, EsriReprojector, GridInQuestIIReprojector, GtransReprojector, PROJAttributeReprojector, PROJReprojector, ReframeReprojector, ReprojectAngleCalculator, ReprojectLengthCalculator, Reprojector"
206;2ced92f5-0807-449c-9371-37c878ad2f55;"Name: RasterObjectDetectionModelTrainer
Category: Rasters
Description: Name: RasterObjectDetectionModelTrainer Category: Rasters Description: Trains a custom raster object detection model based on the positive and negative samples.

Typical Uses

Trains a custom raster object detection model based on the positive and negative datasets. The resulting model file can be used to detect the desired object usingRasterObjectDetector. For convenience, you may get the input datasets fromRasterObjectDetectorSamplePreparerthat takes multiple positive samples and a number of negative samples for preparation. Or you may generate artificial samples usingRasterObjectDetectorSampleGenerator(note that artificially generated samples usually perform worse than hand-picked ones)
Note that the transformer calls an external (opencv_traincascade) process to perform the model training. At the moment, if translation is suspended or stopped, theopencv_traincascadeprocess is going to remain running and will need to be killed manually.

Configuration
Related Transformers: RasterObjectDetector, RasterObjectDetectorSampleGenerator, RasterObjectDetectorSamplePreparer"
207;52187b99-b04c-432e-9ad4-dc8a010fb676;"Name: RasterBandMinMaxExtractor
Category: Calculated Values, Rasters
Description: Name: RasterBandMinMaxExtractor Category: Calculated Values, Rasters Description: alues at the point location.
PointOnRasterValueExtractor
Extracts the band and palette values from a raster at the location of one or more input points and sets them as attributes on the feature.
RasterDEMGenerator
Produces a raster digital elevation model (DEM) by uniformly sampling a Delaunay triangulation generated from input points and breaklines.
VectorOnRasterOverlayer
Rasterizes vector or point cloud features onto an existing raster. For vector features the fme_color attribute sets pixel color, and point clouds may be rendered using their color or intensity components.

Configuration
Related Transformers: RasterBandInterpretationCoercer, RasterBandPropertyExtractor, RasterCellValueCalculator, RasterExpressionEvaluator, RasterInterpretationCoercer, RasterPropertyExtractor, RasterStatisticsCalculator"
208;49647830-c776-40c8-a58c-35e5b358f57f;"Name: TimeWindower
Category: Workflows
Description: Name: TimeWindower Category: Workflows Description: vailable.
Tolerance Settings

Enabled when Order Type is Chronological or Reverse Chronological.
Tolerance Interval
The tolerance interval in units specified by theTolerance Time Unitsparameter. A valid tolerance interval must be between 0 and the window duration interval.
Features that arrive out of order may be accepted depending on the tolerance interval settings.
When the tolerance interval is set to 0, any features assigned to previous windows will be considered late, and will be sent to theOutOfSequenceport.
If the tolerance interval is non-zero, late features will still be accepted for output if features that arrive early are within the tolerance interval of the next window. It is recommended that the tolerance interval be a fraction of the window duration with a maximum not to exceed 50%.
Example:
Window Duration: 5 minutes
Time Window Start: With First Feature
Order Type: Chronological
Tolerance Interval: 1 minute
Feature Timestamp
(hh:mm:ss)
Feature Window ID
Status
12:00:00
0
Output feature
12:05:30
1
Hold
12:04:00
0
Output feature
12:07:00
1
Output feature from 12:05:30 and then the current feature
12:03:00
0
Out of order feature
The initial feature at 12:00:00 sets the start time, and is then sent to the output port.
The second feature from 12:05:30, is from the next window with an ID of 1. Because the timestamp 12:05:30 is within the tolerance of 1 minute from the end of the previous window at 12:05:00, the feature will be held.
The third feature is accepted, since the TimeWindower is still accepting features from window ID 0.
With the fourth feature, the timestamp has now passed the tolerance of 1 minute from the end of the previous window. This means that the TimeWindower outputs any “held” features, such as the one from 12:05:30, and then the current feature from 12:07:00, both from Window ID 1. These are output in order after a feature is output via the WindowChanged port.
The fifth feature from window ID 0 will be out of order.
Tolerance Time Units
The units for the Tolerance Interval.
Seconds
Minutes(Default)
Hours
Days

Editing Transformer Par
Related Transformers: "
209;48052f44-243b-4080-bfd3-80bc184396c4;"Name: Rotator
Category: Geometries
Description: Name: Rotator Category: Geometries Description: Rotates features in a counterclockwise direction about the specified 
 point by the Rotation Angle parameter (measured in degrees).
The rotation is around the Z axis, and does not impact any elevations 
 that may be present on the feature.

Configuration
Related Transformers: "
210;47954274-8748-4912-99d1-712da3fa8cc4;"Name: TextPropertyExtractor
Category: Calculated Values
Description: Name: TextPropertyExtractor Category: Calculated Values Description: Output Ports
Related Transformers: "
211;dbfa6958-0c3a-4ba8-87b5-6071c4a69069;"Name: StringSearcher
Category: Strings
Description: Name: StringSearcher Category: Strings Description: Performs a regular expression match on the specified expression.
If the expression matches the pattern, the feature is output via theMatchedport, and the portion of the original search string that matched the regular expression is stored in the  attribute specified in theMatched Result Attribute(and 
 optionally matching pieces of the expression are stored in the attribute list specified in theAll Matches List NameandSubexpression Matches List Nameparameters, along with the starting indices of each piece). Otherwise, it is output via theNotMatchedport.

Usage Notes

Test regular expressions with theRegular Expression Editorin theContains Regular Expressionfield’s context menu.
For more information on regular expression syntax, seehttps://perldoc.perl.org/perlre#Regular-Expressions.

Configuration
Related Transformers: StringReplacer"
212;6e4fcca2-f804-4590-aac6-ba5e7dd2baf6;"Name: FeatureJoiner
Category: Filters and Joins
Description: Name: FeatureJoiner Category: Filters and Joins Description: Usage Notes
Related Transformers: DatabaseDeleter, DatabaseJoiner, DatabaseUpdater, FeatureMerger, ListBasedFeatureMerger, InlineQuerier, SQLCreator, SQLExecutor, Matcher"
213;01d2cd50-a8c1-45da-a094-68599da342bc;"Name: TextStroker
Category: Cartography and Reports, Rasters
Description: Name: TextStroker Category: Cartography and Reports, Rasters Description: Output Ports

Stroked text is output via theStrokedoutput port.
Any rejected features 
 (for example, points with no text attributes) are output via the<Rejected>output port.

Parameters

Stroked Geometry Type
This parameter specifies whether the output features 
 should be polygons or lines.
Font Name
The font name can refer to any valid TrueType font, and is case-insensitive. 
 The font name can also include optional style specifiers according to 
 the syntax:
<fontname>[,SIZE][,BOLD][,ITALIC][,<character set index within font>]
The [ ] enclose optional items.  The 
 character set index, which is an integer starting at 0, is typically not 
 used.
Some example font specifications include:
The font can also be specified in the exact same way using thefme_font_nameattribute of an incoming feature by leaving this parameter empty.
The font size can also be specified by setting thefme_text_sizeattribute of an incoming feature. If a size is specified using theFont Nameparameter, it takes precedence over thefme_text_sizeattribute.
Text Padding
Specifies the text padding (extra spacing between characters) in ground units.
Text Width Multiplier
The font width 
 multiplier multiplies the ""natural"" width for the font, based on the height. 
   A value of zero indicates that the font width is equal to the font height.
A multiplier 
 of two will give characters at twice their normal width.

Editing Transformer Parameters

Using a set of menu options, transformer parameters can be assigned by referencing other elements in theworkspace. More advanced functions, such as an advanced editor and an arithmetic editor, are also available in some transformers. To access a menu of these options, clickbeside the applicable parameter. For more information, seeTransformer Parameter Menu Options.

Defining Values

There are several ways to define a value for use in a Transformer. The simplest is to simply type in a value or string, which can include functions of various types such as attribute references, math and string functions, andworkspaceparameters. There are a number of tools and shortcuts that can assist
Related Transformers: "
214;1abe2453-d928-43ff-80c3-d549aaca758f;"Name: FeatureJoiner
Category: Filters and Joins
Description: Name: FeatureJoiner Category: Filters and Joins Description: ste

Enabled once you have clicked on a row item. Choices include:
Cut, copy, and paste may be used within a transformer, or between transformers.
Filter

Import

Reset/Refresh

Generally resets the table to its initial state, and may provide additional options to remove invalid entries. Behavior varies between transformers.
Note:Not all tools are available in all transformers.

Reference

Processing Behavior
Group-Based
Feature Holding
Yes

FME Community

TheFME Communityis the place for demos, how-tos, articles, FAQs, and more. Get answers to your questions, learn from other users, and suggest, vote, and comment on new features.
Search forall results about the FeatureJoineron theFME Community.

Examples may contain information licensed under the Open Government Licence – Vancouver and/or the Open Government Licence – Canada.
Related Transformers: DatabaseDeleter, DatabaseJoiner, DatabaseUpdater, FeatureMerger, ListBasedFeatureMerger, InlineQuerier, SQLCreator, SQLExecutor, Matcher"
215;0411ba4f-f2e2-4934-a035-432044f3f196;"Name: RasterExpressionEvaluator
Category: Calculated Values, Rasters
Description: Name: RasterExpressionEvaluator Category: Calculated Values, Rasters Description: The output raster feature contains only one band, the Gray8 band specified in the parameters.

The results of the expression evaluation are output as cell values.

In this example, we will use a RasterExpressionEvaluator to isolate land of a specific zoning type that falls with 150 meters of major arteries.
We start with two numeric rasters. The first represents zoning, with integer values ranging from 1 to 10, where each value arbitrarily represents a zone type. This will be ourAraster.
We are interested in zone type 3.

The second raster represents 150 meter buffers along arterial roads. Cells have a value of either 0 or 1, where 1 represents pixels inside the buffer zones, and 0 outside the buffer zones. This is ourBraster.

The pair of rasters is routed into a RasterExpressionEvaluator - note thatMode:Two Rastersmust be selected in the parameters dialog prior to connecting the second raster, to enable (and expose) theBinput port.

In the parameters dialog, we create a single expression. This will result in a single-band numeric raster being output. AnInterpretationtype must be specified -Int32(32-bit integer) is chosen, as an appropriate interpretation type for these values.
The expression references cells from both theAandBrasters, and is using this form:if (conditions, pass value, fail value)
If the cell value from rasterA(zones) is equal to 3, AND the cell value from rasterB(artery buffers) is equal to 1, then output the cell value 3. Otherwise, set the cell value to 0.
Note that zero is specified in decimal form as0.0(avoiding misinterpretation as Nodata).

Any cells that fall within both zone 3 and an artery buffer are output with a value of 3, and all others cells are 0.
Related Transformers: ExpressionEvaluator, PointCloudExpressionEvaluator, RasterCellValueCalculator, RasterCellValueReplacer, RasterCellValueRounder, RasterConvolver, RasterSingularCellValueCalculator, RasterStatisticsCalculator"
216;c3345eb4-667f-4a06-83ba-883fb07d7354;"Name: KMLTourBuilder
Category: Cartography and Reports
Description: Name: KMLTourBuilder Category: Cartography and Reports Description: Parameters

Name
The name of the Tour object that will be displayed in the navigation tree of a KML Viewer such as Google Earth. If the value of the Tour Name comes from an attribute, all features sharing a common attribute value will be grouped into the same tour. It is possible for the KMLTourBuilder to build several tours if there are different attribute values.
Duration
The time, in seconds, for the entire tour. The duration of a tour has two components: flying time and waiting time (if wait delays are used). The flying time is calculated as the specified tour duration less the total wait times. The flying time between each tour stop will be calculated such that the velocity of the tour is approximately constant.
Type
Smooth: The flying velocity will remain constant for the entire tour.
Bounce: The flying velocity will be gradually reduced to zero as the tour reaches each stop.
Display
This parameter specifies whether the feature's balloon should be popped up as the tour reaches the tour stop, and then hidden when the tour departs the tour stop.
The balloon will only display when the flight velocity has reached zero, so this option is best used with either a Wait or Pause delay.
Type
Specifies the type of delay at each tour stop.
If the Type is set to Wait, the tour will briefly stop at each tour stop for the number of seconds specified in the delay duration. If the Type is set to Pause, the tour will stop at each tour stop until the user presses the play button on the tour control of a KML Viewer such as Google Earth.
Duration
The number of seconds to stop if the Type parameter is set to Wait.
Perspective
Specifies the user's perspective for the entire tour:
Range
Specifies the distance, in meters, from the view point to the tour stop location in the Third Person perspective.
If the value is <calculate>, the range value will be calculated such that user's view includes the tour stop, as well as a portion of the remaining tour. The calculated range is constant for every tour stop.
Heading
Specifies the direction (azimuth) of the view, in degrees, relative to North. If the val
Related Transformers: "
217;34d7eb69-89a4-4721-8d2e-d9b1edcffb32;"Name: LineCombiner
Category: Geometries
Description: Name: LineCombiner Category: Geometries Description:  is necessary.
SeeOutput Lines and Pathsabove.
Aggregate Handling
Select how aggregate geometries are to be handled:
Deaggregate: Decompose aggregates into their individual components.
Reject: Do not process aggregates and output them via the<Rejected>port.

Editing Transformer Parameters

Using a set of menu options, transformer parameters can be assigned by referencing other elements in theworkspace. More advanced functions, such as an advanced editor and an arithmetic editor, are also available in some transformers. To access a menu of these options, clickbeside the applicable parameter. For more information, seeTransformer Parameter Menu Options.

Defining Values

There are several ways to define a value for use in a Transformer. The simplest is to simply type in a value or string, which can include functions of various types such as attribute references, math and string functions, andworkspaceparameters. There are a number of tools and shortcuts that can assist in constructing values, generally available from the drop-down context menu adjacent to the value field.

Using the Text Editor

The Text Editor provides a convenient way to construct text strings (including regular expressions) from various data sources, such as attributes, parameters, and constants, where the result is used directly inside a parameter.
Text Editor

Using the Arithmetic Editor

The Arithmetic Editor provides a convenient way to construct math expressions from various data sources, such as attributes, parameters, and feature functions, where the result is used directly inside a parameter.
Arithmetic Editor

Conditional Values

Set values depending on one or more test conditions that either pass or fail.
Parameter Condition Definition Dialog

Content

Expressions and strings can include a number of functions, characters, parameters, and more.
When setting values - whether entered directly in a parameter or constructed using one of the editors - strings and expressions containing String, Math, Date/Time or FME Feature Functions will have those functions evaluated. Therefore, the names of 
Related Transformers: Intersector, LineBuilder, LineCloser, LineExtender, PathBuilder, Snapper"
218;995fecd7-00a0-4225-b6f4-b9d4b648b189;"Name: DGNStyler
Category: Cartography and Reports
Description: Name: DGNStyler Category: Cartography and Reports Description: specified here.  Most often, the same file will be used in both the transformer and the writer.  Further note that if no cells are to be used, then this parameter can be left blank.
Cell Name
Specifies the cell that will be placed at the point location.  Click the browse button to pick the name from the set of cells defined in the cell library file.
Format attribute set:igds_cell_name
Cell Mode
Specifies how a cell will be written.  If a value of Library is specified, anigds_cellelement is created which is expected to reference a cell definition in the cell library file.  Otherwise, if a value of Shared (V8 Only) is specified, then anigds_shared_cellelement is created in the destination which does not refer to a cell definition in the cell file definition. (Note that the Shared value for this parameter is only supported by the V8 version of the Design writer.)
Format attribute set:igds_typetoigds_cellorigds_shared_cell
Relative Graphic Cells
Specifies if the graphic cells are to be created as relative graphic cells.  Relative graphic cells map the cell members with the lowest level number to the current cell feature's level which becomes a base level for the relative graphic cell.  All the subsequent cell members have their levels offset according to the base level.  This does not apply to point or shared cells. (Note that this parameter is only supported by the V8 version of the Design writer.)
Format attribute set:igds_is_graphic_cell_relative
Cell Rotation
Specifies rotation of the cell (in degrees counterclockwise from horizontal). This can be set to any floating-point value between -360.0 to 360.0, or be set to a value taken from an attribute.
Format attribute set:igds_cell_rotation
Cell Size By
Indicates how the size of the cell will be specified.  If master units are chosen, then the cell will be scaled so that its range in x, y, and z covers the specified amounts.  If scale factor is chosen, then the amounts in x, y, and z specify the scaling which will be applied to the cell in each of the three axes.
Specifies the sizing amount for the x axis, which can be a floati
Related Transformers: "
219;31eaf344-eab6-40aa-9a39-e03cea7a0e58;"Name: OrientationExtractor
Category: Calculated Values
Description: Name: OrientationExtractor Category: Calculated Values Description: ions - Tables

Transformers with table-style parameters have additional tools for populating and manipulating values.
Row Reordering

Enabled once you have clicked on a row item. Choices include:
Cut, Copy, and Paste

Enabled once you have clicked on a row item. Choices include:
Cut, copy, and paste may be used within a transformer, or between transformers.
Filter

Import

Reset/Refresh

Generally resets the table to its initial state, and may provide additional options to remove invalid entries. Behavior varies between transformers.
Note:Not all tools are available in all transformers.

FME Community

TheFME Communityis the place for demos, how-tos, articles, FAQs, and more. Get answers to your questions, learn from other users, and suggest, vote, and comment on new features.
Search forall results about the OrientationExtractoron theFME Community.
Related Transformers: "
220;0e80b0ef-5038-4f98-b978-d33cb1b0e726;"Name: WebMapTiler
Category: Cartography and Reports
Description: Name: WebMapTiler Category: Cartography and Reports Description: Creates series of raster tiles for use in web mapping applications such as Bing™ Maps, Google Maps™, or Web Map Tile Service. Tiles are produced at varying zoom levels, size, and resolution.
Jump to Configuration

Typical Uses
Related Transformers: Clipper, RasterMosaicker, RasterPyramider, RasterSubsetter, Tiler"
221;cbb0f283-2cbc-4e76-909c-dcba60e9ac76;"Name: GeometryRefiner
Category: Geometries
Description: Name: GeometryRefiner Category: Geometries Description: s

Transformers with table-style parameters have additional tools for populating and manipulating values.
Row Reordering

Enabled once you have clicked on a row item. Choices include:
Cut, Copy, and Paste

Enabled once you have clicked on a row item. Choices include:
Cut, copy, and paste may be used within a transformer, or between transformers.
Filter

Import

Reset/Refresh

Generally resets the table to its initial state, and may provide additional options to remove invalid entries. Behavior varies between transformers.
Note:Not all tools are available in all transformers.

FME Community

TheFME Communityis the place for demos, how-tos, articles, FAQs, and more. Get answers to your questions, learn from other users, and suggest, vote, and comment on new features.
Search forall results about the GeometryRefineron theFME Community.
Related Transformers: "
222;f149247d-0f78-4ae8-a301-5b43ac97e9df;"Name: KinesisSender
Category: Integrations
Description: Name: KinesisSender Category: Integrations Description: Using the Amazon Kinesis service, sends data records to an Amazon Kinesis stream.

Usage Notes

The performance of this transformer is dependent on the amount of memory allocated to the Java Virtual Machine (JVM). The following environment variables allow you to specify memory available to Java Plugins:
These variables must be set in multiples of 1024 and greater than 1 MB. To indicate kilobytes, megabytes, or gigabytes, appendkorK,morM, orgorGrespectively. For example, any of these values is acceptable:
6291456
6144k
6m
These variables must be set in multiples of 1024 and greater than 2 MB. To indicate kilobytes, megabytes, or gigabytes, appendkorK,morM, orgorGrespectively. For example, any of these values is acceptable:
83886080
81920k
80m

Configuration
Related Transformers: "
223;bfdc3c38-1ca8-4aa9-b1de-d6eec35b9f54;"Name: MeasureGenerator
Category: Calculated Values
Description: Name: MeasureGenerator Category: Calculated Values Description: Features with a set of measures attached according to parameter selections.
Invalid input geometry types will be output via this port. Rejected features will receive an explanatoryfme_rejection_codeattribute.
Rejected Feature Handling:can be set to either terminate the translation or continue running when it encounters a rejected feature. This setting is available both as a defaultFME optionand as aworkspace parameter.

Parameters

Length Dimension
TheLength Dimensionparameter 
 controls how the distance will be calculated. The distance can be calculated 
 as either a two-dimensional distance (in which case any z coordinates 
 on the features will be ignored), or as a three-dimensional distance.
The first value will always be 
 0, since the length up to the very first point is 0.  The 
 last value will be the length of the entire line multiplied by the value set in theMultiplierparameter.
Multiplier
AMultiplieris applied to each 
 distance before it is added to the list, to potentially scale each measurement 
 by a fixed amount. By default, the multiplier is 1.
Start Value
AStart Valueis added to each distance before it is added to the list, to potentially add an offset to each measurement by a fixed amount.  By default, the start value is 0.
Measure Name
You can enter an optional name for the resulting measures.

Editing Transformer Parameters

Using a set of menu options, transformer parameters can be assigned by referencing other elements in theworkspace. More advanced functions, such as an advanced editor and an arithmetic editor, are also available in some transformers. To access a menu of these options, clickbeside the applicable parameter. For more information, seeTransformer Parameter Menu Options.

Defining Values

There are several ways to define a value for use in a Transformer. The simplest is to simply type in a value or string, which can include functions of various types such as attribute references, math and string functions, andworkspaceparameters. There are a number of tools and shortcuts that can assist in constructing values, generally available from the d
Related Transformers: "
224;f2e3a683-331e-4591-847c-f0ee7626e368;"Name: PointCloudSurfaceBuilder
Category: 3D, Geometries, Point Clouds
Description: Name: PointCloudSurfaceBuilder Category: 3D, Geometries, Point Clouds Description: er processing time.
Isosurface Level
Sets the iso level of the surface to be extracted.
Grid Extend Percentage
Sets the percentage of the bounding box that should be left empty between the bounding box and the grid limits.

Editing Transformer Parameters

Using a set of menu options, transformer parameters can be assigned by referencing other elements in theworkspace. More advanced functions, such as an advanced editor and an arithmetic editor, are also available in some transformers. To access a menu of these options, clickbeside the applicable parameter. For more information, seeTransformer Parameter Menu Options.

Defining Values

There are several ways to define a value for use in a Transformer. The simplest is to simply type in a value or string, which can include functions of various types such as attribute references, math and string functions, andworkspaceparameters. There are a number of tools and shortcuts that can assist in constructing values, generally available from the drop-down context menu adjacent to the value field.

Using the Text Editor

The Text Editor provides a convenient way to construct text strings (including regular expressions) from various data sources, such as attributes, parameters, and constants, where the result is used directly inside a parameter.
Text Editor

Using the Arithmetic Editor

The Arithmetic Editor provides a convenient way to construct math expressions from various data sources, such as attributes, parameters, and feature functions, where the result is used directly inside a parameter.
Arithmetic Editor

Conditional Values

Set values depending on one or more test conditions that either pass or fail.
Parameter Condition Definition Dialog

Content

Expressions and strings can include a number of functions, characters, parameters, and more.
When setting values - whether entered directly in a parameter or constructed using one of the editors - strings and expressions containing String, Math, Date/Time or FME Feature Functions will have those functions evaluated. Therefore, the names of these functions (in the form @<function_name>) should not be used
Related Transformers: "
225;cd1d68c2-3ded-446d-88ae-7f9df3a7119d;"Name: AutodeskDocsConnector
Category: Integrations, Web, Workflows
Description: Name: AutodeskDocsConnector Category: Integrations, Web, Workflows Description: How does it work?

The AutodeskDocsConnector uses your Autodesk account credentials (either via a previously defined FME web connection, or by setting up a new FME web connection right from the transformer) to access the file storage service.
Depending on your choice of actions, it will upload or download files, folders, and attributes; list information from the service; or delete items from the service. On Upload and List actions, links and file/folder information are added to the output features as attributes.

Authentication

The AutodeskDocsConnector uses anoauthweb service defined FME web connection. It is recommended to create a new web connection using the Autodesk Docs (safe.autodesk-docs) web service. It is also recommended to replace the included FME Forge app client with your own Forge application by updating the client id and secret in Autodesk Docs (safe.autodesk-docs). At minimum, the Forge app must have access to the Data Management API.
It is also required to add the chosen Forge App as a custom integration on the BIM 360 Hub page. A hub admin can do this by logging in and going to Account Admin > Settings > Custom Integrations > Add Custom Integration and entering the client ID of the connected Forge App. For the included FME Forge app, this is visible by examining the Autodesk Docs (safe.autodesk-docs) web connection settings.
See also:How to create a BIM 360 Document Management Web Connection

Usage Notes
Related Transformers: GoogleDriveConnector, SharePointOnlineConnector, S3Connector"
226;80ae7e12-1549-4bb9-b352-db5c76e2908d;"Name: ListSearcher
Category: Strings
Description: Name: ListSearcher Category: Strings Description: ful to keep the order that features arrived in, switching from port to port as necessary. This allows feature order to be preserved, though at a potential cost in processing efficiency.
Select a method for feature ordering.
Only preserve the input order of features as they occur within the group of features exiting a given output port.
All features exiting an output port retain their ordering relative to each other (within the group), but not relative to features exiting other output ports.
This option is generally the most efficient, where large chunks of features will exit an output port together (taking advantage ofbulk mode).
As features exiting different output ports may not be strictly output in the order they arrived, output ordering may be unpredictable.
Across Output Ports
Strictly preserve the input order of features, regardless of which output port they exit. Features will be output singly  in the same order they arrived, switching from port to port as necessary. 

This option is generally less efficient as the processing gains ofbulk modeare less likely to apply - however, feature order is predictable.
Matching List Index
If theIndex Attributeis specified and the search string is found, an attribute with the specified name will be added to the output feature containing the index of the found element.

Additional Resources

More Information on Lists

Editing Transformer Parameters

Using a set of menu options, transformer parameters can be assigned by referencing other elements in theworkspace. More advanced functions, such as an advanced editor and an arithmetic editor, are also available in some transformers. To access a menu of these options, clickbeside the applicable parameter. For more information, seeTransformer Parameter Menu Options.

Defining Values

There are several ways to define a value for use in a Transformer. The simplest is to simply type in a value or string, which can include functions of various types such as attribute references, math and string functions, andworkspaceparameters. There are a number of tools and shortcuts that can
Related Transformers: "
227;87bd80f1-4479-4e49-8bf3-d8960489f857;"Name: VertexNormalRemover
Category: 3D, Coordinates, Geometries
Description: Name: VertexNormalRemover Category: 3D, Coordinates, Geometries Description: Removes all vertex normals from a feature’s geometry.
Jump to Configuration

How does it work?

The VertexNormalRemover receives features with vertex normals and removes all vertex normals from them. Geometry features without vertex normals will exit via the Output port unchanged.

Configuration
Related Transformers: AttributeRemover, CoordinateSystemRemover, GeometryRemover, MeasureRemover, VertexRemover"
228;994c87f0-bac5-4a79-8be5-7bfb712ff693;"Name: RasterPaletteResolver
Category: Rasters
Description: Name: RasterPaletteResolver Category: Rasters Description: Usage Notes
Related Transformers: RasterPaletteAdder, RasterPaletteExtractor, RasterPaletteGenerator, RasterPaletteRemover"
229;c4c2ad6c-3c36-48ec-b37b-752090f04c07;"Name: PointCloudCreator
Category: Point Clouds
Description: Name: PointCloudCreator Category: Point Clouds Description: Components

Other components may also be created and patterned. Standard component names may be selected from the drop-down, and user-defined names can be entered directly. The componentData Type,Min Value, andMax Valueare specified.
All component values are applied in the same selectedValue Pattern, shown here as anintensitycomponent on a sloped point cloud:
Value Pattern

Value Pattern on a Sloped Point Cloud
Single Value
One component value is applied to all points.
Note the color gradient represents the underlyingzvalue of theSlopedpoint cloud - not theSingle Valuecomponent value.

Checkered Pattern
A checkerboard pattern is applied, where one set of blocks is set toComponent Values > Min Value.
The alternating blocks are filled with a gradient of component values, scaled betweenMin ValueandMax Value.

Checkerboard
A checkerboard pattern is applied, where one set of blocks is set toComponent Values > Min Value, and the alternating blocks are set toMax Value.
Related Transformers: 2DGridCreator, Creator, RasterNumericCreator, RasterRGBCreator"
230;2d470198-c6b2-40b1-876e-ac3b1046a338;"Name: KafkaConnector
Category: Web
Description: Name: KafkaConnector Category: Web Description: Input Ports

This transformer accepts any feature.

Output Ports

The output of this transformer will vary depending on the action performed. Message data are presented as feature attributes.
The incoming feature is output through this port.
Features that cause the operation to fail are output through this port. Anfme_rejection_codeattribute, having the valueERROR_DURING_PROCESSING, will be added, along with a more descriptivefme_rejection_messageattribute which contains more specific details as to the reason for the failure.
Rejected Feature Handling:can be set to either terminate the translation or continue running when it encounters a rejected feature. This setting is available both as a defaultFME optionand as aworkspace parameter.

Parameters

Credential Source
In addition to anonymous access, the KafkaConnector can authenticate with the cluster. Using a web connection integrates best with FME, but in some cases, you may wish to use one of the other sources.
Account
Available when the credential source isWeb Connection. To create an Apache Kafka  connection, click the 'Account' drop-down box and select 'Add Web Connection...'.
The connection can then be managed via Tools -> FME Options... -> Web Connections.
User Name and Password
Available when the credential source isEmbedded. A user name and password can be specified directly in the transformer instead of in a web connection.
Security Protocol
SASL Mechanism
SSL CA Certificate
When using one of the SSL security protocols, an optional path to an SSL CA certificate for verifying the cluster
The list of bootstrap servers (host and port) to connect to. See the “bootstrap.servers” configuration option athttps://kafka.apache.org/documentation.htmlfor more information.
Action
The type of operation to perform. Choices are:
The remaining parameters available depend on the value of the Request > Action parameter. Parameters for each Action are detailed below.

Topics

Topics
The list of topics to receive from. Topics can be entered manually, or selected interactively by clicking the ellipses in each row of the t
Related Transformers: AzureEventHubsConnector, AzureQueueStorageConnector, GoogleCloudPubSubConnector, MQTTConnector, SQSConnector"
231;6bd949af-3825-4b53-bbda-c42e3b0cecf3;"Name: XMLFlattener
Category: 
Description: Name: XMLFlattener Category:  Description: 
any string
open-list-brace=""{""
Specifies the open list index delimiter brace for the flattened attributes.
Default value if not specified: {
any string
close-list-brace=""}""
Specifies the close list index delimiter brace for the flattened attributes.
Default value if not specified: }
any string
map-empty-elements=""yes""
If set to yes, any empty elements will be added onto the features as attributes with empty values. Otherwise, the attributes will not be added onto the features.
Default value if not specified: yes
yes | no
Possible values: any string
matched-prefix=""attributes""
This option controls whether FME feature attributes produced will be prefixed with matched element's name.
If the value is yes, then both the matched element's attributes and all its children are prefixed
If the value is no, then none of the feature attributes are prefixed with matched element's name
If the value is children, then only the children of the matched element are prefixed
If the value is attributes, then only the attributes of the matched element are prefixed.
Default value if not specified: yes
yes | no | children | attributes
matched-attributes=""yes""
If this option is set to yes then the attributes of the matched element are mapped as FME feature attributes. Otherwise, the attributes of the matched element are ignored.
matched-prefix option can also be set to attributes or yes to allow the attributes to be prefixed with the name of the matched element.
Default value if not specified: yes
yes | no
matched-ancestor-attributes=""""
The option controls whether XML attributes from ancestor of the matched element should be included as FME feature attributes.
- 'parent' or '1'         : XML attributes of the parent of the matched element are added
- 'grandparent' or '2'    : XML attributes of the grandparent of the matched element are added
- 'root' or '-1'          : XML attributes of the root of the document are added
- any non-negative number : XML attributes of the ancestor by going up x levels from the matched element are added. 0 is the matched element.
To include more th
Related Transformers: "
232;3a6c9296-4e60-459a-8008-fd77d2c2a58e;"Name: LocalCoordinateSystemSetter
Category: Coordinates
Description: Name: LocalCoordinateSystemSetter Category: Coordinates Description: Library (External Links)
CsmapAttributeReprojector
Reprojects x, y, and optionally z coordinates stored as attributes from one coordinate system to another using the CS-MAP library.
CS-Map
CsmapReprojector
Reprojects feature x, y, and optionally z coordinates from one coordinate system to another using the CS-Map library.
CS-Map
EsriReprojector
Reprojects feature coordinates from one coordinate system to another using the Esri reprojection library.
Esri
GridInQuestIIReprojector
Great Britain
Northern Ireland
Republic of Ireland
Reprojects feature coordinates from one coordinate system to another using theGrid InQuestII engine from Ordnance Survey, for use in Great Britain, Ireland, and Northern Ireland.
Grid InQuestII
GtransAttributeReprojector
Sweden
Reprojects coordinates stored as attributes from one coordinate system to another using the  Gtrans reprojection engine from the National Land Survey of Sweden (Lantmäteriet).
Gtrans
GtransReprojector
Sweden
Reprojects feature coordinates from one coordinate system to another using the Gtrans reprojection engine from the National Land Survey of Sweden (Lantmäteriet).
Gtrans
PROJAttributeReprojector
Reprojects coordinates stored as attributes from one coordinate system to another using the PROJ library.
PROJ
PROJReprojector
Reprojects feature coordinates from one coordinate system to another using the PROJ library.
PROJ
ReframeReprojector
Switzerland
Reprojects feature coordinates from one coordinate system to another in Switzerland, using the Reframe library from the Federal Office of Topography (swisstopo).
REFRAME

Configuration
Related Transformers: CommonLocalReprojector, CoordinateSystemSetter"
233;96da9350-1a72-4956-a81c-57ee2118f39b;"Name: HTMLReportGenerator
Category: Cartography and Reports
Description: Name: HTMLReportGenerator Category: Cartography and Reports Description: ser to specify theidattribute for this header or paragraph element. If left blank, noidattribute will be set.
Text Alignment
Allows the user to specify the alignment of the text on the page.  Options includeLeft,Right,CenterandJustified.
Color
Allows the user to specify a color for the text.
Image
This element allows the user to either link to or embed an image in their page.
Attachment Method
This setting allows the user to choose whether they want to link to an image using a URL or a relative path or to embed the actual content of the image within their page.  Note that the latter option may bloat the size of the HTML page considerably for larger images.
Image URL
This option is only enabled when theAttachment Methodis set toLink. It allows the user to specify an image via a relative path or external URL.
Image File
This option is only enabled when theAttachment Methodis set toEmbed. It allows the user to specify an image on the disk to embed within the page.  This parameter expects a valid path to a png or jpeg file.  If setting this path from an attribute, the user must ensure that the image exists on disk at the time the features hit this transfomer.  In the event you wish to use an image dynamically created as part of a workflow, consider using theFeatureWritertransformer before this transformer to write this image to disk and use it within the report within a singleworkspace.
Alternate Text
This optional parameter allows one to specify text that will be displayed in the event the image fails to load.
List
Allows the user to create a list of text from an attribute.
List Item Content
The attribute that will be used to populate the list values one entry per feature.
List Item Markers
This option specifies whether the list will be marked with bullets, letters, numbers, roman numerals or nothing.
Text Color
Allows the user to set a color for the list text.
Badge Content
This attribute can only be set ifList Item Markersis set toNone.  In the event this is set, bootstrap style badges will be set on the right-hand side of the list.
Map (Esri Leaflet)
This element allows the user to cr
Related Transformers: "
234;08fa26ed-c79b-4ce1-a1b2-ec7d0d452e48;"Name: AttributeRounder
Category: Calculated Values, Strings
Description: Name: AttributeRounder Category: Calculated Values, Strings Description: How does it work?

The AttributeRounder accepts any feature. It rounds the selected attribute(s) to the specified number of decimal places, which may be a fixed integer, or set to an attribute or parameter value.
The newly rounded values replace the original values, and all features are output.
Non-numeric values will be passed through unaltered. If rounding is attempted with Decimal Places set to a non-integer value, the features will be Rejected.
Negative Decimal Place integer values may be used to perform rounding to the left of the decimal, rounding to 10s, 100s, 1000s, and so forth.

Examples

In this example, a spreadsheet containing values will be rounded to 2 decimal places. The source data is not clean, containing one alphanumeric string mixed in with an assortment of numbers.

The features are routed into an AttributeRounder.

In the parameters dialog, we select attributeAfor rounding (column A from the spreadsheet), and set the number ofDecimal Placesto2. TheRound-off Directionis left asNearest, which rounds up or down as appropriate.

The values are rounded where possible, and replace the original attribute values. Note that numbers that had less than 2 decimal places to start with are not zero-padded, and the non-numeric string “Dogs” has been passed through unaltered.
Related Transformers: CoordinateRounder, DateTimeRounder, RasterCellValueRounder"
235;9fa91899-7564-4bb0-9119-601d37b2598e;"Name: ArcGISOnlineConnector
Category: Integrations, Web, Workflows
Description: Name: ArcGISOnlineConnector Category: Integrations, Web, Workflows Description:  downloaded
Group ID
The ArcGIS group which the content is linked to.
Note:
Path
The ArcGIS Item ID of a file or folder to download. If valid credentials have been provided as a web connection, you may browse to a location. Depending on the value of theContent Sourceparameter, this will list either the contents of the specified group or the user’s own ArcGIS content. Only items which can be downloaded will be displayed. If the user has permission to access items stored in other locations, the id of those items can be manually entered in this field.

Destination

Download as
Select whether to store the downloaded data in a File, Folder or Attribute.
Download to Attribute
Specify the attribute that will store the contents of the downloaded file. Valid forDownload asAttributeonly.
Download to Folder
Specify the path to the folder that will store the downloaded file. Valid forDownload asFileorFolder.
If File Exists
Whether to overwrite existing files in the target destination. Valid forDownload asFileorFolder.
Include Subfolders
Whether to include subfolders when downloading a folder. Due to the way that ArcGIS content is structured, only the root folder contains subfolders. Valid forDownload asFolder.

Output Attributes

_download_path
Return the path the file/folder was downloaded to. If a folder was downloaded, the path will have a trailing slash.
List the item details for the contents of a group, a user’s folder, a user’s root folder, or all of a user’s content.

Content Source

Content Source
Select the source type of the content to be listed
Group ID
The ArcGIS group which the content is linked to.
User Content Folder
The ArcGIS folder ID to list the contents of, or ‘/’ for root. If valid credentials have been provided as a web connection, you may browse to a location in the user’s content. Only folders may be selected. Valid whenContent Sourceis set toUser.
Include Subfolders
Whether to include subfolder content when listing. Due to the way that ArcGIS content is structured, only the root folder contains subfolders. Valid whenContent Sourceis set toUser.

Output Attributes

_id
Return the
Related Transformers: AzureBlobStorageConnector, GoogleCloudStorageConnector, S3Connector"
236;ad803be7-7c22-4b92-bc31-d5dd92fec2b1;"Name: PointOnLineOverlayer
Category: Filters and Joins, Spatial Analysis
Description: Name: PointOnLineOverlayer Category: Filters and Joins, Spatial Analysis Description: licted measures on points occurs in the same manner as the resolution of conflicted attributes on features.  It is resolved according to theAccumulation ModeandConflict Resolutionvalues.
Merge Attributes
Accumulation Mode
Merge Incoming: The original feature will retain all of its own un-conflicted attributes, and will additionally acquire any un-conflicted attributes that the incoming feature has. This mode will handle conflicted attributes based on the Conflict Resolution parameter.
Prefix Incoming: The original feature will retain all of its own attributes. In addition, the original will acquire attributes reflecting the incoming feature’s attributes, with the name prefixed with the Prefix parameter.
Replace with Single Incoming: The original feature will have all of its attributes removed, except geometry attributes that start with fme_. Then, all of the attributes from one (arbitrary) incoming feature will be placed onto the original.
Conflict Resolution
Use Original: If a conflict occurs, the original values will be maintained.
Use Incoming: If a conflict occurs, the values of the incoming will be transferred onto the original.
Prefix
If the Accumulation Mode parameter is set to Prefix Incoming, this value will prefix attributes and measures that are being added to the original feature from the incoming feature.

Generate List on Output ‘Point’
When enabled, adds a list attribute to the Point output features, and the attributes of each line matching an output point are added to that point's list.
‘Point’ List Name
Enter a name for the list attribute.
Add To 'Point' List
All Attributes: All attributes will be added to the output Point features.
Selected Attributes: Enables theSelected Attributesparameter, where specific attributes may be chosen for inclusion.
Selected Attributes
Enabled whenAdd To 'Point' Listis set toSelected Attributes. Specify the attributes you wish to be included.

Generate List on Output ‘Line’
When enabled, adds a list attribute to the Line output features, and the attributes of each point matching an original input line are added to each output line created from it.
‘
Related Transformers: AreaOnAreaOverlayer, Bufferer, Clipper, Intersector, LineOnAreaOverlayer, LineOnLineOverlayer, NeighborFinder, PointOnAreaOverlayer, PointOnPointOverlayer, SpatialFilter, SpatialRelator, TopologyBuilder"
237;be332a98-3266-47fb-881e-2c36e2379f8f;"Name: ComprehendConnector
Category: Web
Description: Name: ComprehendConnector Category: Web Description: Input Ports

This transformer accepts any feature.

Output Ports

Output will depend on the analysis chosen.

Language Detection

Detects the dominant language for text.  The service may return multiple language guesses for an individual request.
Attributes
_language_code
The language code guessed for the text.  A list of available languages is available at:https://docs.aws.amazon.com/comprehend/latest/dg/supported-languages.html
_confidence
The probability that a given prediction is correct.
The text analyzed.

Sentiment Detection

Detects the sentiment for text.
Attributes
_sentiment
The sentiment for the text. Possible values are:
_sentiment_postive
The confidence score for positive sentiment.
_sentiment_negative
The confidence score for negative sentiment.
_sentiment_neutral
The confidence score for neutral sentiment.
_sentiment_mixed
The confidence score for mixed sentiment.
_text
The text analyzed.

Key Phrase Detection

Detects the key phrases in text.
Attributes
_key_phrases{}.text
The key phrases from the text.
_key_phrases{}.confidence
A number between 0 and 1 that indicates the confidence score for the key phrase.
_key_phrases{}.begin_offset
The key phrase beginning offset in the text.
_key_phrases{}.end_offset
The key phrase ending offset in the text.
_text
The text analyzed.

Entity Detection

Detects the entities in text. The service can return multiple entities in a given text.
Attributes
_entities{}.text
The entity from the text.
_entities{}.confidence
A number between 0 and 1 that indicates the confidence score for the entity.
_entities{}.begin_offset
The entity beginning offset in the text.
_entities{}.end_offset
The entity ending offset in the text.
_entities{}.type
The type of the detected entity. Types can be found here:https://docs.aws.amazon.com/comprehend/latest/dg/how-entities.html
_text
The text analyzed.
The incoming feature is output through this port.
Features that cause the operation to fail are output through this port. Anfme_rejection_codeattribute, having the valueERROR_DURING_PROCESSING, will be added, along with a more descriptive
Related Transformers: AmazonAthenaConnector, AzureComputerVisionConnector, AzureTextAnalyticsConnector, GoogleLanguageConnector, GoogleVisionConnector, RasterObjectDetector, RekognitionConnector, S3Connector, SQSConnector"
238;9f26e5f9-54a5-4fd8-833b-113f4573768d;"Name: RasterCellValueRounder
Category: Rasters
Description: Name: RasterCellValueRounder Category: Rasters Description: g to its rotation angle property, interpolating new cell values, updating all other affected raster properties, and producing an output raster feature with a rotation angle of zero.
RasterSharpener
Enhances the features of a raster image. The RasterSharpener enhances the borders, lines, and curves while reducing noise in the flat areas of the raster image.
RasterSubsetter
Clips raster features using pixel bounds instead of ground coordinates, and optionally adds cells around the perimeter.
RasterTiler
Splits each input raster into a series of tiles by specifying either a tile size in cells/pixels or the number of tiles.
RasterToPolygonCoercer
Creates polygons from input raster features. One polygon is output for each contiguous area of pixels with the same value in the input raster.
WebMapTiler
Creates a series of image tiles that can be utilized by web mapping applications such as Bing™ Maps, Google Maps™, or Web Map Tile Service. This is done by resampling rasters to various different resolutions and then splitting them into tiles.

Working with Bands

RasterBandAdder
Adds a new band to a raster feature.
RasterBandCombiner
Merges coincidental raster features into a single output raster feature, preserving and appending all bands.
RasterBandInterpretationCoercer
Alters the interpretation type of individual raster bands, converting cell values if necessary.

RasterBandKeeper
Removes all unselected bands from a raster feature.
RasterBandMinMaxExtractor
Extracts the minimum and maximum band values, palette keys, and palette values from a raster feature, and adds them to a list attribute.
RasterBandNameSetter
Sets the band name of selected bands on a raster, making raster contents simpler to understand compared to band numbers.
RasterBandNodataRemover
Removes the existing Nodata identifier from selected bands of a raster feature. Any values previously equal to the Nodata value are considered valid data.
RasterBandNodataSetter
Sets a new Nodata value on selected bands of a raster feature.
RasterBandOrderer
Specifies the required order of bands in a raster. Bands are reordered
Related Transformers: RasterCellValueCalculator, RasterCellValueReplacer, RasterExpressionEvaluator, RasterSingularCellValueCalculator"
239;c4728204-9f06-41c6-b7db-5c5f019f5acd;"Name: RasterExtractor
Category: Rasters
Description: Name: RasterExtractor Category: Rasters Description: hat matches a raster band’s Nodata value, and sets a value on it.
RasterPaletteRemover
Removes selected palette(s) from raster features.
RasterPaletteResolver
Resolves the palette(s) on a raster by replacing cell values with their corresponding palette values. Palette values with multiple components, such as RGB, are broken down and the individual values assigned to multiple, newly-added bands.

Workflow Control

RasterCheckpointer
Forces accumulated raster operations to be processed, saving the state to disk and releasing resources to tune performance or assist with memory limitations.
RasterConsumer
Reads raster features for testing purposes, including any accumulated raster operations. No additional operations are performed, and nothing is done with the features.
RasterExtractor
Serializes the geometry of a raster feature into a Blob attribute, encoding the contents according to a choice of common binary raster formats.
RasterNumericCreator
Creates a numeric raster of specified size and resolution, with default cell values.
RasterReplacer
Decodes a binary attribute containing encoded rasters stored as Blobs, replacing the feature’s geometry with the decoded raster.
RasterRGBCreator
Creates a color raster feature of specified size, resolution, and interpretation type, with default cell values.
RasterSelector
Selects specific bands and palettes of a raster for subsequent transformer operations.

Vectors and Rasters

ImageRasterizer
Creates a raster representation of vector or point cloud input features, using the fme_color attribute over a solid background fill for vector features. Point clouds may be rendered using their color or intensity components.
NumericRasterizer
Creates a numeric raster representation of vector or point cloud input features, where cell values are taken from the z coordinates of the input features and overlaid on a uniform background.
MapnikRasterizer
Generates a raster from input vector and raster features, with fine control over symbolization and labeling, using the Mapnik toolkit.
PointCloudOnRasterComponentSetter
Sets point cloud compon
Related Transformers: AttributeFileWriter, GeometryExtractor, GeometryRemover, GeometryReplacer, PointCloudExtractor, PointCloudReplacer, RasterReplacer"
240;72ef2e85-0ef9-47cb-bc21-321be245042e;"Name: LeftRightSpatialCalculator
Category: Calculated Values
Description: Name: LeftRightSpatialCalculator Category: Calculated Values Description: Computes relative position of Candidate input features relative to Base input features.
The geometry of aBasefeature is restricted to lines.
See the example below. TheBaselines are considered to be oriented from the start point to the end point (digitization sense).  ACandidatefeature is:
Related Transformers: "
241;cd6af672-775c-42f6-973b-e1b4c5c11137;"Name: Category: Workflows
Category: 
Description: 
Related Transformers: "
242;1ac24af6-904f-47a3-8d24-65aad5dae534;"Name: LengthCalculator
Category: Calculated Values
Description: Name: LengthCalculator Category: Calculated Values Description: Input Ports

Features to be measured.

Output Ports

Features with an added Length Attribute as specified in parameters.
The dynamic <Rejected> port appears when a parameter is set to a non-literal value that might make processing impossible.
For example, if a numeric parameter such asLine Width,Count Start, orDecimal Placesis set to an expression, attribute value, or user parameter, it is possible to pass in a non-numeric value that cannot be used.Decimal Places=Catcannot be processed, so the feature will be output via this port.
Rejected features will have anfme_rejection_codeattribute explaining the reason for rejection.
Rejected Feature Handling:can be set to either terminate the translation or continue running when it encounters a rejected feature. This setting is available both as a defaultFME optionand as aworkspace parameter.

Parameters

Length Dimension
By default, the two-dimensional length of the line is calculated, and 
 any Z values, if present, are ignored.
To have a 3D length calculated, 
 the length dimension parameter should be set to 3, and then the elevations 
 will be included in the length computation.
Multiplier
The 
 multiplier parameter can be used to scale the length from being measured 
 in ground units (the units of the feature's coordinates) to something 
 else.
Length Attribute
Name the attribute to contain the calculated length value.

Editing Transformer Parameters

Using a set of menu options, transformer parameters can be assigned by referencing other elements in theworkspace. More advanced functions, such as an advanced editor and an arithmetic editor, are also available in some transformers. To access a menu of these options, clickbeside the applicable parameter. For more information, seeTransformer Parameter Menu Options.

Defining Values

There are several ways to define a value for use in a Transformer. The simplest is to simply type in a value or string, which can include functions of various types such as attribute references, math and string functions, andworkspaceparameters. There are a number of tools and shortcuts that can assist i
Related Transformers: "
243;8d44097b-c22a-4fa0-babe-b8bcff63ba85;"Name: AttributeEncoder
Category: Strings, Web
Description: Name: AttributeEncoder Category: Strings, Web Description: Input Ports

Features with attributes to be encoded.

Output Ports

Features with encoded attributes.

Parameters

Encode
All Attributes:Encode the value of all attributes exceptfme_attributes.
Selected Attributes:Specify a list of attributes to encode.
Selected Attributes
The subset of attributes for which you want the value encoded.
Destination Encoding
The desired encoding for the attributes.
Incoming Attribute
Honor Encoding:The value of the attribute is converted to the desired encoding based on the current attribute encoding.
Use Bytes:No conversion will be done and the bytes in the attribute value will just be marked with the desired encoding.
If theDestination EncodingisBinary (fme-binary), the transformer will produce the same result for both Honor Encoding and Use Bytes.

Editing Transformer Parameters

Using a set of menu options, transformer parameters can be assigned by referencing other elements in theworkspace. More advanced functions, such as an advanced editor and an arithmetic editor, are also available in some transformers. To access a menu of these options, clickbeside the applicable parameter. For more information, seeTransformer Parameter Menu Options.

Defining Values

There are several ways to define a value for use in a Transformer. The simplest is to simply type in a value or string, which can include functions of various types such as attribute references, math and string functions, andworkspaceparameters. There are a number of tools and shortcuts that can assist in constructing values, generally available from the drop-down context menu adjacent to the value field.

Using the Text Editor

The Text Editor provides a convenient way to construct text strings (including regular expressions) from various data sources, such as attributes, parameters, and constants, where the result is used directly inside a parameter.
Text Editor

Using the Arithmetic Editor

The Arithmetic Editor provides a convenient way to construct math expressions from various data sources, such as attributes, parameters, and feature functions, where the result is used directly
Related Transformers: AttributeCompressor, AttributeDecompressor, BinaryDecoder, BinaryEncoder, TextDecoder, TextEncoder"
244;227a43d6-7503-43a2-91d3-1bf8659df1db;"Name: HTTPCaller
Category: Web, Workflows
Description: Name: HTTPCaller Category: Web, Workflows Description: TP Authentication Password
Provide a password for HTTP authentication methods.
Query String Parameters
This table can be used to create additional URL query parameters. The parameters will be appended to the URL given in theRequest URLparameter. This can be useful when accessing a REST API endpoint which requires many parameters. The parameter names and values can be entered directly or constructed from attribute values.
Headers
This table can be used to create custom HTTP headers which will be sent along with the request. This can be used to customize the request that FME will make to the server. Header names and values can be entered directly or constructed from attribute values. In addition, the Name column provides a list of commonly used header names.
Body
These parameters  are only enabled whenHTTP MethodisPUT,POST,DELETE, orPATCH. An upload body is not required; for example, DELETE requests often have no upload body.
Upload Data
This parameter identifies the type of data that will be uploaded. The transformer can upload a file, a string value, or a multi-part combination of file and string values.
Upload Body
Upload data may be entered using this parameter. The data may be entered directly into the transformer or constructed from attribute values.
Upload File
When uploading a file, this parameter provides the file path. The path may be entered directly into the transformer or set from an attribute value.
Content Type
When uploading a string value or a file, this parameter provides the data content type. The value of this parameter will be sent in the Content-Type request header. The drop-down list contains a number of commonly-used content type values. If a different value is required, it can be typed into the text field, or derived from an attribute value.
Multipart Upload
This table is used to construct multipart uploads.
Name
Each part must have a name.
Upload Type
Select an upload type:
File Upload
String Upload
Value
Provide either a string or file for upload, per theTypeselection.
A MIME Type will be assigned, and may also be manually set.
WhenTypeisFile
Related Transformers: "
245;f2378c04-cdad-438c-8931-4640b9a33fd5;"Name: RekognitionConnector
Category: Web
Description: Name: RekognitionConnector Category: Web Description: ed
Feature Holding
No

FME Community

TheFME Communityis the place for demos, how-tos, articles, FAQs, and more. Get answers to your questions, learn from other users, and suggest, vote, and comment on new features.
Search forall results about the RekognitionConnectoron theFME Community.

Examples may contain information licensed under the Open Government Licence – Vancouver and/or the Open Government Licence – Canada.
Related Transformers: AmazonAthenaConnector, AzureComputerVisionConnector, AzureTextAnalyticsConnector, ComprehendConnector, GoogleLanguageConnector, GoogleVisionConnector, RasterObjectDetector, S3Connector, SQSConnector"
246;98dab7eb-df35-4557-90b0-6146a2c8fa49;"Name: PointCloudReplacer
Category: Point Clouds
Description: Name: PointCloudReplacer Category: Point Clouds Description: Usage Notes
Related Transformers: AttributeFileReader, GeometryExtractor, GeometryRemover, GeometryReplacer, PointCloudExtractor, RasterExtractor, RasterReplacer"
247;acf5fd4e-68cb-44cd-af42-cd94da568baf;"Name: GeometryReplacer
Category: 
Description: Name: GeometryReplacer Category:  Description: n is used to de-serialize GML geometries.  If more than one geometry is found in the source geometry, then an aggregate of the geometries is returned.
TheGeohashencoding option stores the geometry as a string of characters that can be decoded as either a point or a rectangular area.
TheOGC Open GeoSMS, Geotagging GeoSMSandGeo (Microformat)encoding options will extract a point from the given format.
TheISO 6709 Geographic Pointencoding is used to de-serialize ISO 6709 geographic points into point geometries.  A multi point geometry is created if the source data contains multiple geographic points.
TheEncoded Polylineencoding is useful if working with the Google Maps API and can be used to represent points, lines and polygons.
TheQlikMaps Encoded Polylineencoding is like theEncoded Polylineencoding, but it can also be used to represent donuts and multi areas.
TheMGRSencoding is used to convert Military Grid Reference System (MGRS) code to longitude and latitude coordinates. The geometry of an input feature will be replaced with a point at the longitude/latitude values obtained from the MGRS code.
TheMicrosoft SQL Server Binaryencoding is used to de-serialize geometries from the native storage format used in Microsoft SQL Server.
Geometry Source
The encoded representation of the geometry to assign to the feature. An attribute can be selected if one contains this value, or text may be entered directly or fetched from aworkspaceparameter.
Remove Attribute
If this parameter is set toYes, the attribute specified inGeometry Sourcewill be removed from the resulting feature. This parameter has no effect if an attribute was not specified.
Geohash - Decode geohash as
You can choose to decode a geohash as either a point or a rectangular area. If decoded as a point, the area information is stored as attributes.
GML SRS Axis Order
IfGeometry EncodingisGML, this parameter can be used to force interpretation of the<gml:pos>and<gml:posList>into a particular axis order.
MGRS Ellipsoid
The ellipsoid used for the conversion. This can be any ellipsoid name supported by FME.
MGRS L
Related Transformers: GeometryExtractor, RasterExtractor, RasterReplacer, PointCloudExtractor, PointCloudReplacer"
248;46d47ce9-f5c0-42b4-91c7-c3440aae3263;"Name: JSONFlattener
Category: 
Description: Name: JSONFlattener Category:  Description: Output Ports

Features which are successfully processed will be output through this port.
Features which could not be successfully processed will be output through this port. Typically this happens when the attribute specified in theJSON Attributeparameter does not have a value, or has a value that is not valid JSON.

Parameters

Input Source
Allows for selecting between one of two options for JSON input:JSON DocumentorFile/URL
JSON Document
If selected, The JSON document can come from any string expression, including attribute values andworkspaceparameters.
File/URL
If selected, the JSON source can be read from a local file at a specified file path, or from the internet at a specified URL.
Recursively Flatten Objects/Arrays
If this parameter is set toNo, each JSON object key will become an attribute and the corresponding JSON value will become the attribute value.  If this parameter is set toYes, only object values which are simple types (integers, strings, etc) will become attribute values, while nested objects and arrays will be recursively flattened, as shown in the above example.
Prefix New Attribute Names With
This parameter may be used to provide a string with which to prefix the newly-created attributes.
Attributes to Expose
Exposes attributes so they can be used elsewhere in the workspace.
Attribute names may be entered directly or provided in theEnter Values for Attributes to Exposedialog accessed via the ellipsis button, where data type may also be specified.
For more information on exposed and unexposed attributes, seeUnderstanding Feature Types and Attributes.
List Attribute for JSON Parsing Errors
Name of the list attribute that contains information on JSON validation errors. The features that exit the transformer through the<Rejected>output port will have validation errors listed in this list attribute. Each validation error message is made up of four parts:

Editing Transformer Parameters

Using a set of menu options, transformer parameters can be assigned by referencing other elements in theworkspace. More advanced functions, such as an ad
Related Transformers: "
249;9b1f995d-c22b-46ac-88c3-2de89da771e0;"Name: AppearanceRemover
Category: 3D, Rasters
Description: Name: AppearanceRemover Category: 3D, Rasters Description: Removes appearances  from the front and/or back side of geometries.Removing the appearance of a geometry causes that geometry to inherit its appearance from its parent, if a parent with an appearance exists.
For more information on appearance support in FME, seeAppearances.

Configuration
Related Transformers: "
250;9b1f995d-c22b-46ac-88c3-2de89da771e0;<start>['Name: AppearanceRemover\nCategory: 3D, Rasters\nDescription: Name: AppearanceRemover Category: 3D, Rasters Description: Removes appearances  from the front and/or back side of geometries.Removing the appearance of a geometry causes that geometry to inherit its appearance from its parent, if a parent with an appearance exists.\nFor more information on appearance support in FME, seeAppearances.\n\nConfiguration\nRelated Transformers: ']<eos>
